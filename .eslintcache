[{"/Users/kaysong/Documents/hearing_test_frontend/src/index.js":"1","/Users/kaysong/Documents/hearing_test_frontend/src/App.js":"2","/Users/kaysong/Documents/hearing_test_frontend/src/pages/digits/database.jsx":"3","/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm1/data.jsx":"4","/Users/kaysong/Documents/hearing_test_frontend/src/pages/main.jsx":"5","/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm4/main.jsx":"6","/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm2/main.jsx":"7","/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm1/test.jsx":"8","/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm2/data.jsx":"9","/Users/kaysong/Documents/hearing_test_frontend/src/pages/digits/main.jsx":"10","/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm4/data.jsx":"11","/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm1/main.jsx":"12","/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm3/data.jsx":"13","/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm3/main.jsx":"14","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/database/pre-test.jsx":"15","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/database/post-test-1.jsx":"16","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/database/consents.jsx":"17","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/database/user-data.jsx":"18","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/database/post-test-3.jsx":"19","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/database/post-test-2.jsx":"20","/Users/kaysong/Documents/hearing_test_frontend/src/components/partials/csv.jsx":"21","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/start/birth.jsx":"22","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/test/adjustment.jsx":"23","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/start/hearing.jsx":"24","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/start/consent.jsx":"25","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/post-test/result-video.jsx":"26","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/post-test/submit.jsx":"27","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/test/speech-in-noise.jsx":"28","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/test/test-demo.jsx":"29","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/post-test/end.jsx":"30","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/test/environment.jsx":"31","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/post-test/post-test-questions.jsx":"32","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/start/welcome.jsx":"33","/Users/kaysong/Documents/hearing_test_frontend/src/assets/signal-loss/data-table.jsx":"34","/Users/kaysong/Documents/hearing_test_frontend/src/assets/digits/data-card.jsx":"35","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/test/mid-page.jsx":"36","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/test/test.jsx":"37","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/test/source2.jsx":"38","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/test/audioloss1.jsx":"39","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/test/audioloss2.jsx":"40","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/post-test/questions1.jsx":"41","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/post-test/questions3.jsx":"42","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/test/source1.jsx":"43","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/pre-test/ICF.jsx":"44","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/post-test/questions4.jsx":"45","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/pre-test/questions.jsx":"46","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/post-test/questions2.jsx":"47","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/post-test/end.jsx":"48","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/pre-test/adjustment.jsx":"49","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/pre-test/welcome.jsx":"50","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/test/source2.jsx":"51","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/pre-test/demo-info.jsx":"52","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/test/source1.jsx":"53","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/test/mid-page.jsx":"54","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/test/source3.jsx":"55","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/test/test.jsx":"56","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/post-test/end.jsx":"57","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/test/source4.jsx":"58","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/post-test/questions2.jsx":"59","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/post-test/questions3.jsx":"60","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/post-test/questions4.jsx":"61","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/post-test/questions1.jsx":"62","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/post-test/questions4.jsx":"63","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/test/test.jsx":"64","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/post-test/end.jsx":"65","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/test/source2.jsx":"66","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/test/audioloss2.jsx":"67","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/test/mid-page.jsx":"68","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/test/audioloss1.jsx":"69","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/test/source1.jsx":"70","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/post-test/questions2.jsx":"71","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/post-test/questions3.jsx":"72","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/post-test/questions1.jsx":"73","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/post-test/questions4.jsx":"74","/Users/kaysong/Documents/hearing_test_frontend/src/assets/digits/question-table.jsx":"75","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/pre-test/demo-info.jsx":"76","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/post-test/questions1.jsx":"77","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/post-test/questions2.jsx":"78","/Users/kaysong/Documents/hearing_test_frontend/src/assets/digits/question2-table.jsx":"79","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/test/mid-page.jsx":"80","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/post-test/questions3.jsx":"81","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/pre-test/ICF.jsx":"82","/Users/kaysong/Documents/hearing_test_frontend/src/assets/digits/user-data-table.jsx":"83","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/test/test.jsx":"84","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/pre-test/adjustment.jsx":"85","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/pre-test/questions.jsx":"86","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/post-test/end.jsx":"87","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/test/source2.jsx":"88","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/test/source1.jsx":"89","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/test/audioloss2.jsx":"90","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/pre-test/welcome.jsx":"91","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/test/audioloss1.jsx":"92","/Users/kaysong/Documents/hearing_test_frontend/src/assets/digits/score-slider.jsx":"93","/Users/kaysong/Documents/hearing_test_frontend/src/assets/digits/count-down.jsx":"94","/Users/kaysong/Documents/hearing_test_frontend/src/assets/digits/volume-slider.jsx":"95","/Users/kaysong/Documents/hearing_test_frontend/src/assets/signal-loss/volume-slider.jsx":"96","/Users/kaysong/Documents/hearing_test_frontend/src/assets/signal-loss/pdf-reviewer.jsx":"97","/Users/kaysong/Documents/hearing_test_frontend/src/components/partials/footer.jsx":"98","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/pre-test/demo-info.jsx":"99","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/pre-test/ICF.jsx":"100","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/pre-test/questions.jsx":"101","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/pre-test/adjustment.jsx":"102","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/pre-test/welcome.jsx":"103","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/pre-test/welcome.jsx":"104","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/pre-test/adjustment.jsx":"105","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/pre-test/questions.jsx":"106","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/pre-test/ICF.jsx":"107","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/pre-test/demo-info.jsx":"108"},{"size":158,"mtime":1613447803654,"results":"109","hashOfConfig":"110"},{"size":2580,"mtime":1614566495725,"results":"111","hashOfConfig":"110"},{"size":1690,"mtime":1614162921487,"results":"112","hashOfConfig":"110"},{"size":9718,"mtime":1614722724203,"results":"113","hashOfConfig":"110"},{"size":2736,"mtime":1614566544455,"results":"114","hashOfConfig":"110"},{"size":8840,"mtime":1614478668502,"results":"115","hashOfConfig":"110"},{"size":8804,"mtime":1614566156463,"results":"116","hashOfConfig":"110"},{"size":1804,"mtime":1614462325689,"results":"117","hashOfConfig":"110"},{"size":9718,"mtime":1614722724203,"results":"118","hashOfConfig":"110"},{"size":4196,"mtime":1613447803655,"results":"119","hashOfConfig":"110"},{"size":9718,"mtime":1614722724203,"results":"120","hashOfConfig":"110"},{"size":8840,"mtime":1614478653701,"results":"121","hashOfConfig":"110"},{"size":9718,"mtime":1614722724203,"results":"122","hashOfConfig":"110"},{"size":8840,"mtime":1614547268427,"results":"123","hashOfConfig":"110"},{"size":2043,"mtime":1614163218157,"results":"124","hashOfConfig":"110"},{"size":2056,"mtime":1614163201345,"results":"125","hashOfConfig":"110"},{"size":2040,"mtime":1614163194838,"results":"126","hashOfConfig":"110"},{"size":4902,"mtime":1614462269384,"results":"127","hashOfConfig":"110"},{"size":2056,"mtime":1614163212093,"results":"128","hashOfConfig":"110"},{"size":3269,"mtime":1614163206143,"results":"129","hashOfConfig":"110"},{"size":319,"mtime":1613447803653,"results":"130","hashOfConfig":"110"},{"size":7222,"mtime":1613447803652,"results":"131","hashOfConfig":"110"},{"size":3801,"mtime":1614462279471,"results":"132","hashOfConfig":"110"},{"size":4685,"mtime":1614162774983,"results":"133","hashOfConfig":"110"},{"size":9438,"mtime":1613447803653,"results":"134","hashOfConfig":"110"},{"size":3447,"mtime":1613447803652,"results":"135","hashOfConfig":"110"},{"size":1051,"mtime":1613447803652,"results":"136","hashOfConfig":"110"},{"size":11198,"mtime":1614462311760,"results":"137","hashOfConfig":"110"},{"size":10556,"mtime":1614163797854,"results":"138","hashOfConfig":"110"},{"size":626,"mtime":1614478560596,"results":"139","hashOfConfig":"110"},{"size":793,"mtime":1613447803653,"results":"140","hashOfConfig":"110"},{"size":5763,"mtime":1614462287774,"results":"141","hashOfConfig":"110"},{"size":326,"mtime":1613447803653,"results":"142","hashOfConfig":"110"},{"size":1408,"mtime":1613849348372,"results":"143","hashOfConfig":"110"},{"size":1049,"mtime":1613447803651,"results":"144","hashOfConfig":"110"},{"size":496,"mtime":1614164439020,"results":"145","hashOfConfig":"110"},{"size":16264,"mtime":1615179346086,"results":"146","hashOfConfig":"110"},{"size":20349,"mtime":1615179685512,"results":"147","hashOfConfig":"110"},{"size":20332,"mtime":1615179712777,"results":"148","hashOfConfig":"110"},{"size":20339,"mtime":1615179705465,"results":"149","hashOfConfig":"110"},{"size":3594,"mtime":1615180263785,"results":"150","hashOfConfig":"110"},{"size":3594,"mtime":1615180263786,"results":"151","hashOfConfig":"110"},{"size":20335,"mtime":1615179697306,"results":"152","hashOfConfig":"110"},{"size":7759,"mtime":1615180119854,"results":"153","hashOfConfig":"110"},{"size":3597,"mtime":1615180263787,"results":"154","hashOfConfig":"110"},{"size":4136,"mtime":1615180119856,"results":"155","hashOfConfig":"110"},{"size":3594,"mtime":1615180263786,"results":"156","hashOfConfig":"110"},{"size":733,"mtime":1615180263785,"results":"157","hashOfConfig":"110"},{"size":5161,"mtime":1615180119855,"results":"158","hashOfConfig":"110"},{"size":387,"mtime":1615180119856,"results":"159","hashOfConfig":"110"},{"size":19774,"mtime":1614565663409,"results":"160","hashOfConfig":"110"},{"size":5413,"mtime":1615180119855,"results":"161","hashOfConfig":"110"},{"size":19761,"mtime":1614565663409,"results":"162","hashOfConfig":"110"},{"size":496,"mtime":1614565663407,"results":"163","hashOfConfig":"110"},{"size":19761,"mtime":1614565696015,"results":"164","hashOfConfig":"110"},{"size":15723,"mtime":1615179311705,"results":"165","hashOfConfig":"110"},{"size":733,"mtime":1615180256750,"results":"166","hashOfConfig":"110"},{"size":19761,"mtime":1614565701467,"results":"167","hashOfConfig":"110"},{"size":3594,"mtime":1615180256751,"results":"168","hashOfConfig":"110"},{"size":3594,"mtime":1615180256751,"results":"169","hashOfConfig":"110"},{"size":3597,"mtime":1615180256752,"results":"170","hashOfConfig":"110"},{"size":3594,"mtime":1615180256751,"results":"171","hashOfConfig":"110"},{"size":3597,"mtime":1615180259963,"results":"172","hashOfConfig":"110"},{"size":16281,"mtime":1615179360505,"results":"173","hashOfConfig":"110"},{"size":733,"mtime":1615180259961,"results":"174","hashOfConfig":"110"},{"size":20434,"mtime":1615178156343,"results":"175","hashOfConfig":"110"},{"size":20425,"mtime":1615178151575,"results":"176","hashOfConfig":"110"},{"size":496,"mtime":1614547138968,"results":"177","hashOfConfig":"110"},{"size":20418,"mtime":1615178148842,"results":"178","hashOfConfig":"110"},{"size":20421,"mtime":1615178154093,"results":"179","hashOfConfig":"110"},{"size":3594,"mtime":1615180259962,"results":"180","hashOfConfig":"110"},{"size":3594,"mtime":1615180259962,"results":"181","hashOfConfig":"110"},{"size":3594,"mtime":1615180259961,"results":"182","hashOfConfig":"110"},{"size":3597,"mtime":1615180243241,"results":"183","hashOfConfig":"110"},{"size":1514,"mtime":1613447803651,"results":"184","hashOfConfig":"110"},{"size":5413,"mtime":1615180062153,"results":"185","hashOfConfig":"110"},{"size":3594,"mtime":1615180208422,"results":"186","hashOfConfig":"110"},{"size":3594,"mtime":1615180211904,"results":"187","hashOfConfig":"110"},{"size":1991,"mtime":1613447803651,"results":"188","hashOfConfig":"110"},{"size":496,"mtime":1613447803654,"results":"189","hashOfConfig":"110"},{"size":3594,"mtime":1615180215139,"results":"190","hashOfConfig":"110"},{"size":7759,"mtime":1615180070182,"results":"191","hashOfConfig":"110"},{"size":3135,"mtime":1613447803651,"results":"192","hashOfConfig":"110"},{"size":15723,"mtime":1614722538841,"results":"193","hashOfConfig":"110"},{"size":5161,"mtime":1615179993534,"results":"194","hashOfConfig":"110"},{"size":4136,"mtime":1615180082509,"results":"195","hashOfConfig":"110"},{"size":733,"mtime":1614722800628,"results":"196","hashOfConfig":"110"},{"size":19774,"mtime":1614548215608,"results":"197","hashOfConfig":"110"},{"size":19761,"mtime":1614548177070,"results":"198","hashOfConfig":"110"},{"size":19766,"mtime":1614548235755,"results":"199","hashOfConfig":"110"},{"size":387,"mtime":1613447803654,"results":"200","hashOfConfig":"110"},{"size":19759,"mtime":1614548244804,"results":"201","hashOfConfig":"110"},{"size":890,"mtime":1613447803651,"results":"202","hashOfConfig":"110"},{"size":694,"mtime":1613447803651,"results":"203","hashOfConfig":"110"},{"size":1220,"mtime":1613447803651,"results":"204","hashOfConfig":"110"},{"size":1219,"mtime":1613615489335,"results":"205","hashOfConfig":"110"},{"size":1436,"mtime":1613456054549,"results":"206","hashOfConfig":"110"},{"size":737,"mtime":1613447803653,"results":"207","hashOfConfig":"110"},{"size":5413,"mtime":1615180121382,"results":"208","hashOfConfig":"110"},{"size":7759,"mtime":1615180121381,"results":"209","hashOfConfig":"110"},{"size":4136,"mtime":1615180121384,"results":"210","hashOfConfig":"110"},{"size":5161,"mtime":1615180121382,"results":"211","hashOfConfig":"110"},{"size":387,"mtime":1615180121384,"results":"212","hashOfConfig":"110"},{"size":387,"mtime":1615180122790,"results":"213","hashOfConfig":"110"},{"size":5161,"mtime":1615180122788,"results":"214","hashOfConfig":"110"},{"size":4136,"mtime":1615180122789,"results":"215","hashOfConfig":"110"},{"size":7759,"mtime":1615180122788,"results":"216","hashOfConfig":"110"},{"size":5413,"mtime":1615180122789,"results":"217","hashOfConfig":"110"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"220","usedDeprecatedRules":"221"},"1h3fu1e",{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"221"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"221"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"221"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"221"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"221"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"221"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"221"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"221"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"221"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"221"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"221"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"221"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"221"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"221"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"221"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"331","messages":"332","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"221"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"365","messages":"366","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"221"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"221"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"221"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"221"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"221"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"221"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"221"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"221"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"221"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"440","messages":"441","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"444","messages":"445","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"446","messages":"447","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"448","messages":"449","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"450","messages":"451","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"454","messages":"455","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kaysong/Documents/hearing_test_frontend/src/index.js",["458"],"\"use strict\"\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));",["459","460"],"/Users/kaysong/Documents/hearing_test_frontend/src/App.js",[],"/Users/kaysong/Documents/hearing_test_frontend/src/pages/digits/database.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm1/data.jsx",["461","462","463","464","465","466","467","468","469"],"import React from \"react\";\nimport axios from \"axios\";\nimport { Button, Container, TextField } from \"@material-ui/core\";\nimport Table from \"../../assets/signal-loss/data-table\";\nimport { ExportReactCSV } from \"../../components/partials/csv\";\n\nclass Data extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { newReversals: null, reversals: null, array: [], login: false, password: \"\", datas: [], headers: [] };\n  }\n\n  componentDidMount = async () => {\n    const doc = await axios.get(\"/api/crm1/user/data\");\n    const setting = await axios.get(\"/api/crm1/reversals\");\n    const array = [];\n    const datas = [];\n    const headers = [\n      \"ID\", \"Email\", \"Reversals\", \"Gender\", \"Province\", \"BirthYear\", \"DidWearAids\", \"WillWearAids\", \"Output\", \n      \"preQuestion1\", \"preQuestion2\", \"preQuestion3\",\n      \"block1\", \"trials1\", \"SNR1\", \"b1-postQuestion1\", \"b1-postQuestion2\",\n      \"block2\", \"trials2\", \"SNR2\", \"b2-postQuestion1\", \"b2-postQuestion2\",\n      \"block3\", \"trials3\", \"SNR3\", \"b3-postQuestion1\", \"b3-postQuestion2\",\n      \"block4\", \"trials4\", \"SNR4\", \"b4-postQuestion1\", \"b4-postQuestion2\",\n    ];\n    \n    // wirte headers\n    // find the largest trials in each block\n    let trials1 = 0;\n    let trials2 = 0;\n    let trials3 = 0;\n    let trials4 = 0;\n    doc.data.map(data => {\n      if (data[\"timer1\"].length > trials1) trials1 = data[\"timer1\"].length;\n      if (data[\"timer2\"].length > trials2) trials2 = data[\"timer2\"].length;\n      if (data[\"timer3\"].length > trials3) trials3 = data[\"timer3\"].length;\n      if (data[\"timer4\"].length > trials4) trials4 = data[\"timer4\"].length;\n    })\n    for (let i=1; i<=4; i++) {\n      let trials;\n      switch(i){\n        case 1:\n          trials = trials1;\n          break;\n        case 2:\n          trials = trials2;\n          break;\n        case 3:\n          trials = trials3;\n          break;\n        case 4:\n          trials = trials4;\n          break;\n      }\n      for (let j=1; j<=trials; j++) {\n        headers.push(`timer${i}-t${j}`);\n        headers.push(`dbs${i}-t${j}`);\n        headers.push(`question${i}-t${j}`);\n        headers.push(`answer${i}-t${j}`);\n        headers.push(`correct${i}-t${j}`);\n      }\n    };\n    // write datas\n    doc.data.map(data => {\n      const row = [\n        String(data[\"ID\"]), String(data[\"email\"]), String(data[\"reversals\"]), String(data[\"gender\"]), String(data[\"province\"]),\n        String(data[\"age\"]), String(data[\"didWearAids\"]), String(data[\"willWearAids\"]), String(data[\"output\"])\n      ];\n      // add pre and post questions\n      Object.keys(data[\"preQuestions\"]).map(key => {\n        row.push(data[\"preQuestions\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][0]), String(data[\"trials1\"]), String(data[\"SNR\"][0])\n      )\n      Object.keys(data[\"postQuestions1\"]).map(key => {\n        row.push(data[\"postQuestions1\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][1]), String(data[\"trials2\"]), String(data[\"SNR\"][1])\n      )\n      Object.keys(data[\"postQuestions2\"]).map(key => {\n        row.push(data[\"postQuestions2\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][2]), String(data[\"trials3\"]), String(data[\"SNR\"][2])\n      )\n      Object.keys(data[\"postQuestions3\"]).map(key => {\n        row.push(data[\"postQuestions3\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][3]), String(data[\"trials4\"]), String(data[\"SNR\"][3])\n      )\n      Object.keys(data[\"postQuestions4\"]).map(key => {\n        row.push(data[\"postQuestions4\"][key]);\n      });\n      // add correct, questions, answers, etc.\n      for (let i=1; i<=4; i++) {\n        let timer;\n        let dbs;\n        let questions;\n        let answers;\n        let correct;\n        let trials;\n        switch(i){\n          case 1:\n            timer = \"timer1\";\n            dbs = \"dbs1\";\n            questions = \"questions1\";\n            answers = \"answers1\";\n            correct = \"correct1\";\n            trials = trials1;\n            break;\n          case 2:\n            timer = \"timer2\";\n            dbs = \"dbs2\";\n            questions = \"questions2\";\n            answers = \"answers2\";\n            correct = \"correct2\";\n            trials = trials2;\n            break;\n          case 3:\n            timer = \"timer3\";\n            dbs = \"dbs3\";\n            questions = \"questions3\";\n            answers = \"answers3\";\n            correct = \"correct3\";\n            trials = trials3;\n            break;\n          case 4:\n            timer = \"timer4\";\n            dbs = \"dbs4\";\n            questions = \"questions4\";\n            answers = \"answers4\";\n            correct = \"correct4\";\n            trials = trials4;\n            break;\n          default:\n            break;\n        }\n        for (let j=0; j<trials; j++) {\n            row.push(data[timer][j]);\n            row.push(data[dbs][j+1]);\n            row.push(data[questions][j]);\n            row.push(data[answers][j]);\n            row.push(JSON.stringify(data[correct][j]));\n        }\n      }\n        datas.push(row);\n    });\n    // write the array\n    doc.data.map(data => {\n      const obj = {};\n      obj[\"_id\"] = data._id;\n      obj[\"ID\"] = String(data[\"ID\"]);\n      array.push(obj);\n    });\n    this.setState({ array, headers, datas, reversals: setting.data.reversals });\n  }\n\n  deleteData = async (id) => {\n    await axios.delete(\"/api/crm1/user/data/\" + id);\n    this.componentDidMount();\n  }\n\n  login = () => {\n    if (this.state.password === \"thisisthepassword\") {\n      this.setState({ login: true });\n    } else {\n      this.setState({password: \"\"});\n      window.alert(\"Wrong login information, retry please!\");\n    }\n  }\n\n  updateReversals = async () => {\n    await axios.put(\"/api/crm1/reversals\", {reversals: this.state.newReversals});\n    this.componentDidMount();\n  }\n\n  render() {\n    const { array, login, password, datas, headers, reversals, newReversals } = this.state;\n    return (\n      login ?\n        <Container>\n          <br />\n          <h3 style={{ textAlign: \"center\" }}>Welcome to CRM1 database</h3>\n              <div>\n                <hr />\n                <div id=\"spreadsheet\">\n                  <h4>Spreadsheet Download</h4>\n                  <ExportReactCSV data={datas} headers={headers} fileName={\"HearingTestData\"} />\n                  <br /><br />\n                  <h5>Legend for data label</h5>\n                  <ol>\n                    <li>Reversals: the amount of reversals</li>\n                    <li>block1: the audio type of block 1</li>\n                    <li>trials1: the amount of trials in block 1</li>\n                    <li>SNR1: the average SNR of final 10 trials (if there are over 10 trials) in block 1</li>\n                    <li>DidWearAids: whether the user has ever worn hearing aids or not</li>\n                    <li>WillWearAids: whether the user will hearing aids during this test or not</li>\n                    <li>OutPut: Whether the user will use speaker or headphone during the test</li>\n                    <li>timer1-t1: how much time (in millisecond) the user took during the block 1 trial 1</li>\n                    <li>dbs1-t1: how much decibels the audio has at the end of the block 1 trial 1 (decibel starts from 0 in each block)</li>\n                    <li>question1-t1: the real answer in block 1 trial 1</li>\n                    <li>answer1-t1: the user's answer in block 1 trial 1</li>\n                    <p>(question and answer are composed by 2 digits, the first one is the color: 1 -{\">\"} red, 2 -{\">\"} green, 3 -{\">\"} blue, 4 -{\">\"} white, and the second one is the number )</p>\n                    <li>correct1-t1: whether the user answered the question correct or not in block 1 trial 1</li>\n                    <p>(all 1st number represents the # of block, 2nd number represents the # of trial)</p>\n                    <li>b1-postQuestion1: the answer for the first post-test question in block 1</li>\n                  </ol>\n                </div>\n                <hr />\n                <div id=\"table\">\n                  <h4>Data Operation</h4>\n                  <Table data={array} deleteData={this.deleteData} />\n                  <br /><br />\n                  <h5>\n                    Pre-questions:\n                  </h5>\n                  <h6>1. I think my hearing in general is</h6>\n                  <h6>2. I think my hearing in quiet is</h6>\n                  <h6>3. I think my hearing in background noise is</h6>\n                  <h5>\n                    Post-questions:\n                  </h5>\n                  <h6>1. How difficult did you find this block? Please make a mark on the line below.</h6>\n                  <h6>2. How much effort did it take for you to complete this block? Please make a mark on the line below.</h6>\n                </div>\n                <hr />\n                <div id=\"reversals\">\n                  <h4>Current Reversals: {reversals}</h4>\n                  <TextField label=\"new reversals\" value={newReversals} type=\"number\" onChange={(e) => this.setState({newReversals: Number(e.target.value)})} />\n                  <Button color=\"primary\" variant=\"contained\" onClick={this.updateReversals} >Update</Button>\n                </div>\n                <hr />\n                <br />\n              </div>\n        </Container>\n        :\n        <Container>\n          <div style={{ position: \"fixed\", left: \"30%\", right: \"30%\", top: \"20%\" }}>\n            <TextField value={password} style={{ width: 300 }} onChange={(e) => this.setState({ password: e.target.value })} label=\"password\" type=\"password\" /><br /><br />\n            <Button variant=\"contained\" color=\"primary\" onClick={this.login} >Log In</Button>\n          </div>\n        </Container>\n    );\n  }\n}\n\nexport default Data;\n","/Users/kaysong/Documents/hearing_test_frontend/src/pages/main.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm4/main.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm2/main.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm1/test.jsx",["470"],"import React from \"react\";\nimport { Button } from \"@material-ui/core\";\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sourceVolume: 0.5,\n      index: 0,\n      dbs: [0],\n      noise: new Audio(process.env.PUBLIC_URL + \"/functional-audio/testnoise.wav\"),\n      audioStart: false\n    };\n  }\n\n  switch = async () => {\n    if (!this.state.audioStart) {\n      this.state.noise.volume = this.state.sourceVolume;\n      this.setState({ audioStart: true })\n      await this.state.noise.play();\n    } else {\n      this.setState({ audioStart: false })\n      this.state.noise.pause();\n    }\n  }\n\n  componentDidUpdate = () => {\n    this.state.noise.volume = this.state.sourceVolume;\n  }\n\n  goEasier = () => {\n    const { sourceVolume, index, dbs } = this.state;\n    dbs.push(dbs[index] + 3);\n    this.setState({ dbs, index: index + 1 });\n    if (sourceVolume * 10 ** (2 / 20) > 1) {\n      this.setState({ sourceVolume: 1 });\n    } else {\n      this.setState({ sourceVolume: sourceVolume * 10 ** (3 / 20) });\n    }\n  };\n\n  goHarder = () => {\n    const { sourceVolume, index, dbs } = this.state;\n    dbs.push(dbs[index] - 1);\n    this.setState({ dbs, index: index + 1, sourceVolume: sourceVolume * 10 ** (-1 / 20) });\n  };\n\n  render() {\n    const { dbs } = this.state;\n    return (\n      <div style={{ position: \"relative\", marginLeft: \"30%\", marginTop: \"20%\" }}>\n        <div>Testing page!</div>\n        <h1>{dbs[dbs.length - 1]}</h1>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.goEasier}>Increase 3 dB</Button>\n        <Button variant=\"contained\" color=\"secondary\" onClick={this.goHarder}>Decrease 1 dB</Button>\n        <Button variant=\"contained\" onClick={this.switch}>Start / Stop</Button>\n      </div>\n    )\n  }\n}\n\nexport default Test;\n","/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm2/data.jsx",["471","472","473","474","475","476","477","478","479"],"import React from \"react\";\nimport axios from \"axios\";\nimport { Button, Container, TextField } from \"@material-ui/core\";\nimport Table from \"../../assets/signal-loss/data-table\";\nimport { ExportReactCSV } from \"../../components/partials/csv\";\n\nclass Data extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { newReversals: null, reversals: null, array: [], login: false, password: \"\", datas: [], headers: [] };\n  }\n\n  componentDidMount = async () => {\n    const doc = await axios.get(\"/api/crm2/user/data\");\n    const setting = await axios.get(\"/api/crm2/reversals\");\n    const array = [];\n    const datas = [];\n    const headers = [\n      \"ID\", \"Email\", \"Reversals\", \"Gender\", \"Province\", \"BirthYear\", \"DidWearAids\", \"WillWearAids\", \"Output\", \n      \"preQuestion1\", \"preQuestion2\", \"preQuestion3\",\n      \"block1\", \"trials1\", \"SNR1\", \"b1-postQuestion1\", \"b1-postQuestion2\",\n      \"block2\", \"trials2\", \"SNR2\", \"b2-postQuestion1\", \"b2-postQuestion2\",\n      \"block3\", \"trials3\", \"SNR3\", \"b3-postQuestion1\", \"b3-postQuestion2\",\n      \"block4\", \"trials4\", \"SNR4\", \"b4-postQuestion1\", \"b4-postQuestion2\",\n    ];\n    \n    // wirte headers\n    // find the largest trials in each block\n    let trials1 = 0;\n    let trials2 = 0;\n    let trials3 = 0;\n    let trials4 = 0;\n    doc.data.map(data => {\n      if (data[\"timer1\"].length > trials1) trials1 = data[\"timer1\"].length;\n      if (data[\"timer2\"].length > trials2) trials2 = data[\"timer2\"].length;\n      if (data[\"timer3\"].length > trials3) trials3 = data[\"timer3\"].length;\n      if (data[\"timer4\"].length > trials4) trials4 = data[\"timer4\"].length;\n    })\n    for (let i=1; i<=4; i++) {\n      let trials;\n      switch(i){\n        case 1:\n          trials = trials1;\n          break;\n        case 2:\n          trials = trials2;\n          break;\n        case 3:\n          trials = trials3;\n          break;\n        case 4:\n          trials = trials4;\n          break;\n      }\n      for (let j=1; j<=trials; j++) {\n        headers.push(`timer${i}-t${j}`);\n        headers.push(`dbs${i}-t${j}`);\n        headers.push(`question${i}-t${j}`);\n        headers.push(`answer${i}-t${j}`);\n        headers.push(`correct${i}-t${j}`);\n      }\n    };\n    // write datas\n    doc.data.map(data => {\n      const row = [\n        String(data[\"ID\"]), String(data[\"email\"]), String(data[\"reversals\"]), String(data[\"gender\"]), String(data[\"province\"]),\n        String(data[\"age\"]), String(data[\"didWearAids\"]), String(data[\"willWearAids\"]), String(data[\"output\"])\n      ];\n      // add pre and post questions\n      Object.keys(data[\"preQuestions\"]).map(key => {\n        row.push(data[\"preQuestions\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][0]), String(data[\"trials1\"]), String(data[\"SNR\"][0])\n      )\n      Object.keys(data[\"postQuestions1\"]).map(key => {\n        row.push(data[\"postQuestions1\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][1]), String(data[\"trials2\"]), String(data[\"SNR\"][1])\n      )\n      Object.keys(data[\"postQuestions2\"]).map(key => {\n        row.push(data[\"postQuestions2\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][2]), String(data[\"trials3\"]), String(data[\"SNR\"][2])\n      )\n      Object.keys(data[\"postQuestions3\"]).map(key => {\n        row.push(data[\"postQuestions3\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][3]), String(data[\"trials4\"]), String(data[\"SNR\"][3])\n      )\n      Object.keys(data[\"postQuestions4\"]).map(key => {\n        row.push(data[\"postQuestions4\"][key]);\n      });\n      // add correct, questions, answers, etc.\n      for (let i=1; i<=4; i++) {\n        let timer;\n        let dbs;\n        let questions;\n        let answers;\n        let correct;\n        let trials;\n        switch(i){\n          case 1:\n            timer = \"timer1\";\n            dbs = \"dbs1\";\n            questions = \"questions1\";\n            answers = \"answers1\";\n            correct = \"correct1\";\n            trials = trials1;\n            break;\n          case 2:\n            timer = \"timer2\";\n            dbs = \"dbs2\";\n            questions = \"questions2\";\n            answers = \"answers2\";\n            correct = \"correct2\";\n            trials = trials2;\n            break;\n          case 3:\n            timer = \"timer3\";\n            dbs = \"dbs3\";\n            questions = \"questions3\";\n            answers = \"answers3\";\n            correct = \"correct3\";\n            trials = trials3;\n            break;\n          case 4:\n            timer = \"timer4\";\n            dbs = \"dbs4\";\n            questions = \"questions4\";\n            answers = \"answers4\";\n            correct = \"correct4\";\n            trials = trials4;\n            break;\n          default:\n            break;\n        }\n        for (let j=0; j<trials; j++) {\n            row.push(data[timer][j]);\n            row.push(data[dbs][j+1]);\n            row.push(data[questions][j]);\n            row.push(data[answers][j]);\n            row.push(JSON.stringify(data[correct][j]));\n        }\n      }\n        datas.push(row);\n    });\n    // write the array\n    doc.data.map(data => {\n      const obj = {};\n      obj[\"_id\"] = data._id;\n      obj[\"ID\"] = String(data[\"ID\"]);\n      array.push(obj);\n    });\n    this.setState({ array, headers, datas, reversals: setting.data.reversals });\n  }\n\n  deleteData = async (id) => {\n    await axios.delete(\"/api/crm2/user/data/\" + id);\n    this.componentDidMount();\n  }\n\n  login = () => {\n    if (this.state.password === \"thisisthepassword\") {\n      this.setState({ login: true });\n    } else {\n      this.setState({password: \"\"});\n      window.alert(\"Wrong login information, retry please!\");\n    }\n  }\n\n  updateReversals = async () => {\n    await axios.put(\"/api/crm2/reversals\", {reversals: this.state.newReversals});\n    this.componentDidMount();\n  }\n\n  render() {\n    const { array, login, password, datas, headers, reversals, newReversals } = this.state;\n    return (\n      login ?\n        <Container>\n          <br />\n          <h3 style={{ textAlign: \"center\" }}>Welcome to CRM1 database</h3>\n              <div>\n                <hr />\n                <div id=\"spreadsheet\">\n                  <h4>Spreadsheet Download</h4>\n                  <ExportReactCSV data={datas} headers={headers} fileName={\"HearingTestData\"} />\n                  <br /><br />\n                  <h5>Legend for data label</h5>\n                  <ol>\n                    <li>Reversals: the amount of reversals</li>\n                    <li>block1: the audio type of block 1</li>\n                    <li>trials1: the amount of trials in block 1</li>\n                    <li>SNR1: the average SNR of final 10 trials (if there are over 10 trials) in block 1</li>\n                    <li>DidWearAids: whether the user has ever worn hearing aids or not</li>\n                    <li>WillWearAids: whether the user will hearing aids during this test or not</li>\n                    <li>OutPut: Whether the user will use speaker or headphone during the test</li>\n                    <li>timer1-t1: how much time (in millisecond) the user took during the block 1 trial 1</li>\n                    <li>dbs1-t1: how much decibels the audio has at the end of the block 1 trial 1 (decibel starts from 0 in each block)</li>\n                    <li>question1-t1: the real answer in block 1 trial 1</li>\n                    <li>answer1-t1: the user's answer in block 1 trial 1</li>\n                    <p>(question and answer are composed by 2 digits, the first one is the color: 1 -{\">\"} red, 2 -{\">\"} green, 3 -{\">\"} blue, 4 -{\">\"} white, and the second one is the number )</p>\n                    <li>correct1-t1: whether the user answered the question correct or not in block 1 trial 1</li>\n                    <p>(all 1st number represents the # of block, 2nd number represents the # of trial)</p>\n                    <li>b1-postQuestion1: the answer for the first post-test question in block 1</li>\n                  </ol>\n                </div>\n                <hr />\n                <div id=\"table\">\n                  <h4>Data Operation</h4>\n                  <Table data={array} deleteData={this.deleteData} />\n                  <br /><br />\n                  <h5>\n                    Pre-questions:\n                  </h5>\n                  <h6>1. I think my hearing in general is</h6>\n                  <h6>2. I think my hearing in quiet is</h6>\n                  <h6>3. I think my hearing in background noise is</h6>\n                  <h5>\n                    Post-questions:\n                  </h5>\n                  <h6>1. How difficult did you find this block? Please make a mark on the line below.</h6>\n                  <h6>2. How much effort did it take for you to complete this block? Please make a mark on the line below.</h6>\n                </div>\n                <hr />\n                <div id=\"reversals\">\n                  <h4>Current Reversals: {reversals}</h4>\n                  <TextField label=\"new reversals\" value={newReversals} type=\"number\" onChange={(e) => this.setState({newReversals: Number(e.target.value)})} />\n                  <Button color=\"primary\" variant=\"contained\" onClick={this.updateReversals} >Update</Button>\n                </div>\n                <hr />\n                <br />\n              </div>\n        </Container>\n        :\n        <Container>\n          <div style={{ position: \"fixed\", left: \"30%\", right: \"30%\", top: \"20%\" }}>\n            <TextField value={password} style={{ width: 300 }} onChange={(e) => this.setState({ password: e.target.value })} label=\"password\" type=\"password\" /><br /><br />\n            <Button variant=\"contained\" color=\"primary\" onClick={this.login} >Log In</Button>\n          </div>\n        </Container>\n    );\n  }\n}\n\nexport default Data;\n","/Users/kaysong/Documents/hearing_test_frontend/src/pages/digits/main.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm4/data.jsx",["480","481","482","483","484","485","486","487","488"],"import React from \"react\";\nimport axios from \"axios\";\nimport { Button, Container, TextField } from \"@material-ui/core\";\nimport Table from \"../../assets/signal-loss/data-table\";\nimport { ExportReactCSV } from \"../../components/partials/csv\";\n\nclass Data extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { newReversals: null, reversals: null, array: [], login: false, password: \"\", datas: [], headers: [] };\n  }\n\n  componentDidMount = async () => {\n    const doc = await axios.get(\"/api/crm4/user/data\");\n    const setting = await axios.get(\"/api/crm4/reversals\");\n    const array = [];\n    const datas = [];\n    const headers = [\n      \"ID\", \"Email\", \"Reversals\", \"Gender\", \"Province\", \"BirthYear\", \"DidWearAids\", \"WillWearAids\", \"Output\", \n      \"preQuestion1\", \"preQuestion2\", \"preQuestion3\",\n      \"block1\", \"trials1\", \"SNR1\", \"b1-postQuestion1\", \"b1-postQuestion2\",\n      \"block2\", \"trials2\", \"SNR2\", \"b2-postQuestion1\", \"b2-postQuestion2\",\n      \"block3\", \"trials3\", \"SNR3\", \"b3-postQuestion1\", \"b3-postQuestion2\",\n      \"block4\", \"trials4\", \"SNR4\", \"b4-postQuestion1\", \"b4-postQuestion2\",\n    ];\n    \n    // wirte headers\n    // find the largest trials in each block\n    let trials1 = 0;\n    let trials2 = 0;\n    let trials3 = 0;\n    let trials4 = 0;\n    doc.data.map(data => {\n      if (data[\"timer1\"].length > trials1) trials1 = data[\"timer1\"].length;\n      if (data[\"timer2\"].length > trials2) trials2 = data[\"timer2\"].length;\n      if (data[\"timer3\"].length > trials3) trials3 = data[\"timer3\"].length;\n      if (data[\"timer4\"].length > trials4) trials4 = data[\"timer4\"].length;\n    })\n    for (let i=1; i<=4; i++) {\n      let trials;\n      switch(i){\n        case 1:\n          trials = trials1;\n          break;\n        case 2:\n          trials = trials2;\n          break;\n        case 3:\n          trials = trials3;\n          break;\n        case 4:\n          trials = trials4;\n          break;\n      }\n      for (let j=1; j<=trials; j++) {\n        headers.push(`timer${i}-t${j}`);\n        headers.push(`dbs${i}-t${j}`);\n        headers.push(`question${i}-t${j}`);\n        headers.push(`answer${i}-t${j}`);\n        headers.push(`correct${i}-t${j}`);\n      }\n    };\n    // write datas\n    doc.data.map(data => {\n      const row = [\n        String(data[\"ID\"]), String(data[\"email\"]), String(data[\"reversals\"]), String(data[\"gender\"]), String(data[\"province\"]),\n        String(data[\"age\"]), String(data[\"didWearAids\"]), String(data[\"willWearAids\"]), String(data[\"output\"])\n      ];\n      // add pre and post questions\n      Object.keys(data[\"preQuestions\"]).map(key => {\n        row.push(data[\"preQuestions\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][0]), String(data[\"trials1\"]), String(data[\"SNR\"][0])\n      )\n      Object.keys(data[\"postQuestions1\"]).map(key => {\n        row.push(data[\"postQuestions1\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][1]), String(data[\"trials2\"]), String(data[\"SNR\"][1])\n      )\n      Object.keys(data[\"postQuestions2\"]).map(key => {\n        row.push(data[\"postQuestions2\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][2]), String(data[\"trials3\"]), String(data[\"SNR\"][2])\n      )\n      Object.keys(data[\"postQuestions3\"]).map(key => {\n        row.push(data[\"postQuestions3\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][3]), String(data[\"trials4\"]), String(data[\"SNR\"][3])\n      )\n      Object.keys(data[\"postQuestions4\"]).map(key => {\n        row.push(data[\"postQuestions4\"][key]);\n      });\n      // add correct, questions, answers, etc.\n      for (let i=1; i<=4; i++) {\n        let timer;\n        let dbs;\n        let questions;\n        let answers;\n        let correct;\n        let trials;\n        switch(i){\n          case 1:\n            timer = \"timer1\";\n            dbs = \"dbs1\";\n            questions = \"questions1\";\n            answers = \"answers1\";\n            correct = \"correct1\";\n            trials = trials1;\n            break;\n          case 2:\n            timer = \"timer2\";\n            dbs = \"dbs2\";\n            questions = \"questions2\";\n            answers = \"answers2\";\n            correct = \"correct2\";\n            trials = trials2;\n            break;\n          case 3:\n            timer = \"timer3\";\n            dbs = \"dbs3\";\n            questions = \"questions3\";\n            answers = \"answers3\";\n            correct = \"correct3\";\n            trials = trials3;\n            break;\n          case 4:\n            timer = \"timer4\";\n            dbs = \"dbs4\";\n            questions = \"questions4\";\n            answers = \"answers4\";\n            correct = \"correct4\";\n            trials = trials4;\n            break;\n          default:\n            break;\n        }\n        for (let j=0; j<trials; j++) {\n            row.push(data[timer][j]);\n            row.push(data[dbs][j+1]);\n            row.push(data[questions][j]);\n            row.push(data[answers][j]);\n            row.push(JSON.stringify(data[correct][j]));\n        }\n      }\n        datas.push(row);\n    });\n    // write the array\n    doc.data.map(data => {\n      const obj = {};\n      obj[\"_id\"] = data._id;\n      obj[\"ID\"] = String(data[\"ID\"]);\n      array.push(obj);\n    });\n    this.setState({ array, headers, datas, reversals: setting.data.reversals });\n  }\n\n  deleteData = async (id) => {\n    await axios.delete(\"/api/crm4/user/data/\" + id);\n    this.componentDidMount();\n  }\n\n  login = () => {\n    if (this.state.password === \"thisisthepassword\") {\n      this.setState({ login: true });\n    } else {\n      this.setState({password: \"\"});\n      window.alert(\"Wrong login information, retry please!\");\n    }\n  }\n\n  updateReversals = async () => {\n    await axios.put(\"/api/crm4/reversals\", {reversals: this.state.newReversals});\n    this.componentDidMount();\n  }\n\n  render() {\n    const { array, login, password, datas, headers, reversals, newReversals } = this.state;\n    return (\n      login ?\n        <Container>\n          <br />\n          <h3 style={{ textAlign: \"center\" }}>Welcome to CRM4 database</h3>\n              <div>\n                <hr />\n                <div id=\"spreadsheet\">\n                  <h4>Spreadsheet Download</h4>\n                  <ExportReactCSV data={datas} headers={headers} fileName={\"HearingTestData\"} />\n                  <br /><br />\n                  <h5>Legend for data label</h5>\n                  <ol>\n                    <li>Reversals: the amount of reversals</li>\n                    <li>block1: the audio type of block 1</li>\n                    <li>trials1: the amount of trials in block 1</li>\n                    <li>SNR1: the average SNR of final 10 trials (if there are over 10 trials) in block 1</li>\n                    <li>DidWearAids: whether the user has ever worn hearing aids or not</li>\n                    <li>WillWearAids: whether the user will hearing aids during this test or not</li>\n                    <li>OutPut: Whether the user will use speaker or headphone during the test</li>\n                    <li>timer1-t1: how much time (in millisecond) the user took during the block 1 trial 1</li>\n                    <li>dbs1-t1: how much decibels the audio has at the end of the block 1 trial 1 (decibel starts from 0 in each block)</li>\n                    <li>question1-t1: the real answer in block 1 trial 1</li>\n                    <li>answer1-t1: the user's answer in block 1 trial 1</li>\n                    <p>(question and answer are composed by 2 digits, the first one is the color: 1 -{\">\"} red, 2 -{\">\"} green, 3 -{\">\"} blue, 4 -{\">\"} white, and the second one is the number )</p>\n                    <li>correct1-t1: whether the user answered the question correct or not in block 1 trial 1</li>\n                    <p>(all 1st number represents the # of block, 2nd number represents the # of trial)</p>\n                    <li>b1-postQuestion1: the answer for the first post-test question in block 1</li>\n                  </ol>\n                </div>\n                <hr />\n                <div id=\"table\">\n                  <h4>Data Operation</h4>\n                  <Table data={array} deleteData={this.deleteData} />\n                  <br /><br />\n                  <h5>\n                    Pre-questions:\n                  </h5>\n                  <h6>1. I think my hearing in general is</h6>\n                  <h6>2. I think my hearing in quiet is</h6>\n                  <h6>3. I think my hearing in background noise is</h6>\n                  <h5>\n                    Post-questions:\n                  </h5>\n                  <h6>1. How difficult did you find this block? Please make a mark on the line below.</h6>\n                  <h6>2. How much effort did it take for you to complete this block? Please make a mark on the line below.</h6>\n                </div>\n                <hr />\n                <div id=\"reversals\">\n                  <h4>Current Reversals: {reversals}</h4>\n                  <TextField label=\"new reversals\" value={newReversals} type=\"number\" onChange={(e) => this.setState({newReversals: Number(e.target.value)})} />\n                  <Button color=\"primary\" variant=\"contained\" onClick={this.updateReversals} >Update</Button>\n                </div>\n                <hr />\n                <br />\n              </div>\n        </Container>\n        :\n        <Container>\n          <div style={{ position: \"fixed\", left: \"30%\", right: \"30%\", top: \"20%\" }}>\n            <TextField value={password} style={{ width: 300 }} onChange={(e) => this.setState({ password: e.target.value })} label=\"password\" type=\"password\" /><br /><br />\n            <Button variant=\"contained\" color=\"primary\" onClick={this.login} >Log In</Button>\n          </div>\n        </Container>\n    );\n  }\n}\n\nexport default Data;\n","/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm1/main.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm3/data.jsx",["489","490","491","492","493","494","495","496","497"],"import React from \"react\";\nimport axios from \"axios\";\nimport { Button, Container, TextField } from \"@material-ui/core\";\nimport Table from \"../../assets/signal-loss/data-table\";\nimport { ExportReactCSV } from \"../../components/partials/csv\";\n\nclass Data extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { newReversals: null, reversals: null, array: [], login: false, password: \"\", datas: [], headers: [] };\n  }\n\n  componentDidMount = async () => {\n    const doc = await axios.get(\"/api/crm3/user/data\");\n    const setting = await axios.get(\"/api/crm3/reversals\");\n    const array = [];\n    const datas = [];\n    const headers = [\n      \"ID\", \"Email\", \"Reversals\", \"Gender\", \"Province\", \"BirthYear\", \"DidWearAids\", \"WillWearAids\", \"Output\", \n      \"preQuestion1\", \"preQuestion2\", \"preQuestion3\",\n      \"block1\", \"trials1\", \"SNR1\", \"b1-postQuestion1\", \"b1-postQuestion2\",\n      \"block2\", \"trials2\", \"SNR2\", \"b2-postQuestion1\", \"b2-postQuestion2\",\n      \"block3\", \"trials3\", \"SNR3\", \"b3-postQuestion1\", \"b3-postQuestion2\",\n      \"block4\", \"trials4\", \"SNR4\", \"b4-postQuestion1\", \"b4-postQuestion2\",\n    ];\n    \n    // wirte headers\n    // find the largest trials in each block\n    let trials1 = 0;\n    let trials2 = 0;\n    let trials3 = 0;\n    let trials4 = 0;\n    doc.data.map(data => {\n      if (data[\"timer1\"].length > trials1) trials1 = data[\"timer1\"].length;\n      if (data[\"timer2\"].length > trials2) trials2 = data[\"timer2\"].length;\n      if (data[\"timer3\"].length > trials3) trials3 = data[\"timer3\"].length;\n      if (data[\"timer4\"].length > trials4) trials4 = data[\"timer4\"].length;\n    })\n    for (let i=1; i<=4; i++) {\n      let trials;\n      switch(i){\n        case 1:\n          trials = trials1;\n          break;\n        case 2:\n          trials = trials2;\n          break;\n        case 3:\n          trials = trials3;\n          break;\n        case 4:\n          trials = trials4;\n          break;\n      }\n      for (let j=1; j<=trials; j++) {\n        headers.push(`timer${i}-t${j}`);\n        headers.push(`dbs${i}-t${j}`);\n        headers.push(`question${i}-t${j}`);\n        headers.push(`answer${i}-t${j}`);\n        headers.push(`correct${i}-t${j}`);\n      }\n    };\n    // write datas\n    doc.data.map(data => {\n      const row = [\n        String(data[\"ID\"]), String(data[\"email\"]), String(data[\"reversals\"]), String(data[\"gender\"]), String(data[\"province\"]),\n        String(data[\"age\"]), String(data[\"didWearAids\"]), String(data[\"willWearAids\"]), String(data[\"output\"])\n      ];\n      // add pre and post questions\n      Object.keys(data[\"preQuestions\"]).map(key => {\n        row.push(data[\"preQuestions\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][0]), String(data[\"trials1\"]), String(data[\"SNR\"][0])\n      )\n      Object.keys(data[\"postQuestions1\"]).map(key => {\n        row.push(data[\"postQuestions1\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][1]), String(data[\"trials2\"]), String(data[\"SNR\"][1])\n      )\n      Object.keys(data[\"postQuestions2\"]).map(key => {\n        row.push(data[\"postQuestions2\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][2]), String(data[\"trials3\"]), String(data[\"SNR\"][2])\n      )\n      Object.keys(data[\"postQuestions3\"]).map(key => {\n        row.push(data[\"postQuestions3\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][3]), String(data[\"trials4\"]), String(data[\"SNR\"][3])\n      )\n      Object.keys(data[\"postQuestions4\"]).map(key => {\n        row.push(data[\"postQuestions4\"][key]);\n      });\n      // add correct, questions, answers, etc.\n      for (let i=1; i<=4; i++) {\n        let timer;\n        let dbs;\n        let questions;\n        let answers;\n        let correct;\n        let trials;\n        switch(i){\n          case 1:\n            timer = \"timer1\";\n            dbs = \"dbs1\";\n            questions = \"questions1\";\n            answers = \"answers1\";\n            correct = \"correct1\";\n            trials = trials1;\n            break;\n          case 2:\n            timer = \"timer2\";\n            dbs = \"dbs2\";\n            questions = \"questions2\";\n            answers = \"answers2\";\n            correct = \"correct2\";\n            trials = trials2;\n            break;\n          case 3:\n            timer = \"timer3\";\n            dbs = \"dbs3\";\n            questions = \"questions3\";\n            answers = \"answers3\";\n            correct = \"correct3\";\n            trials = trials3;\n            break;\n          case 4:\n            timer = \"timer4\";\n            dbs = \"dbs4\";\n            questions = \"questions4\";\n            answers = \"answers4\";\n            correct = \"correct4\";\n            trials = trials4;\n            break;\n          default:\n            break;\n        }\n        for (let j=0; j<trials; j++) {\n            row.push(data[timer][j]);\n            row.push(data[dbs][j+1]);\n            row.push(data[questions][j]);\n            row.push(data[answers][j]);\n            row.push(JSON.stringify(data[correct][j]));\n        }\n      }\n        datas.push(row);\n    });\n    // write the array\n    doc.data.map(data => {\n      const obj = {};\n      obj[\"_id\"] = data._id;\n      obj[\"ID\"] = String(data[\"ID\"]);\n      array.push(obj);\n    });\n    this.setState({ array, headers, datas, reversals: setting.data.reversals });\n  }\n\n  deleteData = async (id) => {\n    await axios.delete(\"/api/crm3/user/data/\" + id);\n    this.componentDidMount();\n  }\n\n  login = () => {\n    if (this.state.password === \"thisisthepassword\") {\n      this.setState({ login: true });\n    } else {\n      this.setState({password: \"\"});\n      window.alert(\"Wrong login information, retry please!\");\n    }\n  }\n\n  updateReversals = async () => {\n    await axios.put(\"/api/crm3/reversals\", {reversals: this.state.newReversals});\n    this.componentDidMount();\n  }\n\n  render() {\n    const { array, login, password, datas, headers, reversals, newReversals } = this.state;\n    return (\n      login ?\n        <Container>\n          <br />\n          <h3 style={{ textAlign: \"center\" }}>Welcome to CRM3 database</h3>\n              <div>\n                <hr />\n                <div id=\"spreadsheet\">\n                  <h4>Spreadsheet Download</h4>\n                  <ExportReactCSV data={datas} headers={headers} fileName={\"HearingTestData\"} />\n                  <br /><br />\n                  <h5>Legend for data label</h5>\n                  <ol>\n                    <li>Reversals: the amount of reversals</li>\n                    <li>block1: the audio type of block 1</li>\n                    <li>trials1: the amount of trials in block 1</li>\n                    <li>SNR1: the average SNR of final 10 trials (if there are over 10 trials) in block 1</li>\n                    <li>DidWearAids: whether the user has ever worn hearing aids or not</li>\n                    <li>WillWearAids: whether the user will hearing aids during this test or not</li>\n                    <li>OutPut: Whether the user will use speaker or headphone during the test</li>\n                    <li>timer1-t1: how much time (in millisecond) the user took during the block 1 trial 1</li>\n                    <li>dbs1-t1: how much decibels the audio has at the end of the block 1 trial 1 (decibel starts from 0 in each block)</li>\n                    <li>question1-t1: the real answer in block 1 trial 1</li>\n                    <li>answer1-t1: the user's answer in block 1 trial 1</li>\n                    <p>(question and answer are composed by 2 digits, the first one is the color: 1 -{\">\"} red, 2 -{\">\"} green, 3 -{\">\"} blue, 4 -{\">\"} white, and the second one is the number )</p>\n                    <li>correct1-t1: whether the user answered the question correct or not in block 1 trial 1</li>\n                    <p>(all 1st number represents the # of block, 2nd number represents the # of trial)</p>\n                    <li>b1-postQuestion1: the answer for the first post-test question in block 1</li>\n                  </ol>\n                </div>\n                <hr />\n                <div id=\"table\">\n                  <h4>Data Operation</h4>\n                  <Table data={array} deleteData={this.deleteData} />\n                  <br /><br />\n                  <h5>\n                    Pre-questions:\n                  </h5>\n                  <h6>1. I think my hearing in general is</h6>\n                  <h6>2. I think my hearing in quiet is</h6>\n                  <h6>3. I think my hearing in background noise is</h6>\n                  <h5>\n                    Post-questions:\n                  </h5>\n                  <h6>1. How difficult did you find this block? Please make a mark on the line below.</h6>\n                  <h6>2. How much effort did it take for you to complete this block? Please make a mark on the line below.</h6>\n                </div>\n                <hr />\n                <div id=\"reversals\">\n                  <h4>Current Reversals: {reversals}</h4>\n                  <TextField label=\"new reversals\" value={newReversals} type=\"number\" onChange={(e) => this.setState({newReversals: Number(e.target.value)})} />\n                  <Button color=\"primary\" variant=\"contained\" onClick={this.updateReversals} >Update</Button>\n                </div>\n                <hr />\n                <br />\n              </div>\n        </Container>\n        :\n        <Container>\n          <div style={{ position: \"fixed\", left: \"30%\", right: \"30%\", top: \"20%\" }}>\n            <TextField value={password} style={{ width: 300 }} onChange={(e) => this.setState({ password: e.target.value })} label=\"password\" type=\"password\" /><br /><br />\n            <Button variant=\"contained\" color=\"primary\" onClick={this.login} >Log In</Button>\n          </div>\n        </Container>\n    );\n  }\n}\n\nexport default Data;\n","/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm3/main.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/database/pre-test.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/database/post-test-1.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/database/consents.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/database/user-data.jsx",["498"],"import React from \"react\";\nimport axios from \"axios\";\nimport UserDataTable from \"../../../assets/digits/user-data-table\";\nimport { Container, Button } from \"@material-ui/core\";\n\nclass UserData extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      one: null,\n    };\n  }\n  componentDidMount = async () => {\n    const doc = await axios.get(\"/api/digits/user/data\");\n    this.setState({ data: doc.data });\n  };\n\n  handleDelete = async (id) => {\n    await axios.delete(\"/api/digits/user/data/\" + id);\n    this.componentDidMount();\n  };\n\n  handleShowDetails = (id) => {\n    this.state.data.map((data) => {\n      if (data._id === id) this.setState({ one: data });\n    });\n  };\n\n  handleGoBack = () => {\n    this.setState({ one: null });\n  };\n\n  render() {\n    const { data, one } = this.state;\n    return (\n      <Container>\n        <div className=\"jumbotron\">\n          <h1 style={{ margin: 20 }}>User Data</h1>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginLeft: 20 }}\n            onClick={() => this.props.history.push(\"/digits/database\")}\n          >\n            Back\n          </Button>\n          {one ? (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              style={{ marginLeft: 20 }}\n              onClick={this.handleGoBack}\n            >\n              Back\n            </Button>\n          ) : null}\n        </div>\n        <div\n          style={{\n            position: \"relative\",\n            marginTop: \"5%\",\n          }}\n        >\n          {one ? (\n            <Container>\n              <div className=\"row\" style={{ marginLeft: 10 }}>\n                <h4>User Email: </h4>\n                <h5>{one.email}</h5>\n              </div>\n              <br />\n              <div style={{ marginLeft: 10 }}>\n                <h4>Location: </h4>\n                <div style={{ marginLeft: 10 }}>\n                  <h5>Country: {one.location.country_name}</h5>\n                  <h5>State: {one.location.state}</h5>\n                  <h5>City: {one.location.city}</h5>\n                  <h5>IP: {one.location.IPv4}</h5>\n                </div>\n              </div>\n              <hr />\n              <div style={{ marginLeft: 10 }}>\n                <h4>Consents: </h4>\n                {Object.keys(one.consents).map((key, index) => {\n                  return (\n                    <div className=\"row\" style={{ marginLeft: 10 }}>\n                      <h5>\n                        {index}. {key}\n                      </h5>\n                      <h6 style={{ marginLeft: 10 }}>{one.consents[key]}</h6>\n                    </div>\n                  );\n                })}\n              </div>\n              <hr />\n              <div style={{ marginLeft: 10 }}>\n                <h4>Pre-test Questions:</h4>\n                {Object.keys(one.hearing).map((key, index) => {\n                  return (\n                    <div className=\"row\" style={{ marginLeft: 10 }}>\n                      <h5>\n                        {index + 1}. {key}\n                      </h5>\n                      <br />\n                      <h6 style={{ marginLeft: 10 }}>\n                        a. Wellness:{one.hearing[key].wellness}\n                      </h6>\n                      <br />\n                      <h6 style={{ marginLeft: 10 }}>\n                        b. Confidence: {one.hearing[key].confidence}\n                      </h6>\n                    </div>\n                  );\n                })}\n              </div>\n              <hr />\n              <div style={{ marginLeft: 10 }}>\n                <h4>Birth: {one.birth}</h4>\n              </div>\n              <br />\n              <div style={{ marginLeft: 10 }}>\n                <h4>Date: {one.date} </h4>\n              </div>\n              <br />\n              <div style={{ marginLeft: 10 }}>\n                <h4>Result: {one.result}</h4>\n              </div>\n              <br />\n              <div style={{ marginLeft: 10 }}>\n                <h4>Volume: {one.volume}</h4>\n              </div>\n              <br />\n              <div style={{ marginLeft: 10 }}>\n                <h4>SNR: {one.SNR}</h4>\n              </div>\n              <br />\n              <div style={{ marginLeft: 10, marginBottom: 30 }} className=\"row\">\n                <h4>Timer:</h4>\n                <h5 className=\"row\" style={{ marginLeft: 10 }}>\n                  {one.timer.map((time) => (\n                    <p>{time} / </p>\n                  ))}\n                </h5>\n              </div>\n            </Container>\n          ) : (\n              <UserDataTable\n                rows={data}\n                handleDelete={this.handleDelete}\n                handleShowDetails={this.handleShowDetails}\n              />\n            )}\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default UserData;\n","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/database/post-test-3.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/database/post-test-2.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/partials/csv.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/start/birth.jsx",["499"],"import React from \"react\";\nimport {\n  Container,\n  Button,\n  InputLabel,\n  MenuItem,\n  FormHelperText,\n  FormControl,\n  Select,\n} from \"@material-ui/core\";\n\nclass Birth extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      birth: null,\n    };\n  }\n\n  renderButton = () => {\n    const { birth } = this.state;\n    if (birth !== null) {\n      return (\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"large\"\n          style={{\n            backgroundColor: \"black\",\n            width: 100,\n            margin: 10,\n          }}\n          onClick={() => this.props.handleClick(this.state.birth)}\n        >\n          ok\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"large\"\n          style={{\n            width: 100,\n            margin: 10,\n          }}\n          disabled={true}\n        >\n          ok\n        </Button>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <Container>\n        <h2 style={{ textAlign: \"right\", marginTop: \"5%\", marginRight: \"5%\" }}>\n          2\n        </h2>\n        <div\n          style={{\n            textAlign: \"center\",\n            position: \"relative\",\n            marginTop: \"15%\",\n          }}\n        >\n          <h1>Select your year of birth:</h1>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Year</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={this.state.birth}\n              style={{ width: 80 }}\n              onChange={(e) => this.setState({ birth: e.target.value })}\n            >\n              <MenuItem value={1920}>1920</MenuItem>\n              <MenuItem value={1921}>1921</MenuItem>\n              <MenuItem value={1922}>1922</MenuItem>\n              <MenuItem value={1923}>1923</MenuItem>\n              <MenuItem value={1924}>1924</MenuItem>\n              <MenuItem value={1925}>1925</MenuItem>\n              <MenuItem value={1926}>1926</MenuItem>\n              <MenuItem value={1927}>1927</MenuItem>\n              <MenuItem value={1928}>1928</MenuItem>\n              <MenuItem value={1929}>1929</MenuItem>\n              <MenuItem value={1930}>1930</MenuItem>\n              <MenuItem value={1931}>1931</MenuItem>\n              <MenuItem value={1932}>1932</MenuItem>\n              <MenuItem value={1933}>1933</MenuItem>\n              <MenuItem value={1934}>1934</MenuItem>\n              <MenuItem value={1935}>1935</MenuItem>\n              <MenuItem value={1936}>1936</MenuItem>\n              <MenuItem value={1937}>1937</MenuItem>\n              <MenuItem value={1938}>1938</MenuItem>\n              <MenuItem value={1939}>1939</MenuItem>\n              <MenuItem value={1940}>1940</MenuItem>\n              <MenuItem value={1941}>1941</MenuItem>\n              <MenuItem value={1942}>1942</MenuItem>\n              <MenuItem value={1943}>1943</MenuItem>\n              <MenuItem value={1944}>1944</MenuItem>\n              <MenuItem value={1945}>1945</MenuItem>\n              <MenuItem value={1946}>1946</MenuItem>\n              <MenuItem value={1947}>1947</MenuItem>\n              <MenuItem value={1948}>1948</MenuItem>\n              <MenuItem value={1949}>1949</MenuItem>\n              <MenuItem value={1950}>1950</MenuItem>\n              <MenuItem value={1951}>1951</MenuItem>\n              <MenuItem value={1952}>1952</MenuItem>\n              <MenuItem value={1953}>1953</MenuItem>\n              <MenuItem value={1954}>1954</MenuItem>\n              <MenuItem value={1955}>1955</MenuItem>\n              <MenuItem value={1956}>1956</MenuItem>\n              <MenuItem value={1957}>1957</MenuItem>\n              <MenuItem value={1958}>1958</MenuItem>\n              <MenuItem value={1959}>1959</MenuItem>\n              <MenuItem value={1960}>1960</MenuItem>\n              <MenuItem value={1961}>1961</MenuItem>\n              <MenuItem value={1962}>1962</MenuItem>\n              <MenuItem value={1963}>1963</MenuItem>\n              <MenuItem value={1964}>1964</MenuItem>\n              <MenuItem value={1965}>1965</MenuItem>\n              <MenuItem value={1966}>1966</MenuItem>\n              <MenuItem value={1967}>1967</MenuItem>\n              <MenuItem value={1968}>1968</MenuItem>\n              <MenuItem value={1969}>1969</MenuItem>\n              <MenuItem value={1970}>1970</MenuItem>\n              <MenuItem value={1971}>1971</MenuItem>\n              <MenuItem value={1972}>1972</MenuItem>\n              <MenuItem value={1973}>1973</MenuItem>\n              <MenuItem value={1974}>1974</MenuItem>\n              <MenuItem value={1975}>1975</MenuItem>\n              <MenuItem value={1976}>1976</MenuItem>\n              <MenuItem value={1977}>1977</MenuItem>\n              <MenuItem value={1978}>1978</MenuItem>\n              <MenuItem value={1979}>1979</MenuItem>\n              <MenuItem value={1920}>1980</MenuItem>\n              <MenuItem value={1981}>1981</MenuItem>\n              <MenuItem value={1982}>1982</MenuItem>\n              <MenuItem value={1983}>1983</MenuItem>\n              <MenuItem value={1984}>1984</MenuItem>\n              <MenuItem value={1985}>1985</MenuItem>\n              <MenuItem value={1986}>1986</MenuItem>\n              <MenuItem value={1987}>1987</MenuItem>\n              <MenuItem value={1988}>1988</MenuItem>\n              <MenuItem value={1989}>1989</MenuItem>\n              <MenuItem value={1990}>1990</MenuItem>\n              <MenuItem value={1991}>1991</MenuItem>\n              <MenuItem value={1992}>1992</MenuItem>\n              <MenuItem value={1993}>1993</MenuItem>\n              <MenuItem value={1994}>1994</MenuItem>\n              <MenuItem value={1995}>1995</MenuItem>\n              <MenuItem value={1996}>1996</MenuItem>\n              <MenuItem value={1997}>1997</MenuItem>\n              <MenuItem value={1998}>1998</MenuItem>\n              <MenuItem value={1999}>1999</MenuItem>\n              <MenuItem value={2000}>2000</MenuItem>\n              <MenuItem value={2001}>2001</MenuItem>\n              <MenuItem value={2002}>2002</MenuItem>\n              <MenuItem value={2003}>2003</MenuItem>\n              <MenuItem value={2004}>2004</MenuItem>\n              <MenuItem value={2005}>2005</MenuItem>\n              <MenuItem value={2006}>2006</MenuItem>\n              <MenuItem value={2007}>2007</MenuItem>\n              <MenuItem value={2008}>2008</MenuItem>\n              <MenuItem value={2009}>2009</MenuItem>\n              <MenuItem value={2010}>2010</MenuItem>\n              <MenuItem value={2011}>2011</MenuItem>\n              <MenuItem value={2012}>2012</MenuItem>\n              <MenuItem value={2013}>2013</MenuItem>\n              <MenuItem value={2014}>2014</MenuItem>\n              <MenuItem value={2015}>2015</MenuItem>\n              <MenuItem value={2016}>2016</MenuItem>\n              <MenuItem value={2017}>2017</MenuItem>\n              <MenuItem value={2018}>2018</MenuItem>\n              <MenuItem value={2019}>2019</MenuItem>\n              <MenuItem value={2020}>2020</MenuItem>\n            </Select>\n          </FormControl>\n          {this.renderButton()}\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default Birth;\n","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/test/adjustment.jsx",["500"],"import React from \"react\";\nimport { Button, Container } from \"@material-ui/core\";\nimport VolumeSlider from \"../../../assets/digits/volume-slider\";\n\nclass VolumeAdjustment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      volumeAdjuest: false,\n      audio: new Audio(process.env.PUBLIC_URL + \"/functional-audio/adjust.wav\"),\n      audioPlay: false,\n      audioVolume: 0.1,\n    };\n  }\n  componentDidMount = () => {\n    const { audio, audioVolume } = this.state;\n    audio.volume = audioVolume;\n  };\n\n  componentDidUpdate = () => {\n    const { audio, audioVolume } = this.state;\n    audio.volume = audioVolume;\n  };\n\n  calculateDB = (audio) => {\n    const audioCtx = new AudioContext();\n    const processor = audioCtx.createScriptProcessor(0, 1, 1);\n    const source = audioCtx.createMediaElementSource(audio);\n    source.connect(processor);\n    source.connect(audioCtx.destination);\n    processor.connect(audioCtx.destination);\n    processor.onaudioprocess = function (evt) {\n      const input = evt.inputBuffer.getChannelData(0);\n      const len = input.length;\n      let total = 0;\n      let i = 0;\n      let rms; // root mean square\n      while (i < len) total += Math.abs(input[i++]);\n      rms = Math.sqrt(total / len);\n    };\n  };\n\n  handleHeadPhone = () => {\n    const { volumeAdjuest } = this.state;\n    this.setState({ volumeAdjuest: !volumeAdjuest });\n  };\n\n  handleSpeaker = () => {\n    const { volumeAdjuest } = this.state;\n    this.setState({ volumeAdjuest: !volumeAdjuest });\n  };\n\n  handlePlay = async () => {\n    const { audio } = this.state;\n    await audio.play();\n    this.setState({ audioPlay: true });\n  };\n\n  handleStop = async () => {\n    const { audio } = this.state;\n    await audio.pause();\n    this.setState({ audioPlay: false });\n  };\n\n  handleVolume = (volume) => {\n    this.setState({ audioVolume: volume / 100 });\n    this.props.handleVolume(volume);\n  };\n\n  handleNext = () => {\n    this.state.audio.pause();\n    this.props.handleClick();\n  };\n\n  render() {\n    const { audioPlay } = this.state;\n    return (\n      <Container>\n        <h2 style={{ textAlign: \"right\", marginTop: \"5%\", marginRight: \"5%\" }}>\n          5\n        </h2>\n        <div\n          style={{\n            textAlign: \"center\",\n            position: \"relative\",\n            marginTop: \"10%\",\n          }}\n        >\n          <Container>\n            <h4>\n              Set your device's volume to the 50%. Click PLAY to listen to an\n              audio sample.\n            </h4>\n            <h4>\n              Then, move the slider below to a comfortable listening level.\n              After that, click NEXT to begin the test.\n            </h4>\n          </Container>\n          <VolumeSlider\n            handleVolume={this.handleVolume}\n            style={{ marginLeft: \"30%\" }}\n          />\n          {audioPlay ? (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.handleStop}\n              style={{ margin: 5, width: 150, backgroundColor: \"black\" }}\n            >\n              Stop\n            </Button>\n          ) : (\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.handlePlay}\n                style={{\n                  margin: 5,\n                  width: 150,\n                  backgroundColor: \"black\",\n                }}\n              >\n                Play\n              </Button>\n            )}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ margin: 5, width: 150, backgroundColor: \"black\" }}\n            onClick={this.handleNext}\n          >\n            Next\n          </Button>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default VolumeAdjustment;\n","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/start/hearing.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/start/consent.jsx",["501","502"],"import React from \"react\";\nimport {\n  Container,\n  Button,\n  TextField,\n  Radio,\n  RadioGroup,\n  FormGroup,\n  FormControlLabel,\n  FormControl,\n  Checkbox,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\n\nclass Consent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: [],\n      consents: {},\n      agreement: \"false\",\n      email: \"\",\n    };\n  }\n\n  componentDidMount = async () => {\n    const doc = await axios.get(\"/api/digits/consent/questions\");\n    const questions = doc.data.map((data) => data.question);\n    this.setState({ questions });\n  };\n\n  handleConsent = (index, value) => {\n    const { consents, questions } = this.state;\n    consents[questions[index]] = value;\n    this.setState({ consents });\n  };\n\n  validateEmail = (email) => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  validateConsents = () => {\n    const { consents, questions } = this.state;\n    if (Object.keys(consents).length !== questions.length) {\n      return false;\n    }\n    for (const key in consents) {\n      if (!consents[key]) return false;\n    }\n    return true;\n  };\n\n  renderButton = () => {\n    const { email, agreement } = this.state;\n    if (\n      this.validateConsents() &&\n      this.validateEmail(email) &&\n      agreement === \"true\"\n    ) {\n      return (\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          style={{\n            backgroundColor: \"black\",\n            width: \"15%\",\n            marginTop: 10,\n            marginLeft: 10,\n          }}\n          onClick={() => this.props.handleClick(email)}\n        >\n          Next\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          style={{\n            width: \"15%\",\n            marginTop: 10,\n            marginLeft: 10,\n          }}\n          disabled={true}\n        >\n          Next\n        </Button>\n      );\n    }\n  };\n\n  render() {\n    const { questions, email, consents } = this.state;\n    return (\n      <Container>\n        <h2 style={{ textAlign: \"right\", marginTop: \"5%\", marginRight: \"5%\" }}>\n          1\n        </h2>\n        <div\n          style={{\n            position: \"relative\",\n            marginTop: \"3%\",\n            marginBottom: \"10%\",\n            marginLeft: \"5%\",\n            marginRight: \"5%\",\n          }}\n        >\n          <hr />\n          <h4>\n            Please read the following information carefully and respond to the\n            informed consent questions at the bottom of the page.{\" \"}\n          </h4>\n          <h5>\n            Speech-in-noise tests have been used by audiologists for many years.\n            They involve listening for speech sounds against competing\n            background noise and repeating the words you hear. In recent years,\n            the use of digits (rather than words or sentences) has been proposed\n            as a solution to the challenges faced by non-native English speakers\n            in traditional speech-in-noise tests. As online health-care options\n            continue to expand, hearing care professionals are interested in the\n            experience of users who self-administer digits-in-noise testing on\n            websites.\n          </h5>\n          <br />\n          <h6>Procedures (Approximately 10 - 15 minutes total)</h6>\n          <br />\n          <h5>\n            1. Answering Demographic Questions You will be asked to answer some\n            questions about yourself and your health.\n          </h5>\n          <h5>\n            2. Digits in Noise Test You will use headphones to complete the\n            3-minute test. You will hear the names of digits (e.g., \"one, seven,\n            two\") spoken aloud against competing background conversation. Enter\n            the numbers you hear. The volume of the speech goes up and down.\n          </h5>\n          <h5>\n            3. Completing a questionnaire You will be asked to complete a brief\n            questionnaire that gathers information about your experience with\n            the digits in noise test and your attitudes about hearing health in\n            general.\n          </h5>\n          <br />\n          <hr />\n          <h4>Please note the following:</h4>\n          <h5>\n            - The hearing test may not work with Internet Explorer. We recommend\n            Chrome, Firefox, Safari, Edge, or Opera.\n          </h5>\n          <h5>\n            - You cannot move Back in your browser during this study. You may\n            only navigate by using the 'Next Page' button at the bottom of each\n            page.\n          </h5>\n          <br />\n          <h4>Possible Benefits:</h4>\n          <h5>\n            Participating in this study may help you better understand your\n            hearing and the tools that are used to test hearing.\n          </h5>\n          <br />\n          <h4>Possible Risks:</h4>\n          <h5>\n            Because this study involves having your hearing tested, it is\n            possible that you may learn that you have a hearing loss you were\n            unaware of. If this turns out to be the case, you will be referred\n            to one of the audiologists on our research team for guidance and\n            information about hearing resources you can access in the community.\n          </h5>\n          <br />\n          <h4>Confidentiality:</h4>\n          <h5>\n            Only the investigators doing this study will see the information\n            collected. The University of Alberta’s Health Research Ethics Board\n            also has the right to access the study records if necessary. We will\n            not give your name or other identifying information to anyone\n            outside the study. The information you give will be kept for a total\n            of five years after the study is done. The investigators will store\n            the information on an encrypted computer. Your name will not be\n            attached to the data you provide. Your name will not be used in any\n            presentation or publication.\n          </h5>\n          <br />\n          <h4>Withdrawal:</h4>\n          <h5>\n            Your participation is voluntary. You do not have to take part in\n            this study. If you choose to participate, you may withdraw at any\n            point in the study. You do not need to give us a reason. You will be\n            free to withdraw your data from this study at any point up to a week\n            following your visit to the laboratory. You may indicate your desire\n            to have your data withdrawn by contacting the researchers.\n          </h5>\n          <br />\n          <h4>Contact:</h4>\n          <h5>\n            You may ask questions at any time throughout your participation in\n            the study. If you have any further questions about this study later\n            on, please contact csdhear@ualberta.ca or Dr. Bill Hodgetts\n            (780-492-0834).\n          </h5>\n          <h5>\n            If you have any concerns about the study, please call the Health\n            Panel Administrator at the University of Alberta Health Research\n            Ethics Board (780-492-2615).\n          </h5>\n          <br />\n          <hr />\n          <br />\n          {questions.map((question, index) => {\n            return (\n              <FormControl component=\"fieldset\" style={{ marginBottom: 10 }}>\n                <h4 component=\"legend\">{question}</h4>\n                <FormGroup>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={!!consents[question]}\n                        color=\"primary\"\n                        onChange={(e) =>\n                          this.handleConsent(index, e.target.checked)\n                        }\n                      />\n                    }\n                    label=\"Confirm\"\n                  />\n                </FormGroup>\n              </FormControl>\n            );\n          })}\n          <FormControl component=\"fieldset\" style={{ marginBottom: 10 }}>\n            <h4 component=\"legend\">I agree to take part in this study.</h4>\n            <RadioGroup\n              row\n              aria-label=\"position\"\n              name=\"position\"\n              defaultValue=\"top\"\n              onChange={(e) => this.setState({ agreement: e.target.value })}\n            >\n              <FormControlLabel\n                value=\"true\"\n                control={<Radio color=\"primary\" />}\n                label=\"Yes\"\n              />\n              <FormControlLabel\n                value=\"false\"\n                control={<Radio color=\"primary\" />}\n                label=\"No\"\n              />\n            </RadioGroup>\n          </FormControl>\n          <h4>\n            Please enter your email address to continue. This will allow us to\n            keep track of our study responses.\n          </h4>\n          <TextField\n            label=\"email\"\n            value={email}\n            onChange={(e) => this.setState({ email: e.target.value })}\n            style={{ width: 250 }}\n          />\n          <br />\n          <br />\n          {this.renderButton()}\n          <br />\n          <br />\n          <hr />\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default Consent;\n","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/post-test/result-video.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/post-test/submit.jsx",["503"],"import React from \"react\";\nimport { Button, Container } from \"@material-ui/core\";\n\nexport default (props) => {\n  return (\n    <Container>\n      <h2 style={{ textAlign: \"right\", marginTop: \"5%\", marginRight: \"5%\" }}>\n        11\n      </h2>\n      <div\n        style={{\n          textAlign: \"center\",\n          position: \"relative\",\n          marginTop: \"15%\",\n        }}\n      >\n        <h2>\n          You have completed the study. Thank you for your participation. Click\n          ‘SUBMIT’ to send your responses to the researchers. Remember to check\n          your email afterwards for a message from the researchers containing\n          further information about this study.{\" \"}\n        </h2>\n        <br />\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"large\"\n          onClick={props.handleClick}\n          style={{\n            backgroundColor: \"black\",\n            width: 150,\n            marginTop: 10,\n          }}\n        >\n          Submit\n        </Button>\n      </div>\n    </Container>\n  );\n};\n","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/test/speech-in-noise.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/test/test-demo.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/post-test/end.jsx",["504","505"],"import React from \"react\";\nimport { Button, Container } from \"@material-ui/core\";\n\nexport default (props) => {\n  return (\n    <Container>\n      <h2 style={{ textAlign: \"right\", marginTop: \"5%\", marginRight: \"5%\" }}>\n        12\n      </h2>\n      <div\n        style={{\n          textAlign: \"center\",\n          position: \"relative\",\n          marginTop: \"15%\",\n        }}\n      >\n        <h2>Thank you for submitting your responses. </h2>\n        <h3>You may now close your browser tab.</h3>\n        <h3>Don’t forget to check your email for an important message from the researchers.</h3>\n      </div>\n    </Container>\n  );\n};\n","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/test/environment.jsx",["506"],"import React from \"react\";\nimport { Container, Button } from \"@material-ui/core\";\n\nexport default (props) => {\n  return (\n    <Container>\n      <h2 style={{ textAlign: \"right\", marginTop: \"5%\", marginRight: \"5%\" }}>\n        4\n      </h2>\n      <div\n        style={{\n          textAlign: \"center\",\n          position: \"relative\",\n          marginTop: \"15%\",\n        }}\n      >\n        <h2>\n          Make sure you're in a quiet place where you can complete the test\n          without distraction!\n        </h2>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"large\"\n          style={{ margin: 20, width: 200, backgroundColor: \"black\" }}\n          onClick={props.handleClick}\n        >\n          OK\n        </Button>\n      </div>\n    </Container>\n  );\n};\n","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/post-test/post-test-questions.jsx",["507","508"],"import React from \"react\";\nimport {\n  Container,\n  Button,\n  Checkbox,\n  TextField,\n  FormControlLabel,\n  FormGroup,\n} from \"@material-ui/core\";\nimport ScoreSlider from \"../../../assets/digits/score-slider\";\nimport axios from \"axios\";\n\nclass PostTestQuestions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions1: [],\n      questions2: [],\n      questions3: [],\n      answers1: {},\n      answers2: {},\n      answers3: {},\n    };\n  }\n\n  componentDidMount = async () => {\n    const doc1 = await axios.get(\"/api/digits/post-test-1/questions\");\n    const doc2 = await axios.get(\"/api/digits/post-test-2/questions\");\n    const doc3 = await axios.get(\"/api/digits/post-test-3/questions\");\n    const questions1 = doc1.data.map((data) => data.question);\n    const questions3 = doc3.data.map((data) => data.question);\n    const questions2 = doc2.data;\n    const answers2 = {};\n    for (let row of questions2) {\n      answers2[row[\"question\"]] = [];\n    }\n    this.setState({ questions1, questions2, questions3, answers2 });\n  };\n\n  handleAnswer1 = (index, answer) => {\n    const { questions1, answers1 } = this.state;\n    answers1[questions1[index]] = answer;\n    this.setState({ answers1 });\n  };\n\n  handleAnswer2 = (boolean, questionIndex, choiceIndex) => {\n    const { questions2, answers2 } = this.state;\n    if (boolean) {\n      const array = answers2[questions2[questionIndex][\"question\"]];\n      array.push(questions2[questionIndex][\"checkBox\"][choiceIndex]);\n      answers2[questions2[questionIndex][\"question\"]] = array;\n    } else {\n      const array = answers2[questions2[questionIndex][\"question\"]].filter(\n        (data) => data !== questions2[questionIndex][\"checkBox\"][choiceIndex]\n      );\n      answers2[questions2[questionIndex][\"question\"]] = array;\n    }\n    this.setState({ answers2 });\n  };\n\n  handleAnswer3 = (answer, index) => {\n    const { questions3, answers3 } = this.state;\n    answers3[questions3[index]] = answer;\n    this.setState({ answers3 });\n  };\n\n  validateAnswers = () => {\n    const {\n      answers1,\n      answers2,\n      answers3,\n      questions1,\n      questions2,\n      questions3,\n    } = this.state;\n    return (\n      Object.keys(answers1).length === questions1.length &&\n      // Object.keys(answers2).length === questions2.length &&\n      Object.keys(answers3).length === questions3.length\n    );\n  };\n\n  renderButton = () => {\n    const { questions1, answers1, answers2, answers3 } = this.state;\n    if (questions1.length === 0) {\n      return null;\n    } else if (this.validateAnswers()) {\n      return (\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"large\"\n          onClick={() => this.props.handleClick(answers1, answers2, answers3)}\n          style={{\n            backgroundColor: \"black\",\n            width: 200,\n            marginBottom: 10,\n          }}\n        >\n          OK\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"large\"\n          style={{\n            width: 200,\n            marginBottom: 10,\n          }}\n          disabled={true}\n        >\n          OK\n        </Button>\n      );\n    }\n  };\n\n  render() {\n    const { questions1, answers1, questions2, questions3 } = this.state;\n    return (\n      <Container>\n        <h2 style={{ textAlign: \"right\", marginTop: \"5%\", marginRight: \"5%\" }}>\n          10\n        </h2>\n        <div\n          style={{\n            position: \"relative\",\n            marginTop: \"3%\",\n            marginBottom: \"5%\",\n            marginLeft: \"10%\",\n            marginRight: \"10%\",\n          }}\n        >\n          {questions1.map((question, index) => {\n            return (\n              <div>\n                <h4>{question}</h4>\n                {!!answers1[questions1[index]] ? null : (\n                  <h6 className=\"text-danger\">* must provide value</h6>\n                )}\n\n                <div className=\"row\">\n                  <h6 style={{ marginLeft: \"2%\" }}>Strongly disagree</h6>\n                  <h6 style={{ marginLeft: \"25%\" }}>Strongly agree</h6>\n                </div>\n                <ScoreSlider\n                  handleScore={(value) => this.handleAnswer1(index, value)}\n                />\n                <br />\n                <br />\n              </div>\n            );\n          })}\n          {questions2.map((row, questionIndex) => {\n            return (\n              <div>\n                <h4>{row.question}</h4>\n                <FormGroup style={{ marginLeft: 10 }}>\n                  {row.checkBox.map((choice, choiceIndex) => {\n                    return (\n                      <FormControlLabel\n                        onChange={(e) =>\n                          this.handleAnswer2(\n                            e.target.checked,\n                            questionIndex,\n                            choiceIndex\n                          )\n                        }\n                        control={<Checkbox color=\"primary\" />}\n                        label={choice}\n                      />\n                    );\n                  })}\n                </FormGroup>\n              </div>\n            );\n          })}\n          <br />\n          <br />\n          {questions3.map((question, index) => {\n            return (\n              <div>\n                <h4>{question}</h4>\n                <TextField\n                  style={{ width: \"40%\", marginLeft: 10 }}\n                  onChange={(e) => this.handleAnswer3(e.target.value, index)}\n                />\n              </div>\n            );\n          })}\n          <br />\n          <br />\n          {this.renderButton()}\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default PostTestQuestions;\n","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/start/welcome.jsx",["509"],"import React from \"react\";\nimport { Container } from \"@material-ui/core\";\n\nexport default () => {\n  return (\n    <Container>\n      <div\n        style={{\n          textAlign: \"center\",\n          position: \"relative\",\n          marginTop: \"24%\",\n        }}\n      >\n        <h1>Welcome</h1>\n      </div>\n    </Container>\n  );\n};\n","/Users/kaysong/Documents/hearing_test_frontend/src/assets/signal-loss/data-table.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/assets/digits/data-card.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/test/mid-page.jsx",["510"],"import React from \"react\";\nimport { Button, Container } from \"@material-ui/core\";\n\nexport default (props) => {\n  return <Container>\n    <div style={{ marginTop: \"20%\", marginLeft: \"10%\", marginRight: \"10%\" }}>\n      <h4>You are now entering block {props.section} of four.</h4><br />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        style={{ margin: 20, width: 150, backgroundColor: \"black\" }}\n        onClick={props.handleClick}>Next</Button>\n    </div>\n\n  </Container>\n}","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/test/test.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/test/source2.jsx",["511"],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/test/audioloss1.jsx",["512"],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/test/audioloss2.jsx",["513"],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/post-test/questions1.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/post-test/questions3.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/test/source1.jsx",["514"],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/pre-test/ICF.jsx",["515"],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/post-test/questions4.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/pre-test/questions.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/post-test/questions2.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/post-test/end.jsx",["516"],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/pre-test/adjustment.jsx",["517","518"],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/pre-test/welcome.jsx",["519"],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/test/source2.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/pre-test/demo-info.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/test/source1.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/test/mid-page.jsx",["520"],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/test/source3.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/test/test.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/post-test/end.jsx",["521"],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/test/source4.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/post-test/questions2.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/post-test/questions3.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/post-test/questions4.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/post-test/questions1.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/post-test/questions4.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/test/test.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/post-test/end.jsx",["522"],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/test/source2.jsx",["523"],"import React from \"react\";\nimport { CircularProgress, Avatar, Button } from \"@material-ui/core\";\n\nclass TestMain extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            maskVolume: this.props.volume,\n            sourceVolume: this.props.volume,\n            questions: [],\n            index: 0,\n            dbs: [0],\n            time: 0,\n            timer: [],\n            correct: [],\n            answers: [],\n            userStart: false,\n            alert: false,\n            once: false,\n            traversals: 0,\n            lastCorrectness: null,\n            pause: false\n        }\n    }\n\n    componentDidMount = async () => {\n        for (var i = 1; i < 5; i++) {\n            for (var j = 1; j < 9; j++) {\n                const audio1 = new Audio(process.env.PUBLIC_URL + \"/crm3-source-audio/\" + i.toString() + j.toString() + \".wav\");\n                const audio2 = new Audio(process.env.PUBLIC_URL + \"/crm3-mask-audio/\" + i.toString() + j.toString() + \".wav\");\n                audio1.volume = 0;\n                audio2.volume = 0;\n                try {\n                    await audio1.play();\n                    await audio2.play();\n                    await audio1.pause();\n                    await audio2.pause();\n                } catch (e) { console.log(e, \"for\", i, j) }\n            }\n        }\n\n        this.setState({ loading: false });\n        this.playAudio();\n    }\n\n    startTimer = () => {\n        this.setState({ time: new Date().getTime() });\n    };\n    stopTimer = () => {\n        this.setState({ time: new Date().getTime() - this.state.time });\n    };\n    resetTimer = () => {\n        this.setState({ time: 0, alert: false, once: false });\n    };\n\n    getTargetAndMask = () => {\n        const {  questions } = this.state;\n        const color = Math.ceil(Math.random() * 4).toString();\n        const number = Math.ceil(Math.random() * 8).toString();\n        const colorMask = Math.ceil(Math.random() * 4).toString();\n        const numberMask = Math.ceil(Math.random() * 8).toString();\n        const question = color + number;\n        const questionMask = colorMask + numberMask;\n        if (question == questionMask) {\n            return this.getTargetAndMask();\n        }\n        questions.push(question);\n        this.setState({ questions });\n        return { question, questionMask };\n    }\n\n    playAudio = async () => {\n        const {  maskVolume, sourceVolume } = this.state;\n        const { question, questionMask } = this.getTargetAndMask();\n        console.log(\"Question and mask: \", question, questionMask);\n        let sourceAudio = new Audio(process.env.PUBLIC_URL + \"/crm3-source-audio/\" + question + \".wav\");\n        let maskAudio = new Audio(process.env.PUBLIC_URL + \"/crm3-mask-audio/\" + questionMask + \".wav\");\n        sourceAudio.volume = sourceVolume;\n        maskAudio.volume = maskVolume;\n        await sourceAudio.play();\n        setTimeout(() => maskAudio.play(), 300);\n        setTimeout(() => {\n            maskAudio.pause();\n            this.startTimer();\n            this.setState({ userStart: true });\n        }, sourceAudio.duration * 1000);\n    }\n\n    handleClick = async (num) => {\n        const { questions, index, timer, lastCorrectness, traversals, correct, answers } = this.state;\n        await this.setState({ userStart: false });\n        await this.stopTimer();\n        await timer.push(this.state.time);\n        await this.resetTimer();\n        await this.setState({ timer });\n        answers.push(num);\n        await this.setState({answers});\n        const right = questions[index] === num;\n        let sourceVolume;\n        if (right) {\n            correct.push(true);\n            if (lastCorrectness === null) {\n                this.setState({ lastCorrectness: true })\n            } else if (lastCorrectness === false) {\n                console.log(\"RIGHT, Traversal\", traversals + 1, \"times!\")\n                this.setState({ lastCorrectness: true, traversals: traversals + 1 })\n            }\n            sourceVolume = this.goHarder();\n        } else {\n            correct.push(false);\n            if (lastCorrectness === null) {\n                this.setState({ lastCorrectness: false })\n            } else if (lastCorrectness === true) {\n                console.log(\"WRONG, Traversal\", traversals + 1, \"times!\")\n                this.setState({ lastCorrectness: false, traversals: traversals + 1 })\n            }\n            sourceVolume = this.goEasier();\n        }\n        await this.setState({ index: index + 1, sourceVolume, correct });\n        if (this.state.traversals >= this.props.reversals) {\n            const { dbs } = this.state;\n            let sum = 0;\n            if (dbs.length >= 10) {\n                for (let i = dbs.length - 10; i < dbs.length; i++) {\n                    sum += dbs[i];\n                }\n            } else {\n                for (let i = 0; i < dbs.length; i++) {\n                    sum += dbs[i];\n                }\n            }\n            const SNR = Number(sum / 10).toFixed(2);\n            this.props.handleClick(SNR, timer, dbs, this.state.questions, this.state.answers, correct);\n        } else {\n            setTimeout(() => {\n                this.playAudio();\n            }, 2000)\n        }\n    }\n\n    goEasier = () => {\n        const { sourceVolume, index, dbs } = this.state;\n        dbs.push(dbs[index] + 3);\n        this.setState({ dbs });\n        if (sourceVolume * 10 ** (3 / 20) > 1) {\n            return 1;\n        } else {\n            return sourceVolume * 10 ** (3 / 20);\n        }\n    };\n\n    goHarder = () => {\n        const { sourceVolume, index, dbs } = this.state;\n        dbs.push(dbs[index] - 1);\n        this.setState({ dbs });\n        return sourceVolume * 10 ** (-1 / 20);\n    };\n\n    handleCloseAlert = (event, reason) => {\n        if (reason === \"clickaway\") return;\n        this.setState({ alert: false });\n    };\n\n    handlePause = () => {\n        this.setState({ pause: true });\n        if (this.state.userStart) {\n            this.stopTimer();\n        }\n    }\n\n    handleResume = () => {\n        this.setState({ pause: false });\n        if (this.state.userStart) {\n            this.setState({ time: new Date().getTime() - this.state.time });\n        }\n    }\n\n    render() {\n        const { traversals, loading, userStart, pause } = this.state;\n        const { reversals } = this.props;\n        return (\n            <div>\n                {\n                    loading\n                        ?\n                        <div>\n                            <CircularProgress />\n                        </div>\n                        :\n                        <div>\n                            <div id=\"buttons\" style={{ position: \"fixed\", height: \"80%\", width: \"100%\", backgroundColor: \"#C2CAD0\" }}>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"11\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"12\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"13\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"14\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"15\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"16\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"17\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"18\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"21\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"22\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"23\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"24\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"25\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"26\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"27\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"28\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"31\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"32\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"33\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"34\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"35\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"36\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"37\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"38\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"41\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"42\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"43\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"44\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"45\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"46\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"47\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"48\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                            </div>\n                            <div id=\"progress\" className=\"row\" style={{ position: \"fixed\", left: \"5%\", right: \"5%\", bottom: 10 }}>\n                                <h5>Progress⠀</h5>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 0 ? traversals >= 0 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 1 ? traversals >= 1 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 2 ? traversals >= 2 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 3 ? traversals >= 3 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 4 ? traversals >= 4 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 5 ? traversals >= 5 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 6 ? traversals >= 6 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 7 ? traversals >= 7 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 8 ? traversals >= 8 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 9 ? traversals >= 9 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 10 ? traversals >= 10 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 11 ? traversals >= 11 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 12 ? traversals >= 12 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 13 ? traversals >= 13 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 14 ? traversals >= 14 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 15 ? traversals >= 15 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 16 ? traversals >= 16 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 17 ? traversals >= 17 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 18 ? traversals >= 18 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 19 ? traversals >= 19 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 20 ? traversals >= 20 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 21 ? traversals >= 21 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 22 ? traversals >= 22 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 23 ? traversals >= 23 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 24 ? traversals >= 24 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <h5> {this.props.block + 1}/4 Block</h5>\n                                {\n                                    userStart ?\n                                        pause ?\n                                            <Button style={{ marginLeft: 10 }} color=\"secondary\" variant=\"outlined\" onClick={this.handleResume}>Resume</Button>\n                                            :\n                                            <Button style={{ marginLeft: 10 }} color=\"primary\" variant=\"outlined\" onClick={this.handlePause}>Pause</Button>\n                                        :\n                                        <Button style={{ marginLeft: 10 }} disabled variant=\"outlined\" >Pause</Button>\n                                }\n                                <p>The blue dots on the progress bar may not advance with each trial. This is normal. Please do not adjust your computer volume during the test.</p>\n                            </div>\n                        </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default TestMain;","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/test/audioloss2.jsx",["524"],"import React from \"react\";\nimport { CircularProgress, Avatar, Button } from \"@material-ui/core\";\n\nclass TestMain extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            maskVolume: this.props.volume,\n            sourceVolume: this.props.volume,\n            questions: [],\n            index: 0,\n            dbs: [0],\n            time: 0,\n            timer: [],\n            correct: [],\n            answers: [],\n            userStart: false,\n            alert: false,\n            once: false,\n            traversals: 0,\n            lastCorrectness: null,\n            pause: false\n        }\n    }\n\n    componentDidMount = async () => {\n        for (var i = 1; i < 5; i++) {\n            for (var j = 1; j < 9; j++) {\n                const audio1 = new Audio(process.env.PUBLIC_URL + \"/crm3-loss-audio/\" + i.toString() + j.toString() + \".wav\");\n                const audio2 = new Audio(process.env.PUBLIC_URL + \"/crm3-mask-audio/\" + i.toString() + j.toString() + \".wav\");\n                audio1.volume = 0;\n                audio2.volume = 0;\n                try {\n                    await audio1.play();\n                    await audio2.play();\n                    await audio1.pause();\n                    await audio2.pause();\n                } catch (e) { console.log(e, \"for\", i, j) }\n            }\n        }\n        this.setState({ loading: false });\n        this.playAudio();\n    }\n\n    startTimer = () => {\n        this.setState({ time: new Date().getTime() });\n    };\n    stopTimer = () => {\n        this.setState({ time: new Date().getTime() - this.state.time });\n    };\n    resetTimer = () => {\n        this.setState({ time: 0, alert: false });\n    };\n\n    getTargetAndMask = () => {\n        const {  questions } = this.state;\n        const color = Math.ceil(Math.random() * 4).toString();\n        const number = Math.ceil(Math.random() * 8).toString();\n        const colorMask = Math.ceil(Math.random() * 4).toString();\n        const numberMask = Math.ceil(Math.random() * 8).toString();\n        const question = color + number;\n        const questionMask = colorMask + numberMask;\n        if (question == questionMask) {\n            return this.getTargetAndMask();\n        }\n        questions.push(question);\n        this.setState({ questions });\n        return { question, questionMask };\n    }\n\n    playAudio = async () => {\n        const {  maskVolume, sourceVolume } = this.state;\n        const { question, questionMask } = this.getTargetAndMask();\n        console.log(\"Question and mask: \", question, questionMask);\n        let sourceAudio = new Audio(process.env.PUBLIC_URL + \"/crm3-loss-audio/\" + question + \".wav\");\n        let maskAudio = new Audio(process.env.PUBLIC_URL + \"/crm3-mask-audio/\" + questionMask + \".wav\");\n        sourceAudio.volume = sourceVolume;\n        maskAudio.volume = maskVolume;\n        await sourceAudio.play();\n        setTimeout(() => maskAudio.play(), 300);\n        setTimeout(() => {\n            maskAudio.pause();\n            this.startTimer();\n            this.setState({ userStart: true });\n        }, sourceAudio.duration * 1000);\n    }\n\n    handleClick = async (num) => {\n        const { questions, index, timer, lastCorrectness, traversals, correct, answers } = this.state;\n        await this.setState({ userStart: false });\n        await this.stopTimer();\n        await timer.push(this.state.time);\n        await this.resetTimer();\n        await this.setState({ timer });\n        answers.push(num);\n        await this.setState({answers});\n        const right = questions[index] === num;\n        let sourceVolume;\n        if (right) {\n            correct.push(true);\n            if (lastCorrectness === null) {\n                this.setState({ lastCorrectness: true })\n            } else if (lastCorrectness === false) {\n                console.log(\"RIGHT, Traversal\", traversals + 1, \"times!\")\n                this.setState({ lastCorrectness: true, traversals: traversals + 1 })\n            }\n            sourceVolume = this.goHarder();\n        } else {\n            correct.push(false);\n            if (lastCorrectness === null) {\n                this.setState({ lastCorrectness: false })\n            } else if (lastCorrectness === true) {\n                console.log(\"WRONG, Traversal\", traversals + 1, \"times!\")\n                this.setState({ lastCorrectness: false, traversals: traversals + 1 })\n            }\n            sourceVolume = this.goEasier();\n        }\n        await this.setState({ index: index + 1, sourceVolume, correct });\n        if (this.state.traversals >= this.props.reversals) {\n            const { dbs } = this.state;\n            let sum = 0;\n            if (dbs.length >= 10) {\n                for (let i = dbs.length - 10; i < dbs.length; i++) {\n                    sum += dbs[i];\n                }\n            } else {\n                for (let i = 0; i < dbs.length; i++) {\n                    sum += dbs[i];\n                }\n            }\n            const SNR = Number(sum / 10).toFixed(2);\n            this.props.handleClick(SNR, timer, dbs, this.state.questions, this.state.answers, correct);\n        } else {\n            setTimeout(() => {\n                this.playAudio();\n            }, 2000)\n        }\n    }\n\n    goEasier = () => {\n        const { sourceVolume, index, dbs } = this.state;\n        dbs.push(dbs[index] + 3);\n        this.setState({ dbs });\n        if (sourceVolume * 10 ** (3 / 20) > 1) {\n            return 1;\n        } else {\n            return sourceVolume * 10 ** (3 / 20);\n        }\n    };\n\n    goHarder = () => {\n        const { sourceVolume, index, dbs } = this.state;\n        dbs.push(dbs[index] - 1);\n        this.setState({ dbs });\n        return sourceVolume * 10 ** (-1 / 20);\n    };\n\n    handleCloseAlert = (event, reason) => {\n        if (reason === \"clickaway\") return;\n        this.setState({ alert: false });\n    };\n\n    handlePause = () => {\n        this.setState({ pause: true });\n        if (this.state.userStart) {\n            this.stopTimer();\n        }\n    }\n\n    handleResume = () => {\n        this.setState({ pause: false });\n        if (this.state.userStart) {\n            this.setState({ time: new Date().getTime() - this.state.time });\n        }\n    }\n\n    render() {\n        const { traversals, loading, userStart, pause } = this.state;\n        const { reversals } = this.props;\n        \n        return (\n            <div>\n                {\n                    loading\n                        ?\n                        <div>\n                            <CircularProgress />\n                        </div>\n                        :\n                        <div>\n                            <div id=\"buttons\" style={{ position: \"fixed\", height: \"80%\", width: \"100%\", backgroundColor: \"#C2CAD0\" }}>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"11\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"12\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"13\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"14\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"15\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"16\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"17\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"18\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"21\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"22\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"23\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"24\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"25\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"26\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"27\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"28\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"31\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"32\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"33\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"34\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"35\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"36\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"37\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"38\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"41\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"42\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"43\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"44\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"45\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"46\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"47\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"48\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                            </div>\n                            <div id=\"progress\" className=\"row\" style={{ position: \"fixed\", left: \"5%\", right: \"5%\", bottom: 10 }}>\n                                <h5>Progress⠀</h5>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 0 ? traversals >= 0 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 1 ? traversals >= 1 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 2 ? traversals >= 2 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 3 ? traversals >= 3 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 4 ? traversals >= 4 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 5 ? traversals >= 5 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 6 ? traversals >= 6 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 7 ? traversals >= 7 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 8 ? traversals >= 8 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 9 ? traversals >= 9 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 10 ? traversals >= 10 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 11 ? traversals >= 11 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 12 ? traversals >= 12 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 13 ? traversals >= 13 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 14 ? traversals >= 14 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 15 ? traversals >= 15 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 16 ? traversals >= 16 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 17 ? traversals >= 17 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 18 ? traversals >= 18 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 19 ? traversals >= 19 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 20 ? traversals >= 20 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 21 ? traversals >= 21 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 22 ? traversals >= 22 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 23 ? traversals >= 23 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 24 ? traversals >= 24 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <h5> {this.props.block + 1}/4 Block</h5>\n                                {\n                                    userStart ?\n                                        pause ?\n                                            <Button style={{ marginLeft: 10 }} color=\"secondary\" variant=\"outlined\" onClick={this.handleResume}>Resume</Button>\n                                            :\n                                            <Button style={{ marginLeft: 10 }} color=\"primary\" variant=\"outlined\" onClick={this.handlePause}>Pause</Button>\n                                        :\n                                        <Button style={{ marginLeft: 10 }} disabled variant=\"outlined\" >Pause</Button>\n                                }\n                                <p>The blue dots on the progress bar may not advance with each trial. This is normal. Please do not adjust your computer volume during the test.</p>\n                            </div>\n                        </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default TestMain;","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/test/mid-page.jsx",["525"],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/test/audioloss1.jsx",["526"],"import React from \"react\";\nimport { CircularProgress, Avatar, Button } from \"@material-ui/core\";\n\nclass TestMain extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            maskVolume: this.props.volume,\n            sourceVolume: this.props.volume,\n            questions: [],\n            index: 0,\n            dbs: [0],\n            time: 0,\n            timer: [],\n            correct: [],\n            answers: [],\n            userStart: false,\n            alert: false,\n            once: false,\n            traversals: 0,\n            lastCorrectness: null,\n            pause: false\n        }\n    }\n\n    componentDidMount = async () => {\n        for (var i = 1; i < 5; i++) {\n            for (var j = 1; j < 9; j++) {\n                const audio1 = new Audio(process.env.PUBLIC_URL + \"/crm3-loss-audio/\" + i.toString() + j.toString() + \".wav\");\n                const audio2 = new Audio(process.env.PUBLIC_URL + \"/crm3-mask-audio/\" + i.toString() + j.toString() + \".wav\");\n                audio1.volume = 0;\n                audio2.volume = 0;\n                try {\n                    await audio1.play();\n                    await audio2.play();\n                    await audio1.pause();\n                    await audio2.pause();\n                } catch (e) { console.log(e, \"for\", i, j) }\n            }\n        }\n        this.setState({ loading: false });\n        this.playAudio();\n    }\n\n    startTimer = () => {\n        this.setState({ time: new Date().getTime() });\n    };\n    stopTimer = () => {\n        this.setState({ time: new Date().getTime() - this.state.time });\n    };\n    resetTimer = () => {\n        this.setState({ time: 0, alert: false });\n    };\n\n    getTargetAndMask = () => {\n        const {  questions } = this.state;\n        const color = Math.ceil(Math.random() * 4).toString();\n        const number = Math.ceil(Math.random() * 8).toString();\n        const colorMask = Math.ceil(Math.random() * 4).toString();\n        const numberMask = Math.ceil(Math.random() * 8).toString();\n        const question = color + number;\n        const questionMask = colorMask + numberMask;\n        if (question == questionMask) {\n            return this.getTargetAndMask();\n        }\n        questions.push(question);\n        this.setState({ questions });\n        return { question, questionMask };\n    }\n\n    playAudio = async () => {\n        const {  maskVolume, sourceVolume } = this.state;\n        const { question, questionMask } = this.getTargetAndMask();\n        console.log(\"Question and mask: \", question, questionMask);\n        let sourceAudio = new Audio(process.env.PUBLIC_URL + \"/crm3-loss-audio/\" + question + \".wav\");\n        let maskAudio = new Audio(process.env.PUBLIC_URL + \"/crm3-mask-audio/\" + questionMask + \".wav\");\n        sourceAudio.volume = sourceVolume;\n        maskAudio.volume = maskVolume;\n        await sourceAudio.play();\n        setTimeout(() => maskAudio.play(), 300);\n        setTimeout(() => {\n            maskAudio.pause();\n            this.startTimer();\n            this.setState({ userStart: true });\n        }, sourceAudio.duration * 1000);\n    }\n\n    handleClick = async (num) => {\n        const { questions, index, timer, lastCorrectness, traversals, correct, answers } = this.state;\n        await this.setState({ userStart: false });\n        await this.stopTimer();\n        await timer.push(this.state.time);\n        await this.resetTimer();\n        await this.setState({ timer });\n        answers.push(num);\n        await this.setState({ answers });\n        const right = questions[index] === num;\n        let sourceVolume;\n        if (right) {\n            correct.push(true);\n            if (lastCorrectness === null) {\n                this.setState({ lastCorrectness: true })\n            } else if (lastCorrectness === false) {\n                console.log(\"RIGHT, Traversal\", traversals + 1, \"times!\")\n                this.setState({ lastCorrectness: true, traversals: traversals + 1 })\n            }\n            sourceVolume = this.goHarder();\n        } else {\n            correct.push(false);\n            if (lastCorrectness === null) {\n                this.setState({ lastCorrectness: false })\n            } else if (lastCorrectness === true) {\n                console.log(\"WRONG, Traversal\", traversals + 1, \"times!\")\n                this.setState({ lastCorrectness: false, traversals: traversals + 1 })\n            }\n            sourceVolume = this.goEasier();\n        }\n        await this.setState({ index: index + 1, sourceVolume, correct });\n        if (this.state.traversals >= this.props.reversals) {\n            const { dbs } = this.state;\n            let sum = 0;\n            if (dbs.length >= 10) {\n                for (let i = dbs.length - 10; i < dbs.length; i++) {\n                    sum += dbs[i];\n                }\n            } else {\n                for (let i = 0; i < dbs.length; i++) {\n                    sum += dbs[i];\n                }\n            }\n            const SNR = Number(sum / 10).toFixed(2);\n            this.props.handleClick(SNR, timer, dbs, this.state.questions, this.state.answers, correct);\n        } else {\n            setTimeout(() => {\n                this.playAudio();\n            }, 2000)\n        }\n    }\n\n    goEasier = () => {\n        const { sourceVolume, index, dbs } = this.state;\n        dbs.push(dbs[index] + 3);\n        this.setState({ dbs });\n        if (sourceVolume * 10 ** (3 / 20) > 1) {\n            return 1;\n        } else {\n            return sourceVolume * 10 ** (3 / 20);\n        }\n    };\n\n    goHarder = () => {\n        const { sourceVolume, index, dbs } = this.state;\n        dbs.push(dbs[index] - 1);\n        this.setState({ dbs });\n        return sourceVolume * 10 ** (-1 / 20);\n    };\n\n    handleCloseAlert = (event, reason) => {\n        if (reason === \"clickaway\") return;\n        this.setState({ alert: false });\n    };\n\n    handlePause = () => {\n        this.setState({ pause: true });\n        if (this.state.userStart) {\n            this.stopTimer();\n        }\n    }\n\n    handleResume = () => {\n        this.setState({ pause: false });\n        if (this.state.userStart) {\n            this.setState({ time: new Date().getTime() - this.state.time });\n        }\n    }\n\n    render() {\n        const { traversals, loading, userStart, pause } = this.state;\n        const { reversals } = this.props;\n        return (\n            <div>\n                {\n                    loading\n                        ?\n                        <div>\n                            <CircularProgress />\n                        </div>\n                        :\n                        <div>\n                            <div id=\"buttons\" style={{ position: \"fixed\", height: \"80%\", width: \"100%\", backgroundColor: \"#C2CAD0\" }}>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"11\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"12\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"13\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"14\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"15\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"16\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"17\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"18\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"21\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"22\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"23\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"24\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"25\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"26\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"27\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"28\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"31\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"32\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"33\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"34\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"35\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"36\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"37\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"38\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"41\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"42\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"43\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"44\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"45\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"46\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"47\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"48\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                            </div>\n                            <div id=\"progress\" className=\"row\" style={{ position: \"fixed\", left: \"5%\", right: \"5%\", bottom: 10 }}>\n                                <h5>Progress⠀</h5>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 0 ? traversals >= 0 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 1 ? traversals >= 1 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 2 ? traversals >= 2 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 3 ? traversals >= 3 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 4 ? traversals >= 4 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 5 ? traversals >= 5 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 6 ? traversals >= 6 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 7 ? traversals >= 7 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 8 ? traversals >= 8 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 9 ? traversals >= 9 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 10 ? traversals >= 10 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 11 ? traversals >= 11 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 12 ? traversals >= 12 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 13 ? traversals >= 13 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 14 ? traversals >= 14 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 15 ? traversals >= 15 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 16 ? traversals >= 16 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 17 ? traversals >= 17 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 18 ? traversals >= 18 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 19 ? traversals >= 19 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 20 ? traversals >= 20 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 21 ? traversals >= 21 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 22 ? traversals >= 22 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 23 ? traversals >= 23 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 24 ? traversals >= 24 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <h5> {this.props.block + 1}/4 Block</h5>\n                                {\n                                    userStart ?\n                                        pause ?\n                                            <Button style={{ marginLeft: 10 }} color=\"secondary\" variant=\"outlined\" onClick={this.handleResume}>Resume</Button>\n                                            :\n                                            <Button style={{ marginLeft: 10 }} color=\"primary\" variant=\"outlined\" onClick={this.handlePause}>Pause</Button>\n                                        :\n                                        <Button style={{ marginLeft: 10 }} disabled variant=\"outlined\" >Pause</Button>\n                                }\n                                <p>The blue dots on the progress bar may not advance with each trial. This is normal. Please do not adjust your computer volume during the test.</p>\n                            </div>\n                        </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default TestMain;","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/test/source1.jsx",["527"],"import React from \"react\";\nimport { CircularProgress, Avatar, Button } from \"@material-ui/core\";\n\nclass TestMain extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            maskVolume: this.props.volume,\n            sourceVolume: this.props.volume,\n            questions: [],\n            index: 0,\n            dbs: [0],\n            time: 0,\n            timer: [],\n            correct: [],\n            answers: [],\n            userStart: false,\n            alert: false,\n            once: false,\n            traversals: 0,\n            lastCorrectness: null,\n            pause: false\n        }\n    }\n\n    componentDidMount = async () => {\n        for (var i = 1; i < 5; i++) {\n            for (var j = 1; j < 9; j++) {\n                const audio1 = new Audio(process.env.PUBLIC_URL + \"/crm3-source-audio/\" + i.toString() + j.toString() + \".wav\");\n                const audio2 = new Audio(process.env.PUBLIC_URL + \"/crm3-mask-audio/\" + i.toString() + j.toString() + \".wav\");\n                audio1.volume = 0;\n                audio2.volume = 0;\n                try {\n                    await audio1.play();\n                    await audio2.play();\n                    await audio1.pause();\n                    await audio2.pause();\n                } catch (e) { console.log(e, \"for\", i, j) }\n            }\n        }\n\n        this.setState({ loading: false });\n        this.playAudio();\n    }\n\n    startTimer = () => {\n        this.setState({ time: new Date().getTime() });\n    };\n    stopTimer = () => {\n        this.setState({ time: new Date().getTime() - this.state.time });\n    };\n    resetTimer = () => {\n        this.setState({ time: 0, alert: false });\n    };\n\n    getTargetAndMask = () => {\n        const {  questions } = this.state;\n        const color = Math.ceil(Math.random() * 4).toString();\n        const number = Math.ceil(Math.random() * 8).toString();\n        const colorMask = Math.ceil(Math.random() * 4).toString();\n        const numberMask = Math.ceil(Math.random() * 8).toString();\n        const question = color + number;\n        const questionMask = colorMask + numberMask;\n        if (question == questionMask) {\n            return this.getTargetAndMask();\n        }\n        questions.push(question);\n        this.setState({ questions });\n        return { question, questionMask };\n    }\n\n    playAudio = async () => {\n        const {  maskVolume, sourceVolume } = this.state;\n        const { question, questionMask } = this.getTargetAndMask();\n        console.log(\"Question and mask: \", question, questionMask);\n        let sourceAudio = new Audio(process.env.PUBLIC_URL + \"/crm3-source-audio/\" + question + \".wav\");\n        let maskAudio = new Audio(process.env.PUBLIC_URL + \"/crm3-mask-audio/\" + questionMask + \".wav\");\n        sourceAudio.volume = sourceVolume;\n        maskAudio.volume = maskVolume;\n        await sourceAudio.play();\n        setTimeout(() => maskAudio.play(), 300);\n        setTimeout(() => {\n            maskAudio.pause();\n            this.startTimer();\n            this.setState({ userStart: true });\n        }, sourceAudio.duration * 1000);\n    }\n\n    handleClick = async (num) => {\n        const { questions, index, timer, lastCorrectness, traversals, correct, answers } = this.state;\n        await this.setState({ userStart: false });\n        await this.stopTimer();\n        await timer.push(this.state.time);\n        await this.resetTimer();\n        await this.setState({ timer });\n        answers.push(num);\n        await this.setState({answers});\n        const right = questions[index] === num;\n        let sourceVolume;\n        if (right) {\n            correct.push(true);\n            if (lastCorrectness === null) {\n                this.setState({ lastCorrectness: true })\n            } else if (lastCorrectness === false) {\n                console.log(\"RIGHT, Traversal\", traversals + 1, \"times!\")\n                this.setState({ lastCorrectness: true, traversals: traversals + 1 })\n            }\n            sourceVolume = this.goHarder();\n        } else {\n            correct.push(false);\n            if (lastCorrectness === null) {\n                this.setState({ lastCorrectness: false })\n            } else if (lastCorrectness === true) {\n                console.log(\"WRONG, Traversal\", traversals + 1, \"times!\")\n                this.setState({ lastCorrectness: false, traversals: traversals + 1 })\n            }\n            sourceVolume = this.goEasier();\n        }\n        await this.setState({ index: index + 1, sourceVolume, correct });\n        if (this.state.traversals >= this.props.reversals) {\n            const { dbs } = this.state;\n            let sum = 0;\n            if (dbs.length >= 10) {\n                for (let i = dbs.length - 10; i < dbs.length; i++) {\n                    sum += dbs[i];\n                }\n            } else {\n                for (let i = 0; i < dbs.length; i++) {\n                    sum += dbs[i];\n                }\n            }\n            const SNR = Number(sum / 10).toFixed(2);\n            this.props.handleClick(SNR, timer, dbs, this.state.questions, this.state.answers, correct);\n        } else {\n            setTimeout(() => {\n                this.playAudio();\n            }, 2000)\n        }\n    }\n\n    goEasier = () => {\n        const { sourceVolume, index, dbs } = this.state;\n        dbs.push(dbs[index] + 3);\n        this.setState({ dbs });\n        if (sourceVolume * 10 ** (3 / 20) > 1) {\n            return 1;\n        } else {\n            return sourceVolume * 10 ** (3 / 20);\n        }\n    };\n\n    goHarder = () => {\n        const { sourceVolume, index, dbs } = this.state;\n        dbs.push(dbs[index] - 1);\n        this.setState({ dbs });\n        return sourceVolume * 10 ** (-1 / 20);\n    };\n\n    handleCloseAlert = (event, reason) => {\n        if (reason === \"clickaway\") return;\n        this.setState({ alert: false });\n    };\n\n    handlePause = () => {\n        this.setState({ pause: true });\n        if (this.state.userStart) {\n            this.stopTimer();\n        }\n    }\n\n    handleResume = () => {\n        this.setState({ pause: false });\n        if (this.state.userStart) {\n            this.setState({ time: new Date().getTime() - this.state.time });\n        }\n    }\n\n    render() {\n        const { traversals, loading, userStart, pause } = this.state;\n        const { reversals } = this.props;\n        return (\n            <div>\n                {\n                    loading\n                        ?\n                        <div>\n                            <CircularProgress />\n                        </div>\n                        :\n                        <div>\n                            <div id=\"buttons\" style={{ position: \"fixed\", height: \"80%\", width: \"100%\", backgroundColor: \"#C2CAD0\" }}>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"11\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"12\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"13\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"14\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"15\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"16\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"17\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"18\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"21\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"22\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"23\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"24\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"25\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"26\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"27\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"28\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"31\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"32\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"33\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"34\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"35\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"36\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"37\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"38\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"41\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"42\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"43\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"44\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"45\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"46\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"47\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"48\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                            </div>\n                            <div id=\"progress\" className=\"row\" style={{ position: \"fixed\", left: \"5%\", right: \"5%\", bottom: 10 }}>\n                                <h5>Progress⠀</h5>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 0 ? traversals >= 0 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 1 ? traversals >= 1 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 2 ? traversals >= 2 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 3 ? traversals >= 3 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 4 ? traversals >= 4 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 5 ? traversals >= 5 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 6 ? traversals >= 6 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 7 ? traversals >= 7 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 8 ? traversals >= 8 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 9 ? traversals >= 9 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 10 ? traversals >= 10 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 11 ? traversals >= 11 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 12 ? traversals >= 12 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 13 ? traversals >= 13 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 14 ? traversals >= 14 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 15 ? traversals >= 15 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 16 ? traversals >= 16 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 17 ? traversals >= 17 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 18 ? traversals >= 18 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 19 ? traversals >= 19 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 20 ? traversals >= 20 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 21 ? traversals >= 21 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 22 ? traversals >= 22 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 23 ? traversals >= 23 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 24 ? traversals >= 24 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <h5> {this.props.block + 1}/4 Block</h5>\n                                {\n                                    userStart ?\n                                        pause ?\n                                            <Button style={{ marginLeft: 10 }} color=\"secondary\" variant=\"outlined\" onClick={this.handleResume}>Resume</Button>\n                                            :\n                                            <Button style={{ marginLeft: 10 }} color=\"primary\" variant=\"outlined\" onClick={this.handlePause}>Pause</Button>\n                                        :\n                                        <Button style={{ marginLeft: 10 }} disabled variant=\"outlined\" >Pause</Button>\n                                }\n                                <p>The blue dots on the progress bar may not advance with each trial. This is normal. Please do not adjust your computer volume during the test.</p>\n                            </div>\n                        </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default TestMain;","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/post-test/questions2.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/post-test/questions3.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/post-test/questions1.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/post-test/questions4.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/assets/digits/question-table.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/pre-test/demo-info.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/post-test/questions1.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/post-test/questions2.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/assets/digits/question2-table.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/test/mid-page.jsx",["528"],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/post-test/questions3.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/pre-test/ICF.jsx",["529"],"/Users/kaysong/Documents/hearing_test_frontend/src/assets/digits/user-data-table.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/test/test.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/pre-test/adjustment.jsx",["530","531"],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/pre-test/questions.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/post-test/end.jsx",["532"],"import React from \"react\";\nimport { Button, Container } from \"@material-ui/core\";\n\nexport default (props) => {\n  return (\n    <Container>\n      <div\n        style={{\n          textAlign: \"center\",\n          position: \"relative\",\n          marginTop: \"20%\",\n        }}\n      >\n        <h2>\n        Thank you for participating in this test!\n        </h2>\n        <h3>Your participant ID is: {props.ID}</h3>\n        <h5>You may contact the investigators at jcbhlab@ualberta.ca and use this number to withdraw your data up to one week after you have completed the experiment.</h5>\n        <Button variant=\"contained\" color=\"primary\" onClick={() => window.location = \"/\"} >Back to Main Page</Button>\n      </div>\n    </Container>\n  );\n};\n","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/test/source2.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/test/source1.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/test/audioloss2.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/pre-test/welcome.jsx",["533"],"import React from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport Footer from \"../../partials/footer\";\n\nexport default () => {\n  return (\n    <Container>\n      <div\n        style={{\n          textAlign: \"center\",\n          position: \"relative\",\n          marginTop: \"24%\",\n        }}\n      >\n        <h1>Welcome</h1>\n      </div>\n      <Footer />\n    </Container>\n  );\n};\n","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/test/audioloss1.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/assets/digits/score-slider.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/assets/digits/count-down.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/assets/digits/volume-slider.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/assets/signal-loss/volume-slider.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/assets/signal-loss/pdf-reviewer.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/partials/footer.jsx",["534","535","536"],"import React from \"react\";\n\nfunction Footer() {\n  return <div style={{\n    display: 'block',\n    padding: '2px',\n    height: '10%',\n    width: '100%',\n  }}>\n    <div className=\"row\" style={{\n      padding: 20,\n      position: \"fixed\",\n      left: 0,\n      bottom: 0,\n      right: 0\n    }}>\n      <img style={{ height: 50, width: 500, marginTop: 30, marginLeft: 5 }} src={process.env.PUBLIC_URL + \"/pictures/rehab.png\"} />\n      <img style={{ height: 100, width: 233, marginTop: 10, marginLeft: 20 }} src={process.env.PUBLIC_URL + \"/pictures/covenant.png\"} />\n      <img style={{ height: 100, width: 300, marginTop: 10, marginLeft: 20 }} src={process.env.PUBLIC_URL + \"/pictures/irsm.png\"} />\n    </div>\n  </div>\n}\n\nexport default Footer;","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/pre-test/demo-info.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/pre-test/ICF.jsx",["537"],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/pre-test/questions.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/pre-test/adjustment.jsx",["538","539"],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/pre-test/welcome.jsx",["540"],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/pre-test/welcome.jsx",["541"],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/pre-test/adjustment.jsx",["542","543"],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/pre-test/questions.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/pre-test/ICF.jsx",["544"],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/pre-test/demo-info.jsx",[],{"ruleId":"545","severity":1,"message":"546","line":1,"column":1,"nodeType":"547","messageId":"548","endLine":1,"endColumn":13,"fix":"549"},{"ruleId":"550","replacedBy":"551"},{"ruleId":"552","replacedBy":"553"},{"ruleId":"554","severity":1,"message":"555","line":33,"column":23,"nodeType":"556","messageId":"557","endLine":33,"endColumn":25},{"ruleId":"558","severity":1,"message":"559","line":41,"column":7,"nodeType":"560","messageId":"561","endLine":54,"endColumn":8},{"ruleId":"554","severity":1,"message":"555","line":64,"column":23,"nodeType":"556","messageId":"557","endLine":64,"endColumn":25},{"ruleId":"554","severity":1,"message":"555","line":70,"column":49,"nodeType":"556","messageId":"557","endLine":70,"endColumn":51},{"ruleId":"554","severity":1,"message":"555","line":76,"column":51,"nodeType":"556","messageId":"557","endLine":76,"endColumn":53},{"ruleId":"554","severity":1,"message":"555","line":82,"column":51,"nodeType":"556","messageId":"557","endLine":82,"endColumn":53},{"ruleId":"554","severity":1,"message":"555","line":88,"column":51,"nodeType":"556","messageId":"557","endLine":88,"endColumn":53},{"ruleId":"554","severity":1,"message":"555","line":94,"column":51,"nodeType":"556","messageId":"557","endLine":94,"endColumn":53},{"ruleId":"554","severity":1,"message":"555","line":152,"column":23,"nodeType":"556","messageId":"557","endLine":152,"endColumn":25},{"ruleId":"562","severity":1,"message":"563","line":28,"column":5,"nodeType":"564","endLine":28,"endColumn":21},{"ruleId":"554","severity":1,"message":"555","line":33,"column":23,"nodeType":"556","messageId":"557","endLine":33,"endColumn":25},{"ruleId":"558","severity":1,"message":"559","line":41,"column":7,"nodeType":"560","messageId":"561","endLine":54,"endColumn":8},{"ruleId":"554","severity":1,"message":"555","line":64,"column":23,"nodeType":"556","messageId":"557","endLine":64,"endColumn":25},{"ruleId":"554","severity":1,"message":"555","line":70,"column":49,"nodeType":"556","messageId":"557","endLine":70,"endColumn":51},{"ruleId":"554","severity":1,"message":"555","line":76,"column":51,"nodeType":"556","messageId":"557","endLine":76,"endColumn":53},{"ruleId":"554","severity":1,"message":"555","line":82,"column":51,"nodeType":"556","messageId":"557","endLine":82,"endColumn":53},{"ruleId":"554","severity":1,"message":"555","line":88,"column":51,"nodeType":"556","messageId":"557","endLine":88,"endColumn":53},{"ruleId":"554","severity":1,"message":"555","line":94,"column":51,"nodeType":"556","messageId":"557","endLine":94,"endColumn":53},{"ruleId":"554","severity":1,"message":"555","line":152,"column":23,"nodeType":"556","messageId":"557","endLine":152,"endColumn":25},{"ruleId":"554","severity":1,"message":"555","line":33,"column":23,"nodeType":"556","messageId":"557","endLine":33,"endColumn":25},{"ruleId":"558","severity":1,"message":"559","line":41,"column":7,"nodeType":"560","messageId":"561","endLine":54,"endColumn":8},{"ruleId":"554","severity":1,"message":"555","line":64,"column":23,"nodeType":"556","messageId":"557","endLine":64,"endColumn":25},{"ruleId":"554","severity":1,"message":"555","line":70,"column":49,"nodeType":"556","messageId":"557","endLine":70,"endColumn":51},{"ruleId":"554","severity":1,"message":"555","line":76,"column":51,"nodeType":"556","messageId":"557","endLine":76,"endColumn":53},{"ruleId":"554","severity":1,"message":"555","line":82,"column":51,"nodeType":"556","messageId":"557","endLine":82,"endColumn":53},{"ruleId":"554","severity":1,"message":"555","line":88,"column":51,"nodeType":"556","messageId":"557","endLine":88,"endColumn":53},{"ruleId":"554","severity":1,"message":"555","line":94,"column":51,"nodeType":"556","messageId":"557","endLine":94,"endColumn":53},{"ruleId":"554","severity":1,"message":"555","line":152,"column":23,"nodeType":"556","messageId":"557","endLine":152,"endColumn":25},{"ruleId":"554","severity":1,"message":"555","line":33,"column":23,"nodeType":"556","messageId":"557","endLine":33,"endColumn":25},{"ruleId":"558","severity":1,"message":"559","line":41,"column":7,"nodeType":"560","messageId":"561","endLine":54,"endColumn":8},{"ruleId":"554","severity":1,"message":"555","line":64,"column":23,"nodeType":"556","messageId":"557","endLine":64,"endColumn":25},{"ruleId":"554","severity":1,"message":"555","line":70,"column":49,"nodeType":"556","messageId":"557","endLine":70,"endColumn":51},{"ruleId":"554","severity":1,"message":"555","line":76,"column":51,"nodeType":"556","messageId":"557","endLine":76,"endColumn":53},{"ruleId":"554","severity":1,"message":"555","line":82,"column":51,"nodeType":"556","messageId":"557","endLine":82,"endColumn":53},{"ruleId":"554","severity":1,"message":"555","line":88,"column":51,"nodeType":"556","messageId":"557","endLine":88,"endColumn":53},{"ruleId":"554","severity":1,"message":"555","line":94,"column":51,"nodeType":"556","messageId":"557","endLine":94,"endColumn":53},{"ruleId":"554","severity":1,"message":"555","line":152,"column":23,"nodeType":"556","messageId":"557","endLine":152,"endColumn":25},{"ruleId":"554","severity":1,"message":"555","line":25,"column":32,"nodeType":"556","messageId":"557","endLine":25,"endColumn":34},{"ruleId":"565","severity":1,"message":"566","line":7,"column":3,"nodeType":"567","messageId":"568","endLine":7,"endColumn":17},{"ruleId":"565","severity":1,"message":"569","line":39,"column":7,"nodeType":"567","messageId":"568","endLine":39,"endColumn":10},{"ruleId":"570","severity":1,"message":"571","line":39,"column":26,"nodeType":"572","messageId":"573","endLine":39,"endColumn":27,"suggestions":"574"},{"ruleId":"570","severity":1,"message":"571","line":39,"column":51,"nodeType":"572","messageId":"573","endLine":39,"endColumn":52,"suggestions":"575"},{"ruleId":"576","severity":1,"message":"577","line":4,"column":1,"nodeType":"578","endLine":40,"endColumn":3},{"ruleId":"565","severity":1,"message":"579","line":2,"column":10,"nodeType":"567","messageId":"568","endLine":2,"endColumn":16},{"ruleId":"576","severity":1,"message":"577","line":4,"column":1,"nodeType":"578","endLine":23,"endColumn":3},{"ruleId":"576","severity":1,"message":"577","line":4,"column":1,"nodeType":"578","endLine":33,"endColumn":3},{"ruleId":"565","severity":1,"message":"580","line":70,"column":7,"nodeType":"567","messageId":"568","endLine":70,"endColumn":15},{"ruleId":"565","severity":1,"message":"581","line":73,"column":7,"nodeType":"567","messageId":"568","endLine":73,"endColumn":17},{"ruleId":"576","severity":1,"message":"577","line":4,"column":1,"nodeType":"578","endLine":18,"endColumn":3},{"ruleId":"576","severity":1,"message":"577","line":4,"column":1,"nodeType":"578","endLine":16,"endColumn":2},{"ruleId":"582","severity":1,"message":"583","line":65,"column":22,"nodeType":"584","messageId":"585","endLine":65,"endColumn":24},{"ruleId":"582","severity":1,"message":"583","line":64,"column":22,"nodeType":"584","messageId":"585","endLine":64,"endColumn":24},{"ruleId":"582","severity":1,"message":"583","line":64,"column":22,"nodeType":"584","messageId":"585","endLine":64,"endColumn":24},{"ruleId":"582","severity":1,"message":"583","line":65,"column":22,"nodeType":"584","messageId":"585","endLine":65,"endColumn":24},{"ruleId":"586","severity":1,"message":"587","line":84,"column":19,"nodeType":"588","endLine":84,"endColumn":127},{"ruleId":"576","severity":1,"message":"577","line":4,"column":1,"nodeType":"578","endLine":23,"endColumn":3},{"ruleId":"565","severity":1,"message":"589","line":2,"column":29,"nodeType":"567","messageId":"568","endLine":2,"endColumn":38},{"ruleId":"565","severity":1,"message":"590","line":2,"column":40,"nodeType":"567","messageId":"568","endLine":2,"endColumn":50},{"ruleId":"576","severity":1,"message":"577","line":5,"column":1,"nodeType":"578","endLine":20,"endColumn":3},{"ruleId":"576","severity":1,"message":"577","line":4,"column":1,"nodeType":"578","endLine":16,"endColumn":2},{"ruleId":"576","severity":1,"message":"577","line":4,"column":1,"nodeType":"578","endLine":23,"endColumn":3},{"ruleId":"576","severity":1,"message":"577","line":4,"column":1,"nodeType":"578","endLine":23,"endColumn":3},{"ruleId":"582","severity":1,"message":"583","line":65,"column":22,"nodeType":"584","messageId":"585","endLine":65,"endColumn":24},{"ruleId":"582","severity":1,"message":"583","line":64,"column":22,"nodeType":"584","messageId":"585","endLine":64,"endColumn":24},{"ruleId":"576","severity":1,"message":"577","line":4,"column":1,"nodeType":"578","endLine":16,"endColumn":2},{"ruleId":"582","severity":1,"message":"583","line":64,"column":22,"nodeType":"584","messageId":"585","endLine":64,"endColumn":24},{"ruleId":"582","severity":1,"message":"583","line":65,"column":22,"nodeType":"584","messageId":"585","endLine":65,"endColumn":24},{"ruleId":"576","severity":1,"message":"577","line":4,"column":1,"nodeType":"578","endLine":16,"endColumn":2},{"ruleId":"586","severity":1,"message":"587","line":84,"column":19,"nodeType":"588","endLine":84,"endColumn":127},{"ruleId":"565","severity":1,"message":"589","line":2,"column":29,"nodeType":"567","messageId":"568","endLine":2,"endColumn":38},{"ruleId":"565","severity":1,"message":"590","line":2,"column":40,"nodeType":"567","messageId":"568","endLine":2,"endColumn":50},{"ruleId":"576","severity":1,"message":"577","line":4,"column":1,"nodeType":"578","endLine":23,"endColumn":3},{"ruleId":"576","severity":1,"message":"577","line":5,"column":1,"nodeType":"578","endLine":20,"endColumn":3},{"ruleId":"591","severity":1,"message":"592","line":17,"column":7,"nodeType":"588","endLine":17,"endColumn":132},{"ruleId":"591","severity":1,"message":"592","line":18,"column":7,"nodeType":"588","endLine":18,"endColumn":137},{"ruleId":"591","severity":1,"message":"592","line":19,"column":7,"nodeType":"588","endLine":19,"endColumn":133},{"ruleId":"586","severity":1,"message":"587","line":84,"column":19,"nodeType":"588","endLine":84,"endColumn":127},{"ruleId":"565","severity":1,"message":"589","line":2,"column":29,"nodeType":"567","messageId":"568","endLine":2,"endColumn":38},{"ruleId":"565","severity":1,"message":"590","line":2,"column":40,"nodeType":"567","messageId":"568","endLine":2,"endColumn":50},{"ruleId":"576","severity":1,"message":"577","line":5,"column":1,"nodeType":"578","endLine":20,"endColumn":3},{"ruleId":"576","severity":1,"message":"577","line":5,"column":1,"nodeType":"578","endLine":20,"endColumn":3},{"ruleId":"565","severity":1,"message":"589","line":2,"column":29,"nodeType":"567","messageId":"568","endLine":2,"endColumn":38},{"ruleId":"565","severity":1,"message":"590","line":2,"column":40,"nodeType":"567","messageId":"568","endLine":2,"endColumn":50},{"ruleId":"586","severity":1,"message":"587","line":84,"column":19,"nodeType":"588","endLine":84,"endColumn":127},"strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"593","text":"594"},"no-native-reassign",["595"],"no-negated-in-lhs",["596"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-unused-vars","'FormHelperText' is defined but never used.","Identifier","unusedVar","'rms' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["597","598"],["599","600"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Button' is defined but never used.","'answers2' is assigned a value but never used.","'questions2' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'TextField' is defined but never used.","'InputLabel' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",[0,12],"","no-global-assign","no-unsafe-negation",{"messageId":"601","fix":"602","desc":"603"},{"messageId":"604","fix":"605","desc":"606"},{"messageId":"601","fix":"607","desc":"603"},{"messageId":"604","fix":"608","desc":"606"},"removeEscape",{"range":"609","text":"594"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"610","text":"611"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"612","text":"594"},{"range":"613","text":"611"},[831,832],[831,831],"\\",[856,857],[856,856]]