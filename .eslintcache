[{"/Users/kaysong/Documents/hearing_test_frontend/src/index.js":"1","/Users/kaysong/Documents/hearing_test_frontend/src/App.js":"2","/Users/kaysong/Documents/hearing_test_frontend/src/pages/digits/main.jsx":"3","/Users/kaysong/Documents/hearing_test_frontend/src/pages/main.jsx":"4","/Users/kaysong/Documents/hearing_test_frontend/src/pages/digits/database.jsx":"5","/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm1/test.jsx":"6","/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm1/main.jsx":"7","/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm1/data.jsx":"8","/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm2/data.jsx":"9","/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm2/main.jsx":"10","/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm3/main.jsx":"11","/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm3/data.jsx":"12","/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm4/main.jsx":"13","/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm4/data.jsx":"14","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/database/pre-test.jsx":"15","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/database/post-test-3.jsx":"16","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/database/consents.jsx":"17","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/database/post-test-1.jsx":"18","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/database/post-test-2.jsx":"19","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/database/user-data.jsx":"20","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/pre-test/environment.jsx":"21","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/pre-test/welcome.jsx":"22","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/pre-test/consent.jsx":"23","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/post-test/submit.jsx":"24","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/pre-test/demo-info.jsx":"25","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/pre-test/adjustment.jsx":"26","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/post-test/post-test-questions.jsx":"27","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/pre-test/hearing.jsx":"28","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/mid-page.jsx":"29","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/test.jsx":"30","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/audioloss2.jsx":"31","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/source2.jsx":"32","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/audioloss1.jsx":"33","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/test/test-demo.jsx":"34","/Users/kaysong/Documents/hearing_test_frontend/src/components/partials/csv.jsx":"35","/Users/kaysong/Documents/hearing_test_frontend/src/components/partials/pre-test/welcome.jsx":"36","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/source1.jsx":"37","/Users/kaysong/Documents/hearing_test_frontend/src/components/partials/pre-test/questions.jsx":"38","/Users/kaysong/Documents/hearing_test_frontend/src/components/partials/pre-test/ICF.jsx":"39","/Users/kaysong/Documents/hearing_test_frontend/src/components/partials/pre-test/adjustment.jsx":"40","/Users/kaysong/Documents/hearing_test_frontend/src/components/partials/post-test/questions1.jsx":"41","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/test/speech-in-noise.jsx":"42","/Users/kaysong/Documents/hearing_test_frontend/src/components/partials/post-test/questions3.jsx":"43","/Users/kaysong/Documents/hearing_test_frontend/src/components/partials/pre-test/demo-info.jsx":"44","/Users/kaysong/Documents/hearing_test_frontend/src/components/partials/post-test/questions2.jsx":"45","/Users/kaysong/Documents/hearing_test_frontend/src/components/partials/post-test/questions4.jsx":"46","/Users/kaysong/Documents/hearing_test_frontend/src/components/partials/post-test/end.jsx":"47","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/mid-page.jsx":"48","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/source2.jsx":"49","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/source4.jsx":"50","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/source1.jsx":"51","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/source3.jsx":"52","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/test.jsx":"53","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/test.jsx":"54","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/audioloss1.jsx":"55","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/source2.jsx":"56","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/source1.jsx":"57","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/audioloss2.jsx":"58","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/mid-page.jsx":"59","/Users/kaysong/Documents/hearing_test_frontend/src/assets/digits/data-card.jsx":"60","/Users/kaysong/Documents/hearing_test_frontend/src/assets/signal-loss/data-table.jsx":"61","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/source2.jsx":"62","/Users/kaysong/Documents/hearing_test_frontend/src/assets/digits/question2-table.jsx":"63","/Users/kaysong/Documents/hearing_test_frontend/src/assets/digits/user-data-table.jsx":"64","/Users/kaysong/Documents/hearing_test_frontend/src/assets/digits/question-table.jsx":"65","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/mid-page.jsx":"66","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/source1.jsx":"67","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/audioloss1.jsx":"68","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/audioloss2.jsx":"69","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/test.jsx":"70","/Users/kaysong/Documents/hearing_test_frontend/src/components/partials/footer.jsx":"71","/Users/kaysong/Documents/hearing_test_frontend/src/assets/digits/volume-slider.jsx":"72","/Users/kaysong/Documents/hearing_test_frontend/src/assets/digits/score-slider.jsx":"73","/Users/kaysong/Documents/hearing_test_frontend/src/assets/digits/count-down.jsx":"74","/Users/kaysong/Documents/hearing_test_frontend/src/assets/signal-loss/pdf-reviewer.jsx":"75","/Users/kaysong/Documents/hearing_test_frontend/src/assets/signal-loss/volume-slider.jsx":"76","/Users/kaysong/Documents/hearing_test_frontend/src/pages/questionnaire/main.jsx":"77","/Users/kaysong/Documents/hearing_test_frontend/src/pages/questionnaire/database.jsx":"78","/Users/kaysong/Documents/hearing_test_frontend/src/pages/questionnaire/aphab-b.jsx":"79","/Users/kaysong/Documents/hearing_test_frontend/src/pages/questionnaire/aphab-a.jsx":"80","/Users/kaysong/Documents/hearing_test_frontend/src/components/questionnaire/aphab-a/example-table.jsx":"81","/Users/kaysong/Documents/hearing_test_frontend/src/components/questionnaire/aphab-a/question-table.jsx":"82","/Users/kaysong/Documents/hearing_test_frontend/src/components/questionnaire/aphab-a/fill-in-form-table.jsx":"83"},{"size":158,"mtime":1613447803654,"results":"84","hashOfConfig":"85"},{"size":3124,"mtime":1616964509996,"results":"86","hashOfConfig":"85"},{"size":3752,"mtime":1616958082582,"results":"87","hashOfConfig":"85"},{"size":2727,"mtime":1616963747589,"results":"88","hashOfConfig":"85"},{"size":1690,"mtime":1614162921487,"results":"89","hashOfConfig":"85"},{"size":1804,"mtime":1614462325689,"results":"90","hashOfConfig":"85"},{"size":8857,"mtime":1615680168651,"results":"91","hashOfConfig":"85"},{"size":9712,"mtime":1615679915287,"results":"92","hashOfConfig":"85"},{"size":9712,"mtime":1615679983232,"results":"93","hashOfConfig":"85"},{"size":8819,"mtime":1615680381606,"results":"94","hashOfConfig":"85"},{"size":8854,"mtime":1615680380010,"results":"95","hashOfConfig":"85"},{"size":9712,"mtime":1615679992164,"results":"96","hashOfConfig":"85"},{"size":8854,"mtime":1615680389842,"results":"97","hashOfConfig":"85"},{"size":9712,"mtime":1615679997910,"results":"98","hashOfConfig":"85"},{"size":2043,"mtime":1614163218157,"results":"99","hashOfConfig":"85"},{"size":2056,"mtime":1614163212093,"results":"100","hashOfConfig":"85"},{"size":2040,"mtime":1614163194838,"results":"101","hashOfConfig":"85"},{"size":2056,"mtime":1614163201345,"results":"102","hashOfConfig":"85"},{"size":3269,"mtime":1614163206143,"results":"103","hashOfConfig":"85"},{"size":1841,"mtime":1615351713194,"results":"104","hashOfConfig":"85"},{"size":793,"mtime":1615674202121,"results":"105","hashOfConfig":"85"},{"size":387,"mtime":1615673682267,"results":"106","hashOfConfig":"85"},{"size":9438,"mtime":1613447803653,"results":"107","hashOfConfig":"85"},{"size":1051,"mtime":1613447803652,"results":"108","hashOfConfig":"85"},{"size":2097,"mtime":1615676859661,"results":"109","hashOfConfig":"85"},{"size":4304,"mtime":1615677514344,"results":"110","hashOfConfig":"85"},{"size":5763,"mtime":1614462287774,"results":"111","hashOfConfig":"85"},{"size":4685,"mtime":1614162774983,"results":"112","hashOfConfig":"85"},{"size":496,"mtime":1615679264603,"results":"113","hashOfConfig":"85"},{"size":15723,"mtime":1615679268991,"results":"114","hashOfConfig":"85"},{"size":19766,"mtime":1615679263020,"results":"115","hashOfConfig":"85"},{"size":19774,"mtime":1615679267022,"results":"116","hashOfConfig":"85"},{"size":19759,"mtime":1615679258113,"results":"117","hashOfConfig":"85"},{"size":10667,"mtime":1615678658129,"results":"118","hashOfConfig":"85"},{"size":319,"mtime":1613447803653,"results":"119","hashOfConfig":"85"},{"size":387,"mtime":1615350319020,"results":"120","hashOfConfig":"85"},{"size":19761,"mtime":1615679265853,"results":"121","hashOfConfig":"85"},{"size":4187,"mtime":1615350319019,"results":"122","hashOfConfig":"85"},{"size":7824,"mtime":1616959515840,"results":"123","hashOfConfig":"85"},{"size":5212,"mtime":1615350319019,"results":"124","hashOfConfig":"85"},{"size":3644,"mtime":1615350319001,"results":"125","hashOfConfig":"85"},{"size":11236,"mtime":1616958141867,"results":"126","hashOfConfig":"85"},{"size":3644,"mtime":1615350319002,"results":"127","hashOfConfig":"85"},{"size":5719,"mtime":1615671193211,"results":"128","hashOfConfig":"85"},{"size":3644,"mtime":1615350319002,"results":"129","hashOfConfig":"85"},{"size":3647,"mtime":1615350319002,"results":"130","hashOfConfig":"85"},{"size":733,"mtime":1615350319001,"results":"131","hashOfConfig":"85"},{"size":496,"mtime":1615680299589,"results":"132","hashOfConfig":"85"},{"size":19774,"mtime":1615680299596,"results":"133","hashOfConfig":"85"},{"size":19761,"mtime":1615680299603,"results":"134","hashOfConfig":"85"},{"size":19761,"mtime":1615680299593,"results":"135","hashOfConfig":"85"},{"size":19761,"mtime":1615680299600,"results":"136","hashOfConfig":"85"},{"size":15723,"mtime":1615680299629,"results":"137","hashOfConfig":"85"},{"size":16281,"mtime":1615680351208,"results":"138","hashOfConfig":"85"},{"size":20418,"mtime":1615680344851,"results":"139","hashOfConfig":"85"},{"size":20434,"mtime":1615680348317,"results":"140","hashOfConfig":"85"},{"size":20421,"mtime":1615680349863,"results":"141","hashOfConfig":"85"},{"size":20425,"mtime":1615680346493,"results":"142","hashOfConfig":"85"},{"size":496,"mtime":1615680347399,"results":"143","hashOfConfig":"85"},{"size":1049,"mtime":1613447803651,"results":"144","hashOfConfig":"85"},{"size":1408,"mtime":1613849348372,"results":"145","hashOfConfig":"85"},{"size":20349,"mtime":1615680363954,"results":"146","hashOfConfig":"85"},{"size":1991,"mtime":1613447803651,"results":"147","hashOfConfig":"85"},{"size":1515,"mtime":1615351643411,"results":"148","hashOfConfig":"85"},{"size":1514,"mtime":1613447803651,"results":"149","hashOfConfig":"85"},{"size":496,"mtime":1615680362188,"results":"150","hashOfConfig":"85"},{"size":20335,"mtime":1615680362953,"results":"151","hashOfConfig":"85"},{"size":20332,"mtime":1615680360444,"results":"152","hashOfConfig":"85"},{"size":20339,"mtime":1615680361299,"results":"153","hashOfConfig":"85"},{"size":16264,"mtime":1615680365848,"results":"154","hashOfConfig":"85"},{"size":881,"mtime":1615865104738,"results":"155","hashOfConfig":"85"},{"size":1219,"mtime":1615676811984,"results":"156","hashOfConfig":"85"},{"size":890,"mtime":1613447803651,"results":"157","hashOfConfig":"85"},{"size":694,"mtime":1613447803651,"results":"158","hashOfConfig":"85"},{"size":1436,"mtime":1613456054549,"results":"159","hashOfConfig":"85"},{"size":1219,"mtime":1613615489335,"results":"160","hashOfConfig":"85"},{"size":1126,"mtime":1616964609471,"results":"161","hashOfConfig":"85"},{"size":274,"mtime":1616963767774,"results":"162","hashOfConfig":"85"},{"size":0,"mtime":1616964251986,"results":"163","hashOfConfig":"85"},{"size":9823,"mtime":1616984150659,"results":"164","hashOfConfig":"85"},{"size":2248,"mtime":1616967133332,"results":"165","hashOfConfig":"85"},{"size":6765,"mtime":1616984112892,"results":"166","hashOfConfig":"85"},{"size":6526,"mtime":1616984251884,"results":"167","hashOfConfig":"85"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"170","usedDeprecatedRules":"171"},"1h3fu1e",{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"171"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"171"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"171"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"171"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"171"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"171"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"171"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"171"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"171"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"171"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"171"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"171"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"171"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"171"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"171"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"171"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"171"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"171"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"171"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"171"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"171"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"171"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"171"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"171"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"171"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"171"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"171"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"171"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"171"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"171"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"171"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kaysong/Documents/hearing_test_frontend/src/index.js",["363"],"\"use strict\"\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));",["364","365"],"/Users/kaysong/Documents/hearing_test_frontend/src/App.js",[],"/Users/kaysong/Documents/hearing_test_frontend/src/pages/digits/main.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/pages/main.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/pages/digits/database.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm1/test.jsx",["366"],"import React from \"react\";\nimport { Button } from \"@material-ui/core\";\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sourceVolume: 0.5,\n      index: 0,\n      dbs: [0],\n      noise: new Audio(process.env.PUBLIC_URL + \"/functional-audio/testnoise.wav\"),\n      audioStart: false\n    };\n  }\n\n  switch = async () => {\n    if (!this.state.audioStart) {\n      this.state.noise.volume = this.state.sourceVolume;\n      this.setState({ audioStart: true })\n      await this.state.noise.play();\n    } else {\n      this.setState({ audioStart: false })\n      this.state.noise.pause();\n    }\n  }\n\n  componentDidUpdate = () => {\n    this.state.noise.volume = this.state.sourceVolume;\n  }\n\n  goEasier = () => {\n    const { sourceVolume, index, dbs } = this.state;\n    dbs.push(dbs[index] + 3);\n    this.setState({ dbs, index: index + 1 });\n    if (sourceVolume * 10 ** (2 / 20) > 1) {\n      this.setState({ sourceVolume: 1 });\n    } else {\n      this.setState({ sourceVolume: sourceVolume * 10 ** (3 / 20) });\n    }\n  };\n\n  goHarder = () => {\n    const { sourceVolume, index, dbs } = this.state;\n    dbs.push(dbs[index] - 1);\n    this.setState({ dbs, index: index + 1, sourceVolume: sourceVolume * 10 ** (-1 / 20) });\n  };\n\n  render() {\n    const { dbs } = this.state;\n    return (\n      <div style={{ position: \"relative\", marginLeft: \"30%\", marginTop: \"20%\" }}>\n        <div>Testing page!</div>\n        <h1>{dbs[dbs.length - 1]}</h1>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.goEasier}>Increase 3 dB</Button>\n        <Button variant=\"contained\" color=\"secondary\" onClick={this.goHarder}>Decrease 1 dB</Button>\n        <Button variant=\"contained\" onClick={this.switch}>Start / Stop</Button>\n      </div>\n    )\n  }\n}\n\nexport default Test;\n","/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm1/main.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm1/data.jsx",["367","368","369","370","371","372","373","374","375"],"import React from \"react\";\nimport axios from \"axios\";\nimport { Button, Container, TextField } from \"@material-ui/core\";\nimport Table from \"../../assets/signal-loss/data-table\";\nimport { ExportReactCSV } from \"../../components/partials/csv\";\n\nclass Data extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { newReversals: null, reversals: null, array: [], login: false, password: \"\", datas: [], headers: [] };\n  }\n\n  componentDidMount = async () => {\n    const doc = await axios.get(\"/api/crm1/user/data\");\n    const setting = await axios.get(\"/api/crm1/reversals\");\n    const array = [];\n    const datas = [];\n    const headers = [\n      \"ID\", \"Email\", \"Reversals\", \"Gender\", \"Province\", \"Age\", \"DidWearAids\", \"WillWearAids\", \"Output\", \n      \"preQuestion1\", \"preQuestion2\", \"preQuestion3\",\n      \"block1\", \"trials1\", \"SNR1\", \"b1-postQuestion1\", \"b1-postQuestion2\",\n      \"block2\", \"trials2\", \"SNR2\", \"b2-postQuestion1\", \"b2-postQuestion2\",\n      \"block3\", \"trials3\", \"SNR3\", \"b3-postQuestion1\", \"b3-postQuestion2\",\n      \"block4\", \"trials4\", \"SNR4\", \"b4-postQuestion1\", \"b4-postQuestion2\",\n    ];\n    \n    // wirte headers\n    // find the largest trials in each block\n    let trials1 = 0;\n    let trials2 = 0;\n    let trials3 = 0;\n    let trials4 = 0;\n    doc.data.map(data => {\n      if (data[\"timer1\"].length > trials1) trials1 = data[\"timer1\"].length;\n      if (data[\"timer2\"].length > trials2) trials2 = data[\"timer2\"].length;\n      if (data[\"timer3\"].length > trials3) trials3 = data[\"timer3\"].length;\n      if (data[\"timer4\"].length > trials4) trials4 = data[\"timer4\"].length;\n    })\n    for (let i=1; i<=4; i++) {\n      let trials;\n      switch(i){\n        case 1:\n          trials = trials1;\n          break;\n        case 2:\n          trials = trials2;\n          break;\n        case 3:\n          trials = trials3;\n          break;\n        case 4:\n          trials = trials4;\n          break;\n      }\n      for (let j=1; j<=trials; j++) {\n        headers.push(`timer${i}-t${j}`);\n        headers.push(`dbs${i}-t${j}`);\n        headers.push(`question${i}-t${j}`);\n        headers.push(`answer${i}-t${j}`);\n        headers.push(`correct${i}-t${j}`);\n      }\n    };\n    // write datas\n    doc.data.map(data => {\n      const row = [\n        String(data[\"ID\"]), String(data[\"email\"]), String(data[\"reversals\"]), String(data[\"gender\"]), String(data[\"province\"]),\n        String(data[\"age\"]), String(data[\"didWearAids\"]), String(data[\"willWearAids\"]), String(data[\"output\"])\n      ];\n      // add pre and post questions\n      Object.keys(data[\"preQuestions\"]).map(key => {\n        row.push(data[\"preQuestions\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][0]), String(data[\"trials1\"]), String(data[\"SNR\"][0])\n      )\n      Object.keys(data[\"postQuestions1\"]).map(key => {\n        row.push(data[\"postQuestions1\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][1]), String(data[\"trials2\"]), String(data[\"SNR\"][1])\n      )\n      Object.keys(data[\"postQuestions2\"]).map(key => {\n        row.push(data[\"postQuestions2\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][2]), String(data[\"trials3\"]), String(data[\"SNR\"][2])\n      )\n      Object.keys(data[\"postQuestions3\"]).map(key => {\n        row.push(data[\"postQuestions3\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][3]), String(data[\"trials4\"]), String(data[\"SNR\"][3])\n      )\n      Object.keys(data[\"postQuestions4\"]).map(key => {\n        row.push(data[\"postQuestions4\"][key]);\n      });\n      // add correct, questions, answers, etc.\n      for (let i=1; i<=4; i++) {\n        let timer;\n        let dbs;\n        let questions;\n        let answers;\n        let correct;\n        let trials;\n        switch(i){\n          case 1:\n            timer = \"timer1\";\n            dbs = \"dbs1\";\n            questions = \"questions1\";\n            answers = \"answers1\";\n            correct = \"correct1\";\n            trials = trials1;\n            break;\n          case 2:\n            timer = \"timer2\";\n            dbs = \"dbs2\";\n            questions = \"questions2\";\n            answers = \"answers2\";\n            correct = \"correct2\";\n            trials = trials2;\n            break;\n          case 3:\n            timer = \"timer3\";\n            dbs = \"dbs3\";\n            questions = \"questions3\";\n            answers = \"answers3\";\n            correct = \"correct3\";\n            trials = trials3;\n            break;\n          case 4:\n            timer = \"timer4\";\n            dbs = \"dbs4\";\n            questions = \"questions4\";\n            answers = \"answers4\";\n            correct = \"correct4\";\n            trials = trials4;\n            break;\n          default:\n            break;\n        }\n        for (let j=0; j<trials; j++) {\n            row.push(data[timer][j]);\n            row.push(data[dbs][j+1]);\n            row.push(data[questions][j]);\n            row.push(data[answers][j]);\n            row.push(JSON.stringify(data[correct][j]));\n        }\n      }\n        datas.push(row);\n    });\n    // write the array\n    doc.data.map(data => {\n      const obj = {};\n      obj[\"_id\"] = data._id;\n      obj[\"ID\"] = String(data[\"ID\"]);\n      array.push(obj);\n    });\n    this.setState({ array, headers, datas, reversals: setting.data.reversals });\n  }\n\n  deleteData = async (id) => {\n    await axios.delete(\"/api/crm1/user/data/\" + id);\n    this.componentDidMount();\n  }\n\n  login = () => {\n    if (this.state.password === \"thisisthepassword\") {\n      this.setState({ login: true });\n    } else {\n      this.setState({password: \"\"});\n      window.alert(\"Wrong login information, retry please!\");\n    }\n  }\n\n  updateReversals = async () => {\n    await axios.put(\"/api/crm1/reversals\", {reversals: this.state.newReversals});\n    this.componentDidMount();\n  }\n\n  render() {\n    const { array, login, password, datas, headers, reversals, newReversals } = this.state;\n    return (\n      login ?\n        <Container>\n          <br />\n          <h3 style={{ textAlign: \"center\" }}>Welcome to CRM1 database</h3>\n              <div>\n                <hr />\n                <div id=\"spreadsheet\">\n                  <h4>Spreadsheet Download</h4>\n                  <ExportReactCSV data={datas} headers={headers} fileName={\"HearingTestData\"} />\n                  <br /><br />\n                  <h5>Legend for data label</h5>\n                  <ol>\n                    <li>Reversals: the amount of reversals</li>\n                    <li>block1: the audio type of block 1</li>\n                    <li>trials1: the amount of trials in block 1</li>\n                    <li>SNR1: the average SNR of final 10 trials (if there are over 10 trials) in block 1</li>\n                    <li>DidWearAids: whether the user has ever worn hearing aids or not</li>\n                    <li>WillWearAids: whether the user will hearing aids during this test or not</li>\n                    <li>OutPut: Whether the user will use speaker or headphone during the test</li>\n                    <li>timer1-t1: how much time (in millisecond) the user took during the block 1 trial 1</li>\n                    <li>dbs1-t1: how much decibels the audio has at the end of the block 1 trial 1 (decibel starts from 0 in each block)</li>\n                    <li>question1-t1: the real answer in block 1 trial 1</li>\n                    <li>answer1-t1: the user's answer in block 1 trial 1</li>\n                    <p>(question and answer are composed by 2 digits, the first one is the color: 1 -{\">\"} red, 2 -{\">\"} green, 3 -{\">\"} blue, 4 -{\">\"} white, and the second one is the number )</p>\n                    <li>correct1-t1: whether the user answered the question correct or not in block 1 trial 1</li>\n                    <p>(all 1st number represents the # of block, 2nd number represents the # of trial)</p>\n                    <li>b1-postQuestion1: the answer for the first post-test question in block 1</li>\n                  </ol>\n                </div>\n                <hr />\n                <div id=\"table\">\n                  <h4>Data Operation</h4>\n                  <Table data={array} deleteData={this.deleteData} />\n                  <br /><br />\n                  <h5>\n                    Pre-questions:\n                  </h5>\n                  <h6>1. I think my hearing in general is</h6>\n                  <h6>2. I think my hearing in quiet is</h6>\n                  <h6>3. I think my hearing in background noise is</h6>\n                  <h5>\n                    Post-questions:\n                  </h5>\n                  <h6>1. How difficult did you find this block? Please make a mark on the line below.</h6>\n                  <h6>2. How much effort did it take for you to complete this block? Please make a mark on the line below.</h6>\n                </div>\n                <hr />\n                <div id=\"reversals\">\n                  <h4>Current Reversals: {reversals}</h4>\n                  <TextField label=\"new reversals\" value={newReversals} type=\"number\" onChange={(e) => this.setState({newReversals: Number(e.target.value)})} />\n                  <Button color=\"primary\" variant=\"contained\" onClick={this.updateReversals} >Update</Button>\n                </div>\n                <hr />\n                <br />\n              </div>\n        </Container>\n        :\n        <Container>\n          <div style={{ position: \"fixed\", left: \"30%\", right: \"30%\", top: \"20%\" }}>\n            <TextField value={password} style={{ width: 300 }} onChange={(e) => this.setState({ password: e.target.value })} label=\"password\" type=\"password\" /><br /><br />\n            <Button variant=\"contained\" color=\"primary\" onClick={this.login} >Log In</Button>\n          </div>\n        </Container>\n    );\n  }\n}\n\nexport default Data;\n","/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm2/data.jsx",["376","377","378","379","380","381","382","383","384"],"import React from \"react\";\nimport axios from \"axios\";\nimport { Button, Container, TextField } from \"@material-ui/core\";\nimport Table from \"../../assets/signal-loss/data-table\";\nimport { ExportReactCSV } from \"../../components/partials/csv\";\n\nclass Data extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { newReversals: null, reversals: null, array: [], login: false, password: \"\", datas: [], headers: [] };\n  }\n\n  componentDidMount = async () => {\n    const doc = await axios.get(\"/api/crm2/user/data\");\n    const setting = await axios.get(\"/api/crm2/reversals\");\n    const array = [];\n    const datas = [];\n    const headers = [\n      \"ID\", \"Email\", \"Reversals\", \"Gender\", \"Province\", \"Age\", \"DidWearAids\", \"WillWearAids\", \"Output\", \n      \"preQuestion1\", \"preQuestion2\", \"preQuestion3\",\n      \"block1\", \"trials1\", \"SNR1\", \"b1-postQuestion1\", \"b1-postQuestion2\",\n      \"block2\", \"trials2\", \"SNR2\", \"b2-postQuestion1\", \"b2-postQuestion2\",\n      \"block3\", \"trials3\", \"SNR3\", \"b3-postQuestion1\", \"b3-postQuestion2\",\n      \"block4\", \"trials4\", \"SNR4\", \"b4-postQuestion1\", \"b4-postQuestion2\",\n    ];\n    \n    // wirte headers\n    // find the largest trials in each block\n    let trials1 = 0;\n    let trials2 = 0;\n    let trials3 = 0;\n    let trials4 = 0;\n    doc.data.map(data => {\n      if (data[\"timer1\"].length > trials1) trials1 = data[\"timer1\"].length;\n      if (data[\"timer2\"].length > trials2) trials2 = data[\"timer2\"].length;\n      if (data[\"timer3\"].length > trials3) trials3 = data[\"timer3\"].length;\n      if (data[\"timer4\"].length > trials4) trials4 = data[\"timer4\"].length;\n    })\n    for (let i=1; i<=4; i++) {\n      let trials;\n      switch(i){\n        case 1:\n          trials = trials1;\n          break;\n        case 2:\n          trials = trials2;\n          break;\n        case 3:\n          trials = trials3;\n          break;\n        case 4:\n          trials = trials4;\n          break;\n      }\n      for (let j=1; j<=trials; j++) {\n        headers.push(`timer${i}-t${j}`);\n        headers.push(`dbs${i}-t${j}`);\n        headers.push(`question${i}-t${j}`);\n        headers.push(`answer${i}-t${j}`);\n        headers.push(`correct${i}-t${j}`);\n      }\n    };\n    // write datas\n    doc.data.map(data => {\n      const row = [\n        String(data[\"ID\"]), String(data[\"email\"]), String(data[\"reversals\"]), String(data[\"gender\"]), String(data[\"province\"]),\n        String(data[\"age\"]), String(data[\"didWearAids\"]), String(data[\"willWearAids\"]), String(data[\"output\"])\n      ];\n      // add pre and post questions\n      Object.keys(data[\"preQuestions\"]).map(key => {\n        row.push(data[\"preQuestions\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][0]), String(data[\"trials1\"]), String(data[\"SNR\"][0])\n      )\n      Object.keys(data[\"postQuestions1\"]).map(key => {\n        row.push(data[\"postQuestions1\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][1]), String(data[\"trials2\"]), String(data[\"SNR\"][1])\n      )\n      Object.keys(data[\"postQuestions2\"]).map(key => {\n        row.push(data[\"postQuestions2\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][2]), String(data[\"trials3\"]), String(data[\"SNR\"][2])\n      )\n      Object.keys(data[\"postQuestions3\"]).map(key => {\n        row.push(data[\"postQuestions3\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][3]), String(data[\"trials4\"]), String(data[\"SNR\"][3])\n      )\n      Object.keys(data[\"postQuestions4\"]).map(key => {\n        row.push(data[\"postQuestions4\"][key]);\n      });\n      // add correct, questions, answers, etc.\n      for (let i=1; i<=4; i++) {\n        let timer;\n        let dbs;\n        let questions;\n        let answers;\n        let correct;\n        let trials;\n        switch(i){\n          case 1:\n            timer = \"timer1\";\n            dbs = \"dbs1\";\n            questions = \"questions1\";\n            answers = \"answers1\";\n            correct = \"correct1\";\n            trials = trials1;\n            break;\n          case 2:\n            timer = \"timer2\";\n            dbs = \"dbs2\";\n            questions = \"questions2\";\n            answers = \"answers2\";\n            correct = \"correct2\";\n            trials = trials2;\n            break;\n          case 3:\n            timer = \"timer3\";\n            dbs = \"dbs3\";\n            questions = \"questions3\";\n            answers = \"answers3\";\n            correct = \"correct3\";\n            trials = trials3;\n            break;\n          case 4:\n            timer = \"timer4\";\n            dbs = \"dbs4\";\n            questions = \"questions4\";\n            answers = \"answers4\";\n            correct = \"correct4\";\n            trials = trials4;\n            break;\n          default:\n            break;\n        }\n        for (let j=0; j<trials; j++) {\n            row.push(data[timer][j]);\n            row.push(data[dbs][j+1]);\n            row.push(data[questions][j]);\n            row.push(data[answers][j]);\n            row.push(JSON.stringify(data[correct][j]));\n        }\n      }\n        datas.push(row);\n    });\n    // write the array\n    doc.data.map(data => {\n      const obj = {};\n      obj[\"_id\"] = data._id;\n      obj[\"ID\"] = String(data[\"ID\"]);\n      array.push(obj);\n    });\n    this.setState({ array, headers, datas, reversals: setting.data.reversals });\n  }\n\n  deleteData = async (id) => {\n    await axios.delete(\"/api/crm2/user/data/\" + id);\n    this.componentDidMount();\n  }\n\n  login = () => {\n    if (this.state.password === \"thisisthepassword\") {\n      this.setState({ login: true });\n    } else {\n      this.setState({password: \"\"});\n      window.alert(\"Wrong login information, retry please!\");\n    }\n  }\n\n  updateReversals = async () => {\n    await axios.put(\"/api/crm2/reversals\", {reversals: this.state.newReversals});\n    this.componentDidMount();\n  }\n\n  render() {\n    const { array, login, password, datas, headers, reversals, newReversals } = this.state;\n    return (\n      login ?\n        <Container>\n          <br />\n          <h3 style={{ textAlign: \"center\" }}>Welcome to CRM1 database</h3>\n              <div>\n                <hr />\n                <div id=\"spreadsheet\">\n                  <h4>Spreadsheet Download</h4>\n                  <ExportReactCSV data={datas} headers={headers} fileName={\"HearingTestData\"} />\n                  <br /><br />\n                  <h5>Legend for data label</h5>\n                  <ol>\n                    <li>Reversals: the amount of reversals</li>\n                    <li>block1: the audio type of block 1</li>\n                    <li>trials1: the amount of trials in block 1</li>\n                    <li>SNR1: the average SNR of final 10 trials (if there are over 10 trials) in block 1</li>\n                    <li>DidWearAids: whether the user has ever worn hearing aids or not</li>\n                    <li>WillWearAids: whether the user will hearing aids during this test or not</li>\n                    <li>OutPut: Whether the user will use speaker or headphone during the test</li>\n                    <li>timer1-t1: how much time (in millisecond) the user took during the block 1 trial 1</li>\n                    <li>dbs1-t1: how much decibels the audio has at the end of the block 1 trial 1 (decibel starts from 0 in each block)</li>\n                    <li>question1-t1: the real answer in block 1 trial 1</li>\n                    <li>answer1-t1: the user's answer in block 1 trial 1</li>\n                    <p>(question and answer are composed by 2 digits, the first one is the color: 1 -{\">\"} red, 2 -{\">\"} green, 3 -{\">\"} blue, 4 -{\">\"} white, and the second one is the number )</p>\n                    <li>correct1-t1: whether the user answered the question correct or not in block 1 trial 1</li>\n                    <p>(all 1st number represents the # of block, 2nd number represents the # of trial)</p>\n                    <li>b1-postQuestion1: the answer for the first post-test question in block 1</li>\n                  </ol>\n                </div>\n                <hr />\n                <div id=\"table\">\n                  <h4>Data Operation</h4>\n                  <Table data={array} deleteData={this.deleteData} />\n                  <br /><br />\n                  <h5>\n                    Pre-questions:\n                  </h5>\n                  <h6>1. I think my hearing in general is</h6>\n                  <h6>2. I think my hearing in quiet is</h6>\n                  <h6>3. I think my hearing in background noise is</h6>\n                  <h5>\n                    Post-questions:\n                  </h5>\n                  <h6>1. How difficult did you find this block? Please make a mark on the line below.</h6>\n                  <h6>2. How much effort did it take for you to complete this block? Please make a mark on the line below.</h6>\n                </div>\n                <hr />\n                <div id=\"reversals\">\n                  <h4>Current Reversals: {reversals}</h4>\n                  <TextField label=\"new reversals\" value={newReversals} type=\"number\" onChange={(e) => this.setState({newReversals: Number(e.target.value)})} />\n                  <Button color=\"primary\" variant=\"contained\" onClick={this.updateReversals} >Update</Button>\n                </div>\n                <hr />\n                <br />\n              </div>\n        </Container>\n        :\n        <Container>\n          <div style={{ position: \"fixed\", left: \"30%\", right: \"30%\", top: \"20%\" }}>\n            <TextField value={password} style={{ width: 300 }} onChange={(e) => this.setState({ password: e.target.value })} label=\"password\" type=\"password\" /><br /><br />\n            <Button variant=\"contained\" color=\"primary\" onClick={this.login} >Log In</Button>\n          </div>\n        </Container>\n    );\n  }\n}\n\nexport default Data;\n","/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm2/main.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm3/main.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm3/data.jsx",["385","386","387","388","389","390","391","392","393"],"import React from \"react\";\nimport axios from \"axios\";\nimport { Button, Container, TextField } from \"@material-ui/core\";\nimport Table from \"../../assets/signal-loss/data-table\";\nimport { ExportReactCSV } from \"../../components/partials/csv\";\n\nclass Data extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { newReversals: null, reversals: null, array: [], login: false, password: \"\", datas: [], headers: [] };\n  }\n\n  componentDidMount = async () => {\n    const doc = await axios.get(\"/api/crm3/user/data\");\n    const setting = await axios.get(\"/api/crm3/reversals\");\n    const array = [];\n    const datas = [];\n    const headers = [\n      \"ID\", \"Email\", \"Reversals\", \"Gender\", \"Province\", \"Age\", \"DidWearAids\", \"WillWearAids\", \"Output\", \n      \"preQuestion1\", \"preQuestion2\", \"preQuestion3\",\n      \"block1\", \"trials1\", \"SNR1\", \"b1-postQuestion1\", \"b1-postQuestion2\",\n      \"block2\", \"trials2\", \"SNR2\", \"b2-postQuestion1\", \"b2-postQuestion2\",\n      \"block3\", \"trials3\", \"SNR3\", \"b3-postQuestion1\", \"b3-postQuestion2\",\n      \"block4\", \"trials4\", \"SNR4\", \"b4-postQuestion1\", \"b4-postQuestion2\",\n    ];\n    \n    // wirte headers\n    // find the largest trials in each block\n    let trials1 = 0;\n    let trials2 = 0;\n    let trials3 = 0;\n    let trials4 = 0;\n    doc.data.map(data => {\n      if (data[\"timer1\"].length > trials1) trials1 = data[\"timer1\"].length;\n      if (data[\"timer2\"].length > trials2) trials2 = data[\"timer2\"].length;\n      if (data[\"timer3\"].length > trials3) trials3 = data[\"timer3\"].length;\n      if (data[\"timer4\"].length > trials4) trials4 = data[\"timer4\"].length;\n    })\n    for (let i=1; i<=4; i++) {\n      let trials;\n      switch(i){\n        case 1:\n          trials = trials1;\n          break;\n        case 2:\n          trials = trials2;\n          break;\n        case 3:\n          trials = trials3;\n          break;\n        case 4:\n          trials = trials4;\n          break;\n      }\n      for (let j=1; j<=trials; j++) {\n        headers.push(`timer${i}-t${j}`);\n        headers.push(`dbs${i}-t${j}`);\n        headers.push(`question${i}-t${j}`);\n        headers.push(`answer${i}-t${j}`);\n        headers.push(`correct${i}-t${j}`);\n      }\n    };\n    // write datas\n    doc.data.map(data => {\n      const row = [\n        String(data[\"ID\"]), String(data[\"email\"]), String(data[\"reversals\"]), String(data[\"gender\"]), String(data[\"province\"]),\n        String(data[\"age\"]), String(data[\"didWearAids\"]), String(data[\"willWearAids\"]), String(data[\"output\"])\n      ];\n      // add pre and post questions\n      Object.keys(data[\"preQuestions\"]).map(key => {\n        row.push(data[\"preQuestions\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][0]), String(data[\"trials1\"]), String(data[\"SNR\"][0])\n      )\n      Object.keys(data[\"postQuestions1\"]).map(key => {\n        row.push(data[\"postQuestions1\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][1]), String(data[\"trials2\"]), String(data[\"SNR\"][1])\n      )\n      Object.keys(data[\"postQuestions2\"]).map(key => {\n        row.push(data[\"postQuestions2\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][2]), String(data[\"trials3\"]), String(data[\"SNR\"][2])\n      )\n      Object.keys(data[\"postQuestions3\"]).map(key => {\n        row.push(data[\"postQuestions3\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][3]), String(data[\"trials4\"]), String(data[\"SNR\"][3])\n      )\n      Object.keys(data[\"postQuestions4\"]).map(key => {\n        row.push(data[\"postQuestions4\"][key]);\n      });\n      // add correct, questions, answers, etc.\n      for (let i=1; i<=4; i++) {\n        let timer;\n        let dbs;\n        let questions;\n        let answers;\n        let correct;\n        let trials;\n        switch(i){\n          case 1:\n            timer = \"timer1\";\n            dbs = \"dbs1\";\n            questions = \"questions1\";\n            answers = \"answers1\";\n            correct = \"correct1\";\n            trials = trials1;\n            break;\n          case 2:\n            timer = \"timer2\";\n            dbs = \"dbs2\";\n            questions = \"questions2\";\n            answers = \"answers2\";\n            correct = \"correct2\";\n            trials = trials2;\n            break;\n          case 3:\n            timer = \"timer3\";\n            dbs = \"dbs3\";\n            questions = \"questions3\";\n            answers = \"answers3\";\n            correct = \"correct3\";\n            trials = trials3;\n            break;\n          case 4:\n            timer = \"timer4\";\n            dbs = \"dbs4\";\n            questions = \"questions4\";\n            answers = \"answers4\";\n            correct = \"correct4\";\n            trials = trials4;\n            break;\n          default:\n            break;\n        }\n        for (let j=0; j<trials; j++) {\n            row.push(data[timer][j]);\n            row.push(data[dbs][j+1]);\n            row.push(data[questions][j]);\n            row.push(data[answers][j]);\n            row.push(JSON.stringify(data[correct][j]));\n        }\n      }\n        datas.push(row);\n    });\n    // write the array\n    doc.data.map(data => {\n      const obj = {};\n      obj[\"_id\"] = data._id;\n      obj[\"ID\"] = String(data[\"ID\"]);\n      array.push(obj);\n    });\n    this.setState({ array, headers, datas, reversals: setting.data.reversals });\n  }\n\n  deleteData = async (id) => {\n    await axios.delete(\"/api/crm3/user/data/\" + id);\n    this.componentDidMount();\n  }\n\n  login = () => {\n    if (this.state.password === \"thisisthepassword\") {\n      this.setState({ login: true });\n    } else {\n      this.setState({password: \"\"});\n      window.alert(\"Wrong login information, retry please!\");\n    }\n  }\n\n  updateReversals = async () => {\n    await axios.put(\"/api/crm3/reversals\", {reversals: this.state.newReversals});\n    this.componentDidMount();\n  }\n\n  render() {\n    const { array, login, password, datas, headers, reversals, newReversals } = this.state;\n    return (\n      login ?\n        <Container>\n          <br />\n          <h3 style={{ textAlign: \"center\" }}>Welcome to CRM3 database</h3>\n              <div>\n                <hr />\n                <div id=\"spreadsheet\">\n                  <h4>Spreadsheet Download</h4>\n                  <ExportReactCSV data={datas} headers={headers} fileName={\"HearingTestData\"} />\n                  <br /><br />\n                  <h5>Legend for data label</h5>\n                  <ol>\n                    <li>Reversals: the amount of reversals</li>\n                    <li>block1: the audio type of block 1</li>\n                    <li>trials1: the amount of trials in block 1</li>\n                    <li>SNR1: the average SNR of final 10 trials (if there are over 10 trials) in block 1</li>\n                    <li>DidWearAids: whether the user has ever worn hearing aids or not</li>\n                    <li>WillWearAids: whether the user will hearing aids during this test or not</li>\n                    <li>OutPut: Whether the user will use speaker or headphone during the test</li>\n                    <li>timer1-t1: how much time (in millisecond) the user took during the block 1 trial 1</li>\n                    <li>dbs1-t1: how much decibels the audio has at the end of the block 1 trial 1 (decibel starts from 0 in each block)</li>\n                    <li>question1-t1: the real answer in block 1 trial 1</li>\n                    <li>answer1-t1: the user's answer in block 1 trial 1</li>\n                    <p>(question and answer are composed by 2 digits, the first one is the color: 1 -{\">\"} red, 2 -{\">\"} green, 3 -{\">\"} blue, 4 -{\">\"} white, and the second one is the number )</p>\n                    <li>correct1-t1: whether the user answered the question correct or not in block 1 trial 1</li>\n                    <p>(all 1st number represents the # of block, 2nd number represents the # of trial)</p>\n                    <li>b1-postQuestion1: the answer for the first post-test question in block 1</li>\n                  </ol>\n                </div>\n                <hr />\n                <div id=\"table\">\n                  <h4>Data Operation</h4>\n                  <Table data={array} deleteData={this.deleteData} />\n                  <br /><br />\n                  <h5>\n                    Pre-questions:\n                  </h5>\n                  <h6>1. I think my hearing in general is</h6>\n                  <h6>2. I think my hearing in quiet is</h6>\n                  <h6>3. I think my hearing in background noise is</h6>\n                  <h5>\n                    Post-questions:\n                  </h5>\n                  <h6>1. How difficult did you find this block? Please make a mark on the line below.</h6>\n                  <h6>2. How much effort did it take for you to complete this block? Please make a mark on the line below.</h6>\n                </div>\n                <hr />\n                <div id=\"reversals\">\n                  <h4>Current Reversals: {reversals}</h4>\n                  <TextField label=\"new reversals\" value={newReversals} type=\"number\" onChange={(e) => this.setState({newReversals: Number(e.target.value)})} />\n                  <Button color=\"primary\" variant=\"contained\" onClick={this.updateReversals} >Update</Button>\n                </div>\n                <hr />\n                <br />\n              </div>\n        </Container>\n        :\n        <Container>\n          <div style={{ position: \"fixed\", left: \"30%\", right: \"30%\", top: \"20%\" }}>\n            <TextField value={password} style={{ width: 300 }} onChange={(e) => this.setState({ password: e.target.value })} label=\"password\" type=\"password\" /><br /><br />\n            <Button variant=\"contained\" color=\"primary\" onClick={this.login} >Log In</Button>\n          </div>\n        </Container>\n    );\n  }\n}\n\nexport default Data;\n","/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm4/main.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/pages/crm4/data.jsx",["394","395","396","397","398","399","400","401","402"],"import React from \"react\";\nimport axios from \"axios\";\nimport { Button, Container, TextField } from \"@material-ui/core\";\nimport Table from \"../../assets/signal-loss/data-table\";\nimport { ExportReactCSV } from \"../../components/partials/csv\";\n\nclass Data extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { newReversals: null, reversals: null, array: [], login: false, password: \"\", datas: [], headers: [] };\n  }\n\n  componentDidMount = async () => {\n    const doc = await axios.get(\"/api/crm4/user/data\");\n    const setting = await axios.get(\"/api/crm4/reversals\");\n    const array = [];\n    const datas = [];\n    const headers = [\n      \"ID\", \"Email\", \"Reversals\", \"Gender\", \"Province\", \"Age\", \"DidWearAids\", \"WillWearAids\", \"Output\", \n      \"preQuestion1\", \"preQuestion2\", \"preQuestion3\",\n      \"block1\", \"trials1\", \"SNR1\", \"b1-postQuestion1\", \"b1-postQuestion2\",\n      \"block2\", \"trials2\", \"SNR2\", \"b2-postQuestion1\", \"b2-postQuestion2\",\n      \"block3\", \"trials3\", \"SNR3\", \"b3-postQuestion1\", \"b3-postQuestion2\",\n      \"block4\", \"trials4\", \"SNR4\", \"b4-postQuestion1\", \"b4-postQuestion2\",\n    ];\n    \n    // wirte headers\n    // find the largest trials in each block\n    let trials1 = 0;\n    let trials2 = 0;\n    let trials3 = 0;\n    let trials4 = 0;\n    doc.data.map(data => {\n      if (data[\"timer1\"].length > trials1) trials1 = data[\"timer1\"].length;\n      if (data[\"timer2\"].length > trials2) trials2 = data[\"timer2\"].length;\n      if (data[\"timer3\"].length > trials3) trials3 = data[\"timer3\"].length;\n      if (data[\"timer4\"].length > trials4) trials4 = data[\"timer4\"].length;\n    })\n    for (let i=1; i<=4; i++) {\n      let trials;\n      switch(i){\n        case 1:\n          trials = trials1;\n          break;\n        case 2:\n          trials = trials2;\n          break;\n        case 3:\n          trials = trials3;\n          break;\n        case 4:\n          trials = trials4;\n          break;\n      }\n      for (let j=1; j<=trials; j++) {\n        headers.push(`timer${i}-t${j}`);\n        headers.push(`dbs${i}-t${j}`);\n        headers.push(`question${i}-t${j}`);\n        headers.push(`answer${i}-t${j}`);\n        headers.push(`correct${i}-t${j}`);\n      }\n    };\n    // write datas\n    doc.data.map(data => {\n      const row = [\n        String(data[\"ID\"]), String(data[\"email\"]), String(data[\"reversals\"]), String(data[\"gender\"]), String(data[\"province\"]),\n        String(data[\"age\"]), String(data[\"didWearAids\"]), String(data[\"willWearAids\"]), String(data[\"output\"])\n      ];\n      // add pre and post questions\n      Object.keys(data[\"preQuestions\"]).map(key => {\n        row.push(data[\"preQuestions\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][0]), String(data[\"trials1\"]), String(data[\"SNR\"][0])\n      )\n      Object.keys(data[\"postQuestions1\"]).map(key => {\n        row.push(data[\"postQuestions1\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][1]), String(data[\"trials2\"]), String(data[\"SNR\"][1])\n      )\n      Object.keys(data[\"postQuestions2\"]).map(key => {\n        row.push(data[\"postQuestions2\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][2]), String(data[\"trials3\"]), String(data[\"SNR\"][2])\n      )\n      Object.keys(data[\"postQuestions3\"]).map(key => {\n        row.push(data[\"postQuestions3\"][key]);\n      });\n      row.push(\n        String(data[\"order\"][3]), String(data[\"trials4\"]), String(data[\"SNR\"][3])\n      )\n      Object.keys(data[\"postQuestions4\"]).map(key => {\n        row.push(data[\"postQuestions4\"][key]);\n      });\n      // add correct, questions, answers, etc.\n      for (let i=1; i<=4; i++) {\n        let timer;\n        let dbs;\n        let questions;\n        let answers;\n        let correct;\n        let trials;\n        switch(i){\n          case 1:\n            timer = \"timer1\";\n            dbs = \"dbs1\";\n            questions = \"questions1\";\n            answers = \"answers1\";\n            correct = \"correct1\";\n            trials = trials1;\n            break;\n          case 2:\n            timer = \"timer2\";\n            dbs = \"dbs2\";\n            questions = \"questions2\";\n            answers = \"answers2\";\n            correct = \"correct2\";\n            trials = trials2;\n            break;\n          case 3:\n            timer = \"timer3\";\n            dbs = \"dbs3\";\n            questions = \"questions3\";\n            answers = \"answers3\";\n            correct = \"correct3\";\n            trials = trials3;\n            break;\n          case 4:\n            timer = \"timer4\";\n            dbs = \"dbs4\";\n            questions = \"questions4\";\n            answers = \"answers4\";\n            correct = \"correct4\";\n            trials = trials4;\n            break;\n          default:\n            break;\n        }\n        for (let j=0; j<trials; j++) {\n            row.push(data[timer][j]);\n            row.push(data[dbs][j+1]);\n            row.push(data[questions][j]);\n            row.push(data[answers][j]);\n            row.push(JSON.stringify(data[correct][j]));\n        }\n      }\n        datas.push(row);\n    });\n    // write the array\n    doc.data.map(data => {\n      const obj = {};\n      obj[\"_id\"] = data._id;\n      obj[\"ID\"] = String(data[\"ID\"]);\n      array.push(obj);\n    });\n    this.setState({ array, headers, datas, reversals: setting.data.reversals });\n  }\n\n  deleteData = async (id) => {\n    await axios.delete(\"/api/crm4/user/data/\" + id);\n    this.componentDidMount();\n  }\n\n  login = () => {\n    if (this.state.password === \"thisisthepassword\") {\n      this.setState({ login: true });\n    } else {\n      this.setState({password: \"\"});\n      window.alert(\"Wrong login information, retry please!\");\n    }\n  }\n\n  updateReversals = async () => {\n    await axios.put(\"/api/crm4/reversals\", {reversals: this.state.newReversals});\n    this.componentDidMount();\n  }\n\n  render() {\n    const { array, login, password, datas, headers, reversals, newReversals } = this.state;\n    return (\n      login ?\n        <Container>\n          <br />\n          <h3 style={{ textAlign: \"center\" }}>Welcome to CRM4 database</h3>\n              <div>\n                <hr />\n                <div id=\"spreadsheet\">\n                  <h4>Spreadsheet Download</h4>\n                  <ExportReactCSV data={datas} headers={headers} fileName={\"HearingTestData\"} />\n                  <br /><br />\n                  <h5>Legend for data label</h5>\n                  <ol>\n                    <li>Reversals: the amount of reversals</li>\n                    <li>block1: the audio type of block 1</li>\n                    <li>trials1: the amount of trials in block 1</li>\n                    <li>SNR1: the average SNR of final 10 trials (if there are over 10 trials) in block 1</li>\n                    <li>DidWearAids: whether the user has ever worn hearing aids or not</li>\n                    <li>WillWearAids: whether the user will hearing aids during this test or not</li>\n                    <li>OutPut: Whether the user will use speaker or headphone during the test</li>\n                    <li>timer1-t1: how much time (in millisecond) the user took during the block 1 trial 1</li>\n                    <li>dbs1-t1: how much decibels the audio has at the end of the block 1 trial 1 (decibel starts from 0 in each block)</li>\n                    <li>question1-t1: the real answer in block 1 trial 1</li>\n                    <li>answer1-t1: the user's answer in block 1 trial 1</li>\n                    <p>(question and answer are composed by 2 digits, the first one is the color: 1 -{\">\"} red, 2 -{\">\"} green, 3 -{\">\"} blue, 4 -{\">\"} white, and the second one is the number )</p>\n                    <li>correct1-t1: whether the user answered the question correct or not in block 1 trial 1</li>\n                    <p>(all 1st number represents the # of block, 2nd number represents the # of trial)</p>\n                    <li>b1-postQuestion1: the answer for the first post-test question in block 1</li>\n                  </ol>\n                </div>\n                <hr />\n                <div id=\"table\">\n                  <h4>Data Operation</h4>\n                  <Table data={array} deleteData={this.deleteData} />\n                  <br /><br />\n                  <h5>\n                    Pre-questions:\n                  </h5>\n                  <h6>1. I think my hearing in general is</h6>\n                  <h6>2. I think my hearing in quiet is</h6>\n                  <h6>3. I think my hearing in background noise is</h6>\n                  <h5>\n                    Post-questions:\n                  </h5>\n                  <h6>1. How difficult did you find this block? Please make a mark on the line below.</h6>\n                  <h6>2. How much effort did it take for you to complete this block? Please make a mark on the line below.</h6>\n                </div>\n                <hr />\n                <div id=\"reversals\">\n                  <h4>Current Reversals: {reversals}</h4>\n                  <TextField label=\"new reversals\" value={newReversals} type=\"number\" onChange={(e) => this.setState({newReversals: Number(e.target.value)})} />\n                  <Button color=\"primary\" variant=\"contained\" onClick={this.updateReversals} >Update</Button>\n                </div>\n                <hr />\n                <br />\n              </div>\n        </Container>\n        :\n        <Container>\n          <div style={{ position: \"fixed\", left: \"30%\", right: \"30%\", top: \"20%\" }}>\n            <TextField value={password} style={{ width: 300 }} onChange={(e) => this.setState({ password: e.target.value })} label=\"password\" type=\"password\" /><br /><br />\n            <Button variant=\"contained\" color=\"primary\" onClick={this.login} >Log In</Button>\n          </div>\n        </Container>\n    );\n  }\n}\n\nexport default Data;\n","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/database/pre-test.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/database/post-test-3.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/database/consents.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/database/post-test-1.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/database/post-test-2.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/database/user-data.jsx",["403"],"import React from \"react\";\nimport axios from \"axios\";\nimport UserDataTable from \"../../../assets/digits/user-data-table\";\nimport { Container, Button } from \"@material-ui/core\";\n\nclass UserData extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      one: null,\n    };\n  }\n  componentDidMount = async () => {\n    const doc = await axios.get(\"/api/digits/user/data\");\n    this.setState({ data: doc.data });\n    console.log(doc.data[0]);\n  };\n\n  handleDelete = async (id) => {\n    await axios.delete(\"/api/digits/user/data/\" + id);\n    this.componentDidMount();\n  };\n\n  handleGoBack = () => {\n    this.setState({ one: null });\n  };\n\n  render() {\n    const { data, one } = this.state;\n    return (\n      <Container>\n        <div className=\"jumbotron\">\n          <h1 style={{ margin: 20 }}>User Data</h1>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginLeft: 20 }}\n            onClick={() => this.props.history.push(\"/digits/database\")}\n          >\n            Back\n          </Button>\n        </div>\n        <div\n          style={{\n            position: \"relative\",\n            marginTop: \"5%\",\n          }}\n        >\n          <Container>\n            <h5>Spreadsheet Download</h5>\n            \n          </Container>\n          <Container>\n            <h5>Data Operation</h5>\n            <UserDataTable\n              rows={data}\n              handleDelete={this.handleDelete}\n              handleShowDetails={this.handleShowDetails}\n            />\n          </Container>\n          <Container>\n            <h5>Legend of data labels</h5>\n            <ul>\n              <li>placeholder</li>\n              <li>placeholder</li>\n            </ul>\n          </Container>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default UserData;\n","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/pre-test/environment.jsx",["404"],"import React from \"react\";\nimport { Container, Button } from \"@material-ui/core\";\n\nexport default (props) => {\n  return (\n    <Container>\n      <h2 style={{ textAlign: \"right\", marginTop: \"5%\", marginRight: \"5%\" }}>\n        4\n      </h2>\n      <div\n        style={{\n          textAlign: \"center\",\n          position: \"relative\",\n          marginTop: \"15%\",\n        }}\n      >\n        <h2>\n          Make sure you're in a quiet place where you can complete the test\n          without distraction!\n        </h2>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"large\"\n          style={{ margin: 20, width: 200, backgroundColor: \"black\" }}\n          onClick={props.handleClick}\n        >\n          OK\n        </Button>\n      </div>\n    </Container>\n  );\n};\n","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/pre-test/welcome.jsx",["405"],"import React from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport Footer from \"../../partials/footer\";\n\nexport default () => {\n  return (\n    <Container>\n      <div\n        style={{\n          textAlign: \"center\",\n          position: \"relative\",\n          marginTop: \"24%\",\n        }}\n      >\n        <h1>Welcome</h1>\n      </div>\n      <Footer />\n    </Container>\n  );\n};\n","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/pre-test/consent.jsx",["406","407"],"import React from \"react\";\nimport {\n  Container,\n  Button,\n  TextField,\n  Radio,\n  RadioGroup,\n  FormGroup,\n  FormControlLabel,\n  FormControl,\n  Checkbox,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\n\nclass Consent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: [],\n      consents: {},\n      agreement: \"false\",\n      email: \"\",\n    };\n  }\n\n  componentDidMount = async () => {\n    const doc = await axios.get(\"/api/digits/consent/questions\");\n    const questions = doc.data.map((data) => data.question);\n    this.setState({ questions });\n  };\n\n  handleConsent = (index, value) => {\n    const { consents, questions } = this.state;\n    consents[questions[index]] = value;\n    this.setState({ consents });\n  };\n\n  validateEmail = (email) => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  validateConsents = () => {\n    const { consents, questions } = this.state;\n    if (Object.keys(consents).length !== questions.length) {\n      return false;\n    }\n    for (const key in consents) {\n      if (!consents[key]) return false;\n    }\n    return true;\n  };\n\n  renderButton = () => {\n    const { email, agreement } = this.state;\n    if (\n      this.validateConsents() &&\n      this.validateEmail(email) &&\n      agreement === \"true\"\n    ) {\n      return (\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          style={{\n            backgroundColor: \"black\",\n            width: \"15%\",\n            marginTop: 10,\n            marginLeft: 10,\n          }}\n          onClick={() => this.props.handleClick(email)}\n        >\n          Next\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          style={{\n            width: \"15%\",\n            marginTop: 10,\n            marginLeft: 10,\n          }}\n          disabled={true}\n        >\n          Next\n        </Button>\n      );\n    }\n  };\n\n  render() {\n    const { questions, email, consents } = this.state;\n    return (\n      <Container>\n        <h2 style={{ textAlign: \"right\", marginTop: \"5%\", marginRight: \"5%\" }}>\n          1\n        </h2>\n        <div\n          style={{\n            position: \"relative\",\n            marginTop: \"3%\",\n            marginBottom: \"10%\",\n            marginLeft: \"5%\",\n            marginRight: \"5%\",\n          }}\n        >\n          <hr />\n          <h4>\n            Please read the following information carefully and respond to the\n            informed consent questions at the bottom of the page.{\" \"}\n          </h4>\n          <h5>\n            Speech-in-noise tests have been used by audiologists for many years.\n            They involve listening for speech sounds against competing\n            background noise and repeating the words you hear. In recent years,\n            the use of digits (rather than words or sentences) has been proposed\n            as a solution to the challenges faced by non-native English speakers\n            in traditional speech-in-noise tests. As online health-care options\n            continue to expand, hearing care professionals are interested in the\n            experience of users who self-administer digits-in-noise testing on\n            websites.\n          </h5>\n          <br />\n          <h6>Procedures (Approximately 10 - 15 minutes total)</h6>\n          <br />\n          <h5>\n            1. Answering Demographic Questions You will be asked to answer some\n            questions about yourself and your health.\n          </h5>\n          <h5>\n            2. Digits in Noise Test You will use headphones to complete the\n            3-minute test. You will hear the names of digits (e.g., \"one, seven,\n            two\") spoken aloud against competing background conversation. Enter\n            the numbers you hear. The volume of the speech goes up and down.\n          </h5>\n          <h5>\n            3. Completing a questionnaire You will be asked to complete a brief\n            questionnaire that gathers information about your experience with\n            the digits in noise test and your attitudes about hearing health in\n            general.\n          </h5>\n          <br />\n          <hr />\n          <h4>Please note the following:</h4>\n          <h5>\n            - The hearing test may not work with Internet Explorer. We recommend\n            Chrome, Firefox, Safari, Edge, or Opera.\n          </h5>\n          <h5>\n            - You cannot move Back in your browser during this study. You may\n            only navigate by using the 'Next Page' button at the bottom of each\n            page.\n          </h5>\n          <br />\n          <h4>Possible Benefits:</h4>\n          <h5>\n            Participating in this study may help you better understand your\n            hearing and the tools that are used to test hearing.\n          </h5>\n          <br />\n          <h4>Possible Risks:</h4>\n          <h5>\n            Because this study involves having your hearing tested, it is\n            possible that you may learn that you have a hearing loss you were\n            unaware of. If this turns out to be the case, you will be referred\n            to one of the audiologists on our research team for guidance and\n            information about hearing resources you can access in the community.\n          </h5>\n          <br />\n          <h4>Confidentiality:</h4>\n          <h5>\n            Only the investigators doing this study will see the information\n            collected. The University of Alberta’s Health Research Ethics Board\n            also has the right to access the study records if necessary. We will\n            not give your name or other identifying information to anyone\n            outside the study. The information you give will be kept for a total\n            of five years after the study is done. The investigators will store\n            the information on an encrypted computer. Your name will not be\n            attached to the data you provide. Your name will not be used in any\n            presentation or publication.\n          </h5>\n          <br />\n          <h4>Withdrawal:</h4>\n          <h5>\n            Your participation is voluntary. You do not have to take part in\n            this study. If you choose to participate, you may withdraw at any\n            point in the study. You do not need to give us a reason. You will be\n            free to withdraw your data from this study at any point up to a week\n            following your visit to the laboratory. You may indicate your desire\n            to have your data withdrawn by contacting the researchers.\n          </h5>\n          <br />\n          <h4>Contact:</h4>\n          <h5>\n            You may ask questions at any time throughout your participation in\n            the study. If you have any further questions about this study later\n            on, please contact csdhear@ualberta.ca or Dr. Bill Hodgetts\n            (780-492-0834).\n          </h5>\n          <h5>\n            If you have any concerns about the study, please call the Health\n            Panel Administrator at the University of Alberta Health Research\n            Ethics Board (780-492-2615).\n          </h5>\n          <br />\n          <hr />\n          <br />\n          {questions.map((question, index) => {\n            return (\n              <FormControl component=\"fieldset\" style={{ marginBottom: 10 }}>\n                <h4 component=\"legend\">{question}</h4>\n                <FormGroup>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={!!consents[question]}\n                        color=\"primary\"\n                        onChange={(e) =>\n                          this.handleConsent(index, e.target.checked)\n                        }\n                      />\n                    }\n                    label=\"Confirm\"\n                  />\n                </FormGroup>\n              </FormControl>\n            );\n          })}\n          <FormControl component=\"fieldset\" style={{ marginBottom: 10 }}>\n            <h4 component=\"legend\">I agree to take part in this study.</h4>\n            <RadioGroup\n              row\n              aria-label=\"position\"\n              name=\"position\"\n              defaultValue=\"top\"\n              onChange={(e) => this.setState({ agreement: e.target.value })}\n            >\n              <FormControlLabel\n                value=\"true\"\n                control={<Radio color=\"primary\" />}\n                label=\"Yes\"\n              />\n              <FormControlLabel\n                value=\"false\"\n                control={<Radio color=\"primary\" />}\n                label=\"No\"\n              />\n            </RadioGroup>\n          </FormControl>\n          <h4>\n            Please enter your email address to continue. This will allow us to\n            keep track of our study responses.\n          </h4>\n          <TextField\n            label=\"email\"\n            value={email}\n            onChange={(e) => this.setState({ email: e.target.value })}\n            style={{ width: 250 }}\n          />\n          <br />\n          <br />\n          {this.renderButton()}\n          <br />\n          <br />\n          <hr />\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default Consent;\n","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/post-test/submit.jsx",["408"],"import React from \"react\";\nimport { Button, Container } from \"@material-ui/core\";\n\nexport default (props) => {\n  return (\n    <Container>\n      <h2 style={{ textAlign: \"right\", marginTop: \"5%\", marginRight: \"5%\" }}>\n        11\n      </h2>\n      <div\n        style={{\n          textAlign: \"center\",\n          position: \"relative\",\n          marginTop: \"15%\",\n        }}\n      >\n        <h2>\n          You have completed the study. Thank you for your participation. Click\n          ‘SUBMIT’ to send your responses to the researchers. Remember to check\n          your email afterwards for a message from the researchers containing\n          further information about this study.{\" \"}\n        </h2>\n        <br />\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"large\"\n          onClick={props.handleClick}\n          style={{\n            backgroundColor: \"black\",\n            width: 150,\n            marginTop: 10,\n          }}\n        >\n          Submit\n        </Button>\n      </div>\n    </Container>\n  );\n};\n","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/pre-test/demo-info.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/pre-test/adjustment.jsx",["409"],"import React from \"react\";\nimport { Button, Container, Select, MenuItem } from \"@material-ui/core\";\nimport VolumeSlider from \"../../../assets/digits/volume-slider\";\n\nclass VolumeAdjustment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      audio: new Audio(process.env.PUBLIC_URL + \"/functional-audio/adjust.wav\"),\n      audioPlay: false,\n      volume: 0,\n      output: null\n    };\n  }\n  componentDidMount = () => {\n    const { audio, volume } = this.state;\n    audio.volume = volume / 100;\n  };\n\n  componentDidUpdate = () => {\n    const { audio, volume } = this.state;\n    audio.volume = volume / 100;\n  };\n\n  handlePlay = async () => {\n    const { audio } = this.state;\n    await audio.play();\n    this.setState({ audioPlay: true });\n  };\n\n  handleStop = async () => {\n    const { audio } = this.state;\n    await audio.pause();\n    this.setState({ audioPlay: false });\n  };\n\n  handleNext = () => {\n    const { volume, output } = this.state;\n    this.state.audio.pause();\n    this.props.handleClick(volume, output);\n  };\n\n  handleChangeOutput = (e) => {\n    this.setState({ output: e.target.value });\n  }\n\n  renderNextButton = () => {\n    const { volume, output } = this.state;\n    if (volume !== 0 && output !== null) {\n      return <Button\n        variant=\"contained\"\n        color=\"primary\"\n        style={{ margin: 5, width: 150, backgroundColor: \"black\" }}\n        onClick={this.handleNext}\n      >\n        Next\n      </Button>\n    } else {\n      return (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled\n            style={{ margin: 5, width: 150 }}\n          >\n            Next\n          </Button>\n      )\n    }\n  }\n\n  render() {\n    const { audioPlay, output } = this.state;\n    return (\n      <Container>\n        <h2 style={{ textAlign: \"right\", marginTop: \"5%\", marginRight: \"5%\" }}>\n          5\n        </h2>\n        <div\n          style={{\n            marginTop: \"5%\",\n            marginTop: \"5%\",\n          }}\n        >\n          <Container>\n            <div id=\"source\">\n              <h5>You can use either speakers or headphones to complete this experiment. Headphones will work best. </h5>\n              <h5>Using the dropbox below, select what you will be using to complete this experiment.</h5>\n              {\n                output === \"speakers\" ?\n                <h5>(If using speakers, please keep a consistent distance from your computer during the entire\n                  experiment)</h5> : null\n              }\n              <Select\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                value={output}\n                onChange={this.handleChangeOutput}\n                style={{ width: 150 }}\n              >\n                <MenuItem value=\"headphones\">headphones</MenuItem>\n                <MenuItem value=\"speakers\">speakers</MenuItem>\n              </Select>\n            </div>\n            <br />\n            <br />\n            <div>\n              <h4>\n                Set your device's volume to the 50%. Click PLAY to listen to an\n                audio sample.\n              </h4>\n              <h4>\n                Then, move the slider below to a comfortable listening level.\n                After that, click NEXT to begin the test.\n              </h4>\n            </div>\n          </Container>\n          <VolumeSlider\n            handleVolume={(volume) => this.setState({ volume })}\n            style={{ marginLeft: \"30%\" }}\n          />\n          {audioPlay ? (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.handleStop}\n              style={{ margin: 5, width: 150, backgroundColor: \"black\" }}\n            >\n              Stop\n            </Button>\n          ) : (\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.handlePlay}\n                style={{\n                  margin: 5,\n                  width: 150,\n                  backgroundColor: \"black\",\n                }}\n              >\n                Play\n              </Button>\n            )}\n          {this.renderNextButton()}\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default VolumeAdjustment;\n","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/post-test/post-test-questions.jsx",["410","411"],"import React from \"react\";\nimport {\n  Container,\n  Button,\n  Checkbox,\n  TextField,\n  FormControlLabel,\n  FormGroup,\n} from \"@material-ui/core\";\nimport ScoreSlider from \"../../../assets/digits/score-slider\";\nimport axios from \"axios\";\n\nclass PostTestQuestions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions1: [],\n      questions2: [],\n      questions3: [],\n      answers1: {},\n      answers2: {},\n      answers3: {},\n    };\n  }\n\n  componentDidMount = async () => {\n    const doc1 = await axios.get(\"/api/digits/post-test-1/questions\");\n    const doc2 = await axios.get(\"/api/digits/post-test-2/questions\");\n    const doc3 = await axios.get(\"/api/digits/post-test-3/questions\");\n    const questions1 = doc1.data.map((data) => data.question);\n    const questions3 = doc3.data.map((data) => data.question);\n    const questions2 = doc2.data;\n    const answers2 = {};\n    for (let row of questions2) {\n      answers2[row[\"question\"]] = [];\n    }\n    this.setState({ questions1, questions2, questions3, answers2 });\n  };\n\n  handleAnswer1 = (index, answer) => {\n    const { questions1, answers1 } = this.state;\n    answers1[questions1[index]] = answer;\n    this.setState({ answers1 });\n  };\n\n  handleAnswer2 = (boolean, questionIndex, choiceIndex) => {\n    const { questions2, answers2 } = this.state;\n    if (boolean) {\n      const array = answers2[questions2[questionIndex][\"question\"]];\n      array.push(questions2[questionIndex][\"checkBox\"][choiceIndex]);\n      answers2[questions2[questionIndex][\"question\"]] = array;\n    } else {\n      const array = answers2[questions2[questionIndex][\"question\"]].filter(\n        (data) => data !== questions2[questionIndex][\"checkBox\"][choiceIndex]\n      );\n      answers2[questions2[questionIndex][\"question\"]] = array;\n    }\n    this.setState({ answers2 });\n  };\n\n  handleAnswer3 = (answer, index) => {\n    const { questions3, answers3 } = this.state;\n    answers3[questions3[index]] = answer;\n    this.setState({ answers3 });\n  };\n\n  validateAnswers = () => {\n    const {\n      answers1,\n      answers2,\n      answers3,\n      questions1,\n      questions2,\n      questions3,\n    } = this.state;\n    return (\n      Object.keys(answers1).length === questions1.length &&\n      // Object.keys(answers2).length === questions2.length &&\n      Object.keys(answers3).length === questions3.length\n    );\n  };\n\n  renderButton = () => {\n    const { questions1, answers1, answers2, answers3 } = this.state;\n    if (questions1.length === 0) {\n      return null;\n    } else if (this.validateAnswers()) {\n      return (\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"large\"\n          onClick={() => this.props.handleClick(answers1, answers2, answers3)}\n          style={{\n            backgroundColor: \"black\",\n            width: 200,\n            marginBottom: 10,\n          }}\n        >\n          OK\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"large\"\n          style={{\n            width: 200,\n            marginBottom: 10,\n          }}\n          disabled={true}\n        >\n          OK\n        </Button>\n      );\n    }\n  };\n\n  render() {\n    const { questions1, answers1, questions2, questions3 } = this.state;\n    return (\n      <Container>\n        <h2 style={{ textAlign: \"right\", marginTop: \"5%\", marginRight: \"5%\" }}>\n          10\n        </h2>\n        <div\n          style={{\n            position: \"relative\",\n            marginTop: \"3%\",\n            marginBottom: \"5%\",\n            marginLeft: \"10%\",\n            marginRight: \"10%\",\n          }}\n        >\n          {questions1.map((question, index) => {\n            return (\n              <div>\n                <h4>{question}</h4>\n                {!!answers1[questions1[index]] ? null : (\n                  <h6 className=\"text-danger\">* must provide value</h6>\n                )}\n\n                <div className=\"row\">\n                  <h6 style={{ marginLeft: \"2%\" }}>Strongly disagree</h6>\n                  <h6 style={{ marginLeft: \"25%\" }}>Strongly agree</h6>\n                </div>\n                <ScoreSlider\n                  handleScore={(value) => this.handleAnswer1(index, value)}\n                />\n                <br />\n                <br />\n              </div>\n            );\n          })}\n          {questions2.map((row, questionIndex) => {\n            return (\n              <div>\n                <h4>{row.question}</h4>\n                <FormGroup style={{ marginLeft: 10 }}>\n                  {row.checkBox.map((choice, choiceIndex) => {\n                    return (\n                      <FormControlLabel\n                        onChange={(e) =>\n                          this.handleAnswer2(\n                            e.target.checked,\n                            questionIndex,\n                            choiceIndex\n                          )\n                        }\n                        control={<Checkbox color=\"primary\" />}\n                        label={choice}\n                      />\n                    );\n                  })}\n                </FormGroup>\n              </div>\n            );\n          })}\n          <br />\n          <br />\n          {questions3.map((question, index) => {\n            return (\n              <div>\n                <h4>{question}</h4>\n                <TextField\n                  style={{ width: \"40%\", marginLeft: 10 }}\n                  onChange={(e) => this.handleAnswer3(e.target.value, index)}\n                />\n              </div>\n            );\n          })}\n          <br />\n          <br />\n          {this.renderButton()}\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default PostTestQuestions;\n","/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/pre-test/hearing.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/mid-page.jsx",["412"],"import React from \"react\";\nimport { Button, Container } from \"@material-ui/core\";\n\nexport default (props) => {\n  return <Container>\n    <div style={{ marginTop: \"20%\", marginLeft: \"10%\", marginRight: \"10%\" }}>\n      <h4>You are now entering block {props.section} of four.</h4><br />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        style={{ margin: 20, width: 150, backgroundColor: \"black\" }}\n        onClick={props.handleClick}>Next</Button>\n    </div>\n\n  </Container>\n}","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/test.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/audioloss2.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/source2.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/audioloss1.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/test/test-demo.jsx",["413","414"],"import React from \"react\";\nimport {\n  Input,\n  Container,\n  CircularProgress,\n  Fab,\n  Button,\n} from \"@material-ui/core\";\nimport BackspaceIcon from \"@material-ui/icons/Backspace\";\n\nclass TestDemo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      noise: new Audio(process.env.PUBLIC_URL + \"/functional-audio/noise.wav\"),\n      noiseVolume: this.props.volume / 100,\n      audioVolume: this.props.volume / 100,\n      audio1: new Audio(process.env.PUBLIC_URL + \"/digits-audio/\" + 8 + \".wav\"),\n      audio2: new Audio(process.env.PUBLIC_URL + \"/digits-audio/\" + 3 + \".wav\"),\n      audio3: new Audio(process.env.PUBLIC_URL + \"/digits-audio/\" + 6 + \".wav\"),\n      focus: 0,\n      click: -1,\n      input1: \"\",\n      input2: \"\",\n      input3: \"\",\n      stage: 0,\n      continue: true,\n      promps: [\n        \"Instruction: Use your keyboard to enter numbers, or click the number pad on the screen\",\n        \"Instruction: Use the delete button if you entered a number by accident. Or press backspace on your keyboard.\",\n        \"Instruction: When you have finished entering the three digits, click OK to move to the next item. Or press Enter on your keyboard\",\n      ],\n    };\n    this.input1 = React.createRef();\n    this.input2 = React.createRef();\n    this.input3 = React.createRef();\n  }\n\n  componentDidMount = async () => {\n    // preload audios\n    const noise = new Audio(process.env.PUBLIC_URL + \"/functional-audio/noise.wav\");\n    await noise.play();\n    await noise.pause();\n    for (let i = 1; i < 10; i++) {\n      const audio = new Audio(process.env.PUBLIC_URL + \"/digits-audio/\" + i + \".wav\");\n      audio.volume = 0;\n      await audio.play();\n      await audio.pause();\n    }\n    this.setState({ stage: 1 });\n    await this._focus();\n    this.handlePlay();\n  };\n\n  componentDidUpdate = () => {\n    this._focus();\n  };\n\n  _focus = () => {\n    const { focus } = this.state;\n    switch (focus) {\n      case 0:\n        return this.input1.focus();\n      case 1:\n        return this.input2.focus();\n      case 2:\n        return this.input3.focus();\n      default:\n        return null;\n    }\n  };\n\n  handlePlay = async () => {\n    const {\n      audioVolume,\n      noiseVolume,\n      noise,\n      audio1,\n      audio2,\n      audio3,\n    } = this.state;\n    setTimeout(() => {\n      noise.volume = noiseVolume;\n      if (this.state.continue) noise.play();\n      this.setState({stage: 4});\n    }, 3100);\n    setTimeout(() => {\n      audio1.volume = audioVolume;\n      if (this.state.continue) audio1.play();\n      else noise.pause();\n    }, 3500);\n    setTimeout(() => {\n      this.setState({ input1: \"8\", focus: 0, click: 8 });\n    }, 4000);\n    setTimeout(() => {\n      audio2.volume = audioVolume;\n      if (this.state.continue) audio2.play();\n      else noise.pause();\n    }, 4700);\n    setTimeout(() => {\n      this.setState({ input2: \"3\", focus: 1, click: 3 });\n    }, 5200);\n    setTimeout(() => {\n      audio3.volume = audioVolume;\n      if (this.state.continue) audio3.play();\n      else noise.pause();\n    }, 5900);\n    setTimeout(() => {\n      this.setState({ input3: \"6\", focus: 2, click: 6 });\n    }, 6400);\n    setTimeout(() => {\n      noise.pause();\n      this.setState({ stage: 2 });\n    }, 7100);\n    setTimeout(() => {\n      this.setState({ click: -1, stage: 4 });\n    }, 10500);\n    setTimeout(() => {\n      this.setState({ click: \"x\" });\n      this.handleDelete();\n    }, 11000);\n    setTimeout(() => {\n      this.setState({ click: -1 });\n    }, 11600);\n    setTimeout(() => {\n      this.setState({ click: \"x\" });\n      this.handleDelete();\n    }, 12200);\n    setTimeout(() => {\n      this.setState({ click: -1 });\n    }, 12800);\n    setTimeout(() => {\n      this.setState({ click: \"x\", stage: 3 });\n      this.handleDelete();\n    }, 13400);\n    setTimeout(() => {\n      this.setState({ click: -1, stage: 4 });\n    }, 17000);\n    setTimeout(() => {\n      this.setState({ input2: \"3\", focus: 1, click: 3 });\n    }, 17500);\n    setTimeout(() => {\n      this.setState({ input3: \"6\", focus: 2, click: 6 });\n    }, 18200);\n    setTimeout(() => {\n      this.setState({ click: \"ok\" });\n    }, 19000);\n    setTimeout(() => {\n      this.setState({\n        input1: \"\",\n        input2: \"\",\n        input3: \"\",\n        focus: 0,\n        click: -1,\n        stage: 1,\n      });\n      if (this.state.continue) {\n        this.handlePlay();\n      }\n    }, 21000);\n  };\n\n  changeAnswer = (value) => {\n    const { focus } = this.state;\n    switch (focus) {\n      case 0:\n        if (value.length !== 1) {\n          return this.setState({ input1: value });\n        } else {\n          return this.setState({ input1: value, focus: 1 });\n        }\n      case 1:\n        if (value.length !== 1) {\n          return this.setState({ input2: value });\n        } else {\n          return this.setState({ input2: value, focus: 2 });\n        }\n      case 2:\n        return this.setState({ input3: value });\n      default:\n        return null;\n    }\n  };\n\n  handleDelete = () => {\n    const { focus, input2, input3 } = this.state;\n    switch (focus) {\n      case 0:\n        return this.setState({ input1: \"\" });\n      case 1:\n        if (input2.length === 1) {\n          return this.setState({ input2: \"\" });\n        }\n        return this.setState({ input2: \"\", focus: 0 });\n      case 2:\n        if (input3.length === 1) {\n          return this.setState({ input3: \"\" });\n        }\n        return this.setState({ input3: \"\", focus: 1 });\n      default:\n        return null;\n    }\n  };\n\n  handleNext = () => {\n    this.setState({ continue: false });\n    setTimeout(() => this.props.handleClick(), 200);\n  };\n\n  renderInputs = () => {\n    const { input1, input2, input3, stage } = this.state;\n    return (\n      <div>\n        <Input\n          value={input1}\n          inputRef={(input) => {\n            this.input1 = input;\n          }}\n          inputProps={{\n            maxLength: 1,\n          }}\n          required={true}\n          style={{\n            width: 40,\n            marginRight: 10,\n            paddingLeft: 13,\n          }}\n        />\n        <Input\n          value={input2}\n          inputRef={(input) => {\n            this.input2 = input;\n          }}\n          inputProps={{\n            maxLength: 1,\n          }}\n          required={true}\n          style={{ width: 40, paddingLeft: 13 }}\n        />\n        <Input\n          value={input3}\n          inputRef={(input) => {\n            this.input3 = input;\n          }}\n          inputProps={{\n            maxLength: 1,\n          }}\n          required={true}\n          style={{ width: 40, marginLeft: 10, paddingLeft: 13 }}\n        />\n      </div>\n    );\n  };\n\n  renderKeys = () => {\n    const { stage, promps, click } = this.state;\n    return (\n      <div className=\"row\">\n        {\n          <div className=\"col-4\" style={{ marginLeft: \"34%\" }}>\n            <div className=\"rows\">\n              <Fab\n                color={click === 1 ? \"primary\" : \"default\"}\n                style={{ marginLeft: 6, marginRight: 6 }}\n              >\n                1\n              </Fab>\n              <Fab\n                color={click === 2 ? \"primary\" : \"default\"}\n                style={{ marginLeft: 6, marginRight: 6 }}\n              >\n                2\n              </Fab>\n              <Fab\n                color={click === 3 ? \"primary\" : \"default\"}\n                style={{ marginLeft: 6, marginRight: 6 }}\n              >\n                3\n              </Fab>\n            </div>\n          <div className=\"rows\">\n            <Fab\n              color={click === 4 ? \"primary\" : \"default\"}\n              style={{ marginLeft: 6, marginRight: 6, marginTop: 10 }}\n            >\n              4\n            </Fab>\n            <Fab\n              color={click === 5 ? \"primary\" : \"default\"}\n              style={{ marginLeft: 6, marginRight: 6, marginTop: 10 }}\n            >\n              5\n            </Fab>\n            <Fab\n              color={click === 6 ? \"primary\" : \"default\"}\n              style={{ marginLeft: 6, marginRight: 6, marginTop: 10 }}\n            >\n              6\n            </Fab>\n          </div>\n          <div className=\"rows\">\n            <Fab\n              color={click === 7 ? \"primary\" : \"default\"}\n              style={{ marginLeft: 6, marginRight: 6, marginTop: 10 }}\n            >\n              7\n            </Fab>\n            <Fab\n              color={click === 8 ? \"primary\" : \"default\"}\n              style={{ marginLeft: 6, marginRight: 6, marginTop: 10 }}\n            >\n              8\n            </Fab>\n            <Fab\n              color={click === 9 ? \"primary\" : \"default\"}\n              style={{ marginLeft: 6, marginRight: 6, marginTop: 10 }}\n            >\n              9\n            </Fab>\n          </div>\n          <div className=\"rows\">\n            <Fab\n              color={click === \"x\" ? \"primary\" : \"default\"}\n              style={{ marginLeft: 6, marginRight: 6, marginTop: 10 }}\n            >\n              <BackspaceIcon />\n            </Fab>\n            <Fab\n              color={click === \"ok\" ? \"primary\" : \"default\"}\n              style={{ marginLeft: 6, marginRight: 6, marginTop: 10 }}\n            >\n              OK\n            </Fab>\n          </div>\n        </div>\n        }\n        <div className=\"col\">\n          <h4 className=\"font-weight-light text-success\">\n            {stage === 0 ? null : promps[stage - 1]}\n          </h4>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    const { stage } = this.state;\n    return (\n      <Container style={{ textAlign: \"center\" }}>\n        <h2 style={{ textAlign: \"right\", marginTop: \"5%\", marginRight: \"5%\" }}>\n          6\n        </h2>\n        <div\n          style={{\n            textAlign: \"center\",\n            position: \"relative\",\n            marginTop: \"2%\",\n          }}\n        >\n          {stage === 0 ? (\n            <h1>Loading ... </h1>\n          ) : (\n              <div>\n                <h2 className=\"font-weight-light\">\n                  Enter the three digits you heard. If you’re not sure, that’s\n                  fine. Just guess.\n              </h2>\n                {this.renderInputs()}\n                <br />\n                {this.renderKeys()}\n                <br />\n                <Button\n                  color=\"primary\"\n                  variant=\"contained\"\n                  size=\"large\"\n                  onClick={this.handleNext}\n                  style={{\n                    backgroundColor: \"black\",\n                    width: 100,\n                  }}\n                >\n                  Next\n              </Button>\n              </div>\n            )}\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default TestDemo;\n","/Users/kaysong/Documents/hearing_test_frontend/src/components/partials/csv.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/partials/pre-test/welcome.jsx",["415"],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm1/source1.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/partials/pre-test/questions.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/partials/pre-test/ICF.jsx",["416"],"import React from \"react\";\nimport { Button, Container, Checkbox, TextField, Radio, RadioGroup, FormControlLabel } from \"@material-ui/core\";\nimport PDF from \"../../../assets/signal-loss/pdf-reviewer\";\n\nclass ICF extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked1: false,\n      checked2: false,\n      checked3: false,\n      checked4: false,\n      checked5: false,\n      checked6: false,\n      checked7: false,\n      email: \"\",\n      show: false\n    }\n  }\n\n  handleChange = (index) => {\n    const { checked1, checked2, checked3, checked4, checked5, checked6, checked7 } = this.state;\n    switch (index) {\n      case 1:\n        return this.setState({ checked1: !checked1 });\n      case 2:\n        return this.setState({ checked2: !checked2 });\n      case 3:\n        return this.setState({ checked3: !checked3 });\n      case 4:\n        return this.setState({ checked4: !checked4 });\n      case 5:\n        return this.setState({ checked5: !checked5 });\n      case 6:\n        return this.setState({ checked6: !checked6 });\n      case 7:\n        return this.setState({ checked7: !checked7 });\n      default:\n        return null;\n    }\n\n  }\n\n  render() {\n    const { checked1, checked2, checked3, checked4, checked5, checked6, checked7, show } = this.state;\n    return (\n      <Container>\n        <div>\n          <br />\n          <div id=\"icf\">\n            <div style={{ marginLeft: \"10%\", marginRight: \"10%\" }}>\n              <h5>Tips: If you think the size of PDF is small, please increase the width of your browser and reload/refresh the page.</h5>\n              <h5>Instructions: Please read the two-page information sheet below and complete the\ncheckbox questions on the second page to consent to participate in this study.</h5>\n            </div>\n\n            <PDF showConsents={() => this.setState({ show: true })} />\n            {/* <img style={{ width: \"80%\" }} src={process.env.PUBLIC_URL + \"/pictures/icf1.png\"} />\n            <img style={{ width: \"80%\" }} src={process.env.PUBLIC_URL + \"/pictures/icf2.png\"} /> */}\n          </div>\n          <br />\n          {\n            show ?\n              <div id=\"consents\">\n                <div className=\"row\" style={{ marginLeft: 20 }}>\n                  <h5 style={{ marginTop: 10 }}>1. Do you understand that you have been asked to be in a research study?</h5>\n                  <Checkbox\n                    checked={checked1}\n                    color=\"primary\"\n                    onChange={() => this.handleChange(1)}\n                    inputProps={{ 'aria-label': 'primary checkbox' }}\n                  />\n                  <h5 style={{ marginTop: 9 }}>Yes</h5>\n                </div>\n                <div className=\"row\" style={{ marginLeft: 20 }}>\n                  <h5 style={{ marginTop: 10 }}>2. Have you read the information at the top of this page?</h5>\n                  <Checkbox\n                    checked={checked2}\n                    color=\"primary\"\n                    onChange={() => this.handleChange(2)}\n                    inputProps={{ 'aria-label': 'primary checkbox' }}\n                  />\n                  <h5 style={{ marginTop: 9 }}>Yes</h5>\n                  <a href={process.env.PUBLIC_URL + \"/docs/icf.pdf\"} target=\"_blank\" style={{ marginTop: 7, marginLeft: 10 }}>\n                    A copy of this information can be downloaded here\n                  </a>\n                </div>\n                <div className=\"row\" style={{ marginLeft: 20 }}>\n                  <h5 style={{ marginTop: 10 }}>3. Do you understand the benefits and risks involved in taking part in this research study?</h5>\n                  <Checkbox\n                    checked={checked3}\n                    color=\"primary\"\n                    onChange={() => this.handleChange(3)}\n                    inputProps={{ 'aria-label': 'primary checkbox' }}\n                  />\n                  <h5 style={{ marginTop: 9 }}>Yes</h5>\n                </div>\n                <div className=\"row\" style={{ marginLeft: 20 }}>\n                  <h5 style={{ marginTop: 10 }}>\n                    4. Do you understand that you are free to withdraw from this study at any time without having to give a reason?\n            </h5>\n                  <Checkbox\n                    checked={checked4}\n                    color=\"primary\"\n                    onChange={() => this.handleChange(4)}\n                    inputProps={{ 'aria-label': 'primary checkbox' }}\n                  />\n                  <h5 style={{ marginTop: 9 }}>Yes</h5>\n                </div>\n                <div className=\"row\" style={{ marginLeft: 20 }}>\n                  <h5 style={{ marginTop: 10 }}>5. Do you understand that your confidentiality and anonymity will be protected at all times?</h5>\n                  <Checkbox\n                    checked={checked5}\n                    color=\"primary\"\n                    onChange={() => this.handleChange(5)}\n                    inputProps={{ 'aria-label': 'primary checkbox' }}\n                  />\n                  <h5 style={{ marginTop: 9 }}>Yes</h5>\n                </div>\n                <div className=\"row\" style={{ marginLeft: 20 }}>\n                  <h5 style={{ marginTop: 10 }}>6. Do you understand that are free to contact the researchers (jcbhlab@ualberta.ca) if you have any questions about this study?</h5>\n                  <Checkbox\n                    checked={checked6}\n                    label=\"asdasdasda\"\n                    color=\"primary\"\n                    onChange={() => this.handleChange(6)}\n                    inputProps={{ 'aria-label': 'primary checkbox' }}\n                  />\n                  <h5 style={{ marginTop: 9 }}>Yes</h5>\n                </div>\n                <div className=\"row\" style={{ marginLeft: 20 }}>\n                  <h5 style={{ marginTop: 10 }}>7. If you wish to be contacted about future studies, please enter your email here:</h5>\n                  <TextField style={{ marginTop: 3, marginLeft: 5, width: 200 }} onChange={(e) => this.setState({ email: e.target.value })} />\n                </div>\n                <div className=\"row\" style={{ marginLeft: 20 }}>\n                  <h5 style={{ marginTop: 10 }}>8. I agree to take part in this study:</h5>\n                  <RadioGroup aria-label=\"gender\" name=\"gender1\" value={checked7} onChange={() => this.handleChange(7)}>\n                    <div className=\"row\" style={{ marginLeft: 10 }}>\n                      <FormControlLabel value={true} control={<Radio color=\"primary\"/>} label=\"Yes\" />\n                      <FormControlLabel value={false} control={<Radio />} label=\"No\" />\n                    </div>\n                  </RadioGroup>\n                </div>\n                {\n                  checked1 && checked2 && checked3 && checked4 && checked5 && checked6 && checked7 ?\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      style={{ margin: 20, width: 150, backgroundColor: \"black\" }}\n                      onClick={() => this.props.handleClick(this.state.email)}\n                    >\n                      Next\n                    </Button>\n                    :\n                    <div><Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled\n                        style={{ margin: 20, width: 150 }}\n                      >\n                        Next\n                    </Button>\n                    <p>You cannot progress to the next step because you have not completed the consent questions.</p>\n                    </div>\n                }\n              </div>\n              :\n              null\n          }\n          <br /><br /><br /><br /><br /><br />\n        </div>\n      </Container>\n    )\n  }\n}\n\nexport default ICF;\n","/Users/kaysong/Documents/hearing_test_frontend/src/components/partials/pre-test/adjustment.jsx",["417","418"],"import React from \"react\";\nimport { Button, Container, TextField, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport VolumeSlider from \"../../../assets/signal-loss/volume-slider\";\n\nclass VolumeAdjustment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      volumeAdjuest: false,\n      audio: new Audio(process.env.PUBLIC_URL + \"/functional-audio/adjust.wav\"),\n      audioPlay: false,\n      audioVolume: 0,\n      output: null,\n      aids: null,\n    };\n  }\n  componentDidMount = () => {\n    const { audio, audioVolume } = this.state;\n    audio.volume = audioVolume;\n  };\n\n  componentDidUpdate = () => {\n    const { audio, audioVolume } = this.state;\n    audio.volume = audioVolume;\n  };\n\n  handlePlay = async () => {\n    const { audio } = this.state;\n    await audio.play();\n    this.setState({ audioPlay: true });\n  };\n\n  handleStop = async () => {\n    const { audio } = this.state;\n    await audio.pause();\n    this.setState({ audioPlay: false });\n  };\n\n  handleVolume = (volume) => {\n    this.setState({ audioVolume: volume / 100 });\n  };\n\n  handleChangeOutput = (e) => {\n    this.setState({ output: e.target.value });\n  }\n\n  handleAidsChange = (e) => {\n    this.setState({ aids: e.target.value });\n  }\n\n  renderButton = () => {\n    const { output, aids, audioVolume } = this.state;\n    if (!!output && aids != null && !!audioVolume) {\n      return <Button\n        variant=\"contained\"\n        color=\"primary\"\n        style={{ margin: 20, width: 150, backgroundColor: \"black\" }}\n        onClick={() => {\n          this.state.audio.pause();\n          this.props.handleClick(output, aids, audioVolume)\n        }}\n      >\n        Next\n    </Button>\n    } else {\n      return <div><Button\n        variant=\"contained\"\n        color=\"primary\"\n        disabled\n        style={{ margin: 20, width: 150 }}\n      >\n        Next\n    </Button>\n    <p>You cannot progress to the next step because you have not completed the questions.</p>\n    </div>\n    }\n  }\n\n  render() {\n    const { audioPlay, output, aids } = this.state;\n    return (\n      <Container>\n        <div\n          style={{\n            textAlign: \"left\",\n            position: \"relative\",\n            marginTop: \"10%\",\n          }}\n        >\n          <Container>\n            <div id=\"source\">\n              <h5>You can use either speakers or headphones to complete this experiment. Headphones will work best. </h5>\n              <h5>Using the dropbox below, select what you will be using to complete this experiment.</h5>\n              {\n                output === \"speakers\" ?\n                <h5>(If using speakers, please keep a consistent distance from your computer during the entire\n                  experiment)</h5> : null\n              }\n              <Select\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                value={output}\n                onChange={this.handleChangeOutput}\n                style={{ width: 150 }}\n              >\n                <MenuItem value=\"headphones\">headphones</MenuItem>\n                <MenuItem value=\"speakers\">speakers</MenuItem>\n              </Select>\n            </div>\n            <br />\n            <div id=\"aids\">\n              <h5>Will you be wearing amplification (e.g., hearing aid(s), cochlear implant(s), bone anchored hearing aid(s), etc.) when you complete this experiment?</h5>\n              <Select\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                value={aids}\n                onChange={this.handleAidsChange}\n                style={{ width: 150 }}\n              >\n                <MenuItem value={true}>Yes</MenuItem>\n                <MenuItem value={false}>No</MenuItem>\n              </Select>\n            </div>\n            <br />\n            <div>\n              <h5>\n                Please set your computer volume to approximately 50%. Click PLAY to listen to an audio sample.\n            </h5>\n              <h5>\n                Move the slider bar to your most comfortable listening level. Once comfortable, click NEXT to begin the study.\n            </h5>\n            <h5>Please do not adjust your computer volume during the experiment. </h5>\n            </div>\n            <VolumeSlider\n              handleVolume={this.handleVolume}\n              style={{ marginLeft: 5 }}\n            />\n          </Container>\n          <br />\n          {audioPlay ? (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.handleStop}\n              style={{ margin: 5, width: 150, backgroundColor: \"black\" }}\n            >\n              Stop\n            </Button>\n          ) : (\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.handlePlay}\n                style={{\n                  margin: 5,\n                  width: 150,\n                  backgroundColor: \"black\",\n                }}\n              >\n                Play\n              </Button>\n            )}\n          {this.renderButton()}\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default VolumeAdjustment;\n","/Users/kaysong/Documents/hearing_test_frontend/src/components/partials/post-test/questions1.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/digits/test/speech-in-noise.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/partials/post-test/questions3.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/partials/pre-test/demo-info.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/partials/post-test/questions2.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/partials/post-test/questions4.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/partials/post-test/end.jsx",["419"],"import React from \"react\";\nimport { Button, Container } from \"@material-ui/core\";\n\nexport default (props) => {\n  return (\n    <Container>\n      <div\n        style={{\n          textAlign: \"center\",\n          position: \"relative\",\n          marginTop: \"20%\",\n        }}\n      >\n        <h2>\n        Thank you for participating in this test!\n        </h2>\n        <h3>Your participant ID is: {props.ID}</h3>\n        <h5>You may contact the investigators at jcbhlab@ualberta.ca and use this number to withdraw your data up to one week after you have completed the experiment.</h5>\n        <Button variant=\"contained\" color=\"primary\" onClick={() => window.location = \"/\"} >Back to Main Page</Button>\n      </div>\n    </Container>\n  );\n};\n","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/mid-page.jsx",["420"],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/source2.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/source4.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/source1.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/source3.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm2/test.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/test.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/audioloss1.jsx",["421"],"import React from \"react\";\nimport { CircularProgress, Avatar, Button } from \"@material-ui/core\";\n\nclass TestMain extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            maskVolume: this.props.volume,\n            sourceVolume: this.props.volume,\n            questions: [],\n            index: 0,\n            dbs: [0],\n            time: 0,\n            timer: [],\n            correct: [],\n            answers: [],\n            userStart: false,\n            alert: false,\n            once: false,\n            traversals: 0,\n            lastCorrectness: null,\n            pause: false\n        }\n    }\n\n    componentDidMount = async () => {\n        for (var i = 1; i < 5; i++) {\n            for (var j = 1; j < 9; j++) {\n                const audio1 = new Audio(process.env.PUBLIC_URL + \"/crm3-loss-audio/\" + i.toString() + j.toString() + \".wav\");\n                const audio2 = new Audio(process.env.PUBLIC_URL + \"/crm3-mask-audio/\" + i.toString() + j.toString() + \".wav\");\n                audio1.volume = 0;\n                audio2.volume = 0;\n                try {\n                    await audio1.play();\n                    await audio2.play();\n                    await audio1.pause();\n                    await audio2.pause();\n                } catch (e) { console.log(e, \"for\", i, j) }\n            }\n        }\n        this.setState({ loading: false });\n        this.playAudio();\n    }\n\n    startTimer = () => {\n        this.setState({ time: new Date().getTime() });\n    };\n    stopTimer = () => {\n        this.setState({ time: new Date().getTime() - this.state.time });\n    };\n    resetTimer = () => {\n        this.setState({ time: 0, alert: false });\n    };\n\n    getTargetAndMask = () => {\n        const {  questions } = this.state;\n        const color = Math.ceil(Math.random() * 4).toString();\n        const number = Math.ceil(Math.random() * 8).toString();\n        const colorMask = Math.ceil(Math.random() * 4).toString();\n        const numberMask = Math.ceil(Math.random() * 8).toString();\n        const question = color + number;\n        const questionMask = colorMask + numberMask;\n        if (question == questionMask) {\n            return this.getTargetAndMask();\n        }\n        questions.push(question);\n        this.setState({ questions });\n        return { question, questionMask };\n    }\n\n    playAudio = async () => {\n        const {  maskVolume, sourceVolume } = this.state;\n        const { question, questionMask } = this.getTargetAndMask();\n        console.log(\"Question and mask: \", question, questionMask);\n        let sourceAudio = new Audio(process.env.PUBLIC_URL + \"/crm3-loss-audio/\" + question + \".wav\");\n        let maskAudio = new Audio(process.env.PUBLIC_URL + \"/crm3-mask-audio/\" + questionMask + \".wav\");\n        sourceAudio.volume = sourceVolume;\n        maskAudio.volume = maskVolume;\n        await sourceAudio.play();\n        setTimeout(() => maskAudio.play(), 300);\n        setTimeout(() => {\n            maskAudio.pause();\n            this.startTimer();\n            this.setState({ userStart: true });\n        }, sourceAudio.duration * 1000);\n    }\n\n    handleClick = async (num) => {\n        const { questions, index, timer, lastCorrectness, traversals, correct, answers } = this.state;\n        await this.setState({ userStart: false });\n        await this.stopTimer();\n        await timer.push(this.state.time);\n        await this.resetTimer();\n        await this.setState({ timer });\n        answers.push(num);\n        await this.setState({ answers });\n        const right = questions[index] === num;\n        let sourceVolume;\n        if (right) {\n            correct.push(true);\n            if (lastCorrectness === null) {\n                this.setState({ lastCorrectness: true })\n            } else if (lastCorrectness === false) {\n                console.log(\"RIGHT, Traversal\", traversals + 1, \"times!\")\n                this.setState({ lastCorrectness: true, traversals: traversals + 1 })\n            }\n            sourceVolume = this.goHarder();\n        } else {\n            correct.push(false);\n            if (lastCorrectness === null) {\n                this.setState({ lastCorrectness: false })\n            } else if (lastCorrectness === true) {\n                console.log(\"WRONG, Traversal\", traversals + 1, \"times!\")\n                this.setState({ lastCorrectness: false, traversals: traversals + 1 })\n            }\n            sourceVolume = this.goEasier();\n        }\n        await this.setState({ index: index + 1, sourceVolume, correct });\n        if (this.state.traversals >= this.props.reversals) {\n            const { dbs } = this.state;\n            let sum = 0;\n            if (dbs.length >= 10) {\n                for (let i = dbs.length - 10; i < dbs.length; i++) {\n                    sum += dbs[i];\n                }\n            } else {\n                for (let i = 0; i < dbs.length; i++) {\n                    sum += dbs[i];\n                }\n            }\n            const SNR = Number(sum / 10).toFixed(2);\n            this.props.handleClick(SNR, timer, dbs, this.state.questions, this.state.answers, correct);\n        } else {\n            setTimeout(() => {\n                this.playAudio();\n            }, 2000)\n        }\n    }\n\n    goEasier = () => {\n        const { sourceVolume, index, dbs } = this.state;\n        dbs.push(dbs[index] + 3);\n        this.setState({ dbs });\n        if (sourceVolume * 10 ** (3 / 20) > 1) {\n            return 1;\n        } else {\n            return sourceVolume * 10 ** (3 / 20);\n        }\n    };\n\n    goHarder = () => {\n        const { sourceVolume, index, dbs } = this.state;\n        dbs.push(dbs[index] - 1);\n        this.setState({ dbs });\n        return sourceVolume * 10 ** (-1 / 20);\n    };\n\n    handleCloseAlert = (event, reason) => {\n        if (reason === \"clickaway\") return;\n        this.setState({ alert: false });\n    };\n\n    handlePause = () => {\n        this.setState({ pause: true });\n        if (this.state.userStart) {\n            this.stopTimer();\n        }\n    }\n\n    handleResume = () => {\n        this.setState({ pause: false });\n        if (this.state.userStart) {\n            this.setState({ time: new Date().getTime() - this.state.time });\n        }\n    }\n\n    render() {\n        const { traversals, loading, userStart, pause } = this.state;\n        const { reversals } = this.props;\n        return (\n            <div>\n                {\n                    loading\n                        ?\n                        <div>\n                            <CircularProgress />\n                        </div>\n                        :\n                        <div>\n                            <div id=\"buttons\" style={{ position: \"fixed\", height: \"80%\", width: \"100%\", backgroundColor: \"#C2CAD0\" }}>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"11\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"12\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"13\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"14\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"15\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"16\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"17\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"18\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"21\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"22\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"23\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"24\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"25\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"26\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"27\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"28\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"31\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"32\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"33\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"34\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"35\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"36\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"37\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"38\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"41\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"42\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"43\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"44\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"45\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"46\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"47\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"48\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                            </div>\n                            <div id=\"progress\" className=\"row\" style={{ position: \"fixed\", left: \"5%\", right: \"5%\", bottom: 10 }}>\n                                <h5>Progress⠀</h5>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 0 ? traversals >= 0 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 1 ? traversals >= 1 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 2 ? traversals >= 2 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 3 ? traversals >= 3 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 4 ? traversals >= 4 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 5 ? traversals >= 5 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 6 ? traversals >= 6 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 7 ? traversals >= 7 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 8 ? traversals >= 8 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 9 ? traversals >= 9 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 10 ? traversals >= 10 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 11 ? traversals >= 11 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 12 ? traversals >= 12 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 13 ? traversals >= 13 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 14 ? traversals >= 14 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 15 ? traversals >= 15 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 16 ? traversals >= 16 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 17 ? traversals >= 17 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 18 ? traversals >= 18 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 19 ? traversals >= 19 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 20 ? traversals >= 20 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 21 ? traversals >= 21 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 22 ? traversals >= 22 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 23 ? traversals >= 23 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 24 ? traversals >= 24 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <h5> {this.props.block + 1}/4 Block</h5>\n                                {\n                                    userStart ?\n                                        pause ?\n                                            <Button style={{ marginLeft: 10 }} color=\"secondary\" variant=\"outlined\" onClick={this.handleResume}>Resume</Button>\n                                            :\n                                            <Button style={{ marginLeft: 10 }} color=\"primary\" variant=\"outlined\" onClick={this.handlePause}>Pause</Button>\n                                        :\n                                        <Button style={{ marginLeft: 10 }} disabled variant=\"outlined\" >Pause</Button>\n                                }\n                                <p>The blue dots on the progress bar may not advance with each trial. This is normal. Please do not adjust your computer volume during the test.</p>\n                            </div>\n                        </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default TestMain;","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/source2.jsx",["422"],"import React from \"react\";\nimport { CircularProgress, Avatar, Button } from \"@material-ui/core\";\n\nclass TestMain extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            maskVolume: this.props.volume,\n            sourceVolume: this.props.volume,\n            questions: [],\n            index: 0,\n            dbs: [0],\n            time: 0,\n            timer: [],\n            correct: [],\n            answers: [],\n            userStart: false,\n            alert: false,\n            once: false,\n            traversals: 0,\n            lastCorrectness: null,\n            pause: false\n        }\n    }\n\n    componentDidMount = async () => {\n        for (var i = 1; i < 5; i++) {\n            for (var j = 1; j < 9; j++) {\n                const audio1 = new Audio(process.env.PUBLIC_URL + \"/crm3-source-audio/\" + i.toString() + j.toString() + \".wav\");\n                const audio2 = new Audio(process.env.PUBLIC_URL + \"/crm3-mask-audio/\" + i.toString() + j.toString() + \".wav\");\n                audio1.volume = 0;\n                audio2.volume = 0;\n                try {\n                    await audio1.play();\n                    await audio2.play();\n                    await audio1.pause();\n                    await audio2.pause();\n                } catch (e) { console.log(e, \"for\", i, j) }\n            }\n        }\n\n        this.setState({ loading: false });\n        this.playAudio();\n    }\n\n    startTimer = () => {\n        this.setState({ time: new Date().getTime() });\n    };\n    stopTimer = () => {\n        this.setState({ time: new Date().getTime() - this.state.time });\n    };\n    resetTimer = () => {\n        this.setState({ time: 0, alert: false, once: false });\n    };\n\n    getTargetAndMask = () => {\n        const {  questions } = this.state;\n        const color = Math.ceil(Math.random() * 4).toString();\n        const number = Math.ceil(Math.random() * 8).toString();\n        const colorMask = Math.ceil(Math.random() * 4).toString();\n        const numberMask = Math.ceil(Math.random() * 8).toString();\n        const question = color + number;\n        const questionMask = colorMask + numberMask;\n        if (question == questionMask) {\n            return this.getTargetAndMask();\n        }\n        questions.push(question);\n        this.setState({ questions });\n        return { question, questionMask };\n    }\n\n    playAudio = async () => {\n        const {  maskVolume, sourceVolume } = this.state;\n        const { question, questionMask } = this.getTargetAndMask();\n        console.log(\"Question and mask: \", question, questionMask);\n        let sourceAudio = new Audio(process.env.PUBLIC_URL + \"/crm3-source-audio/\" + question + \".wav\");\n        let maskAudio = new Audio(process.env.PUBLIC_URL + \"/crm3-mask-audio/\" + questionMask + \".wav\");\n        sourceAudio.volume = sourceVolume;\n        maskAudio.volume = maskVolume;\n        await sourceAudio.play();\n        setTimeout(() => maskAudio.play(), 300);\n        setTimeout(() => {\n            maskAudio.pause();\n            this.startTimer();\n            this.setState({ userStart: true });\n        }, sourceAudio.duration * 1000);\n    }\n\n    handleClick = async (num) => {\n        const { questions, index, timer, lastCorrectness, traversals, correct, answers } = this.state;\n        await this.setState({ userStart: false });\n        await this.stopTimer();\n        await timer.push(this.state.time);\n        await this.resetTimer();\n        await this.setState({ timer });\n        answers.push(num);\n        await this.setState({answers});\n        const right = questions[index] === num;\n        let sourceVolume;\n        if (right) {\n            correct.push(true);\n            if (lastCorrectness === null) {\n                this.setState({ lastCorrectness: true })\n            } else if (lastCorrectness === false) {\n                console.log(\"RIGHT, Traversal\", traversals + 1, \"times!\")\n                this.setState({ lastCorrectness: true, traversals: traversals + 1 })\n            }\n            sourceVolume = this.goHarder();\n        } else {\n            correct.push(false);\n            if (lastCorrectness === null) {\n                this.setState({ lastCorrectness: false })\n            } else if (lastCorrectness === true) {\n                console.log(\"WRONG, Traversal\", traversals + 1, \"times!\")\n                this.setState({ lastCorrectness: false, traversals: traversals + 1 })\n            }\n            sourceVolume = this.goEasier();\n        }\n        await this.setState({ index: index + 1, sourceVolume, correct });\n        if (this.state.traversals >= this.props.reversals) {\n            const { dbs } = this.state;\n            let sum = 0;\n            if (dbs.length >= 10) {\n                for (let i = dbs.length - 10; i < dbs.length; i++) {\n                    sum += dbs[i];\n                }\n            } else {\n                for (let i = 0; i < dbs.length; i++) {\n                    sum += dbs[i];\n                }\n            }\n            const SNR = Number(sum / 10).toFixed(2);\n            this.props.handleClick(SNR, timer, dbs, this.state.questions, this.state.answers, correct);\n        } else {\n            setTimeout(() => {\n                this.playAudio();\n            }, 2000)\n        }\n    }\n\n    goEasier = () => {\n        const { sourceVolume, index, dbs } = this.state;\n        dbs.push(dbs[index] + 3);\n        this.setState({ dbs });\n        if (sourceVolume * 10 ** (3 / 20) > 1) {\n            return 1;\n        } else {\n            return sourceVolume * 10 ** (3 / 20);\n        }\n    };\n\n    goHarder = () => {\n        const { sourceVolume, index, dbs } = this.state;\n        dbs.push(dbs[index] - 1);\n        this.setState({ dbs });\n        return sourceVolume * 10 ** (-1 / 20);\n    };\n\n    handleCloseAlert = (event, reason) => {\n        if (reason === \"clickaway\") return;\n        this.setState({ alert: false });\n    };\n\n    handlePause = () => {\n        this.setState({ pause: true });\n        if (this.state.userStart) {\n            this.stopTimer();\n        }\n    }\n\n    handleResume = () => {\n        this.setState({ pause: false });\n        if (this.state.userStart) {\n            this.setState({ time: new Date().getTime() - this.state.time });\n        }\n    }\n\n    render() {\n        const { traversals, loading, userStart, pause } = this.state;\n        const { reversals } = this.props;\n        return (\n            <div>\n                {\n                    loading\n                        ?\n                        <div>\n                            <CircularProgress />\n                        </div>\n                        :\n                        <div>\n                            <div id=\"buttons\" style={{ position: \"fixed\", height: \"80%\", width: \"100%\", backgroundColor: \"#C2CAD0\" }}>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"11\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"12\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"13\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"14\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"15\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"16\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"17\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"18\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"21\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"22\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"23\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"24\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"25\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"26\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"27\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"28\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"31\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"32\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"33\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"34\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"35\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"36\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"37\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"38\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"41\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"42\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"43\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"44\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"45\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"46\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"47\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"48\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                            </div>\n                            <div id=\"progress\" className=\"row\" style={{ position: \"fixed\", left: \"5%\", right: \"5%\", bottom: 10 }}>\n                                <h5>Progress⠀</h5>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 0 ? traversals >= 0 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 1 ? traversals >= 1 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 2 ? traversals >= 2 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 3 ? traversals >= 3 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 4 ? traversals >= 4 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 5 ? traversals >= 5 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 6 ? traversals >= 6 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 7 ? traversals >= 7 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 8 ? traversals >= 8 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 9 ? traversals >= 9 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 10 ? traversals >= 10 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 11 ? traversals >= 11 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 12 ? traversals >= 12 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 13 ? traversals >= 13 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 14 ? traversals >= 14 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 15 ? traversals >= 15 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 16 ? traversals >= 16 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 17 ? traversals >= 17 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 18 ? traversals >= 18 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 19 ? traversals >= 19 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 20 ? traversals >= 20 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 21 ? traversals >= 21 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 22 ? traversals >= 22 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 23 ? traversals >= 23 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 24 ? traversals >= 24 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <h5> {this.props.block + 1}/4 Block</h5>\n                                {\n                                    userStart ?\n                                        pause ?\n                                            <Button style={{ marginLeft: 10 }} color=\"secondary\" variant=\"outlined\" onClick={this.handleResume}>Resume</Button>\n                                            :\n                                            <Button style={{ marginLeft: 10 }} color=\"primary\" variant=\"outlined\" onClick={this.handlePause}>Pause</Button>\n                                        :\n                                        <Button style={{ marginLeft: 10 }} disabled variant=\"outlined\" >Pause</Button>\n                                }\n                                <p>The blue dots on the progress bar may not advance with each trial. This is normal. Please do not adjust your computer volume during the test.</p>\n                            </div>\n                        </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default TestMain;","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/source1.jsx",["423"],"import React from \"react\";\nimport { CircularProgress, Avatar, Button } from \"@material-ui/core\";\n\nclass TestMain extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            maskVolume: this.props.volume,\n            sourceVolume: this.props.volume,\n            questions: [],\n            index: 0,\n            dbs: [0],\n            time: 0,\n            timer: [],\n            correct: [],\n            answers: [],\n            userStart: false,\n            alert: false,\n            once: false,\n            traversals: 0,\n            lastCorrectness: null,\n            pause: false\n        }\n    }\n\n    componentDidMount = async () => {\n        for (var i = 1; i < 5; i++) {\n            for (var j = 1; j < 9; j++) {\n                const audio1 = new Audio(process.env.PUBLIC_URL + \"/crm3-source-audio/\" + i.toString() + j.toString() + \".wav\");\n                const audio2 = new Audio(process.env.PUBLIC_URL + \"/crm3-mask-audio/\" + i.toString() + j.toString() + \".wav\");\n                audio1.volume = 0;\n                audio2.volume = 0;\n                try {\n                    await audio1.play();\n                    await audio2.play();\n                    await audio1.pause();\n                    await audio2.pause();\n                } catch (e) { console.log(e, \"for\", i, j) }\n            }\n        }\n\n        this.setState({ loading: false });\n        this.playAudio();\n    }\n\n    startTimer = () => {\n        this.setState({ time: new Date().getTime() });\n    };\n    stopTimer = () => {\n        this.setState({ time: new Date().getTime() - this.state.time });\n    };\n    resetTimer = () => {\n        this.setState({ time: 0, alert: false });\n    };\n\n    getTargetAndMask = () => {\n        const {  questions } = this.state;\n        const color = Math.ceil(Math.random() * 4).toString();\n        const number = Math.ceil(Math.random() * 8).toString();\n        const colorMask = Math.ceil(Math.random() * 4).toString();\n        const numberMask = Math.ceil(Math.random() * 8).toString();\n        const question = color + number;\n        const questionMask = colorMask + numberMask;\n        if (question == questionMask) {\n            return this.getTargetAndMask();\n        }\n        questions.push(question);\n        this.setState({ questions });\n        return { question, questionMask };\n    }\n\n    playAudio = async () => {\n        const {  maskVolume, sourceVolume } = this.state;\n        const { question, questionMask } = this.getTargetAndMask();\n        console.log(\"Question and mask: \", question, questionMask);\n        let sourceAudio = new Audio(process.env.PUBLIC_URL + \"/crm3-source-audio/\" + question + \".wav\");\n        let maskAudio = new Audio(process.env.PUBLIC_URL + \"/crm3-mask-audio/\" + questionMask + \".wav\");\n        sourceAudio.volume = sourceVolume;\n        maskAudio.volume = maskVolume;\n        await sourceAudio.play();\n        setTimeout(() => maskAudio.play(), 300);\n        setTimeout(() => {\n            maskAudio.pause();\n            this.startTimer();\n            this.setState({ userStart: true });\n        }, sourceAudio.duration * 1000);\n    }\n\n    handleClick = async (num) => {\n        const { questions, index, timer, lastCorrectness, traversals, correct, answers } = this.state;\n        await this.setState({ userStart: false });\n        await this.stopTimer();\n        await timer.push(this.state.time);\n        await this.resetTimer();\n        await this.setState({ timer });\n        answers.push(num);\n        await this.setState({answers});\n        const right = questions[index] === num;\n        let sourceVolume;\n        if (right) {\n            correct.push(true);\n            if (lastCorrectness === null) {\n                this.setState({ lastCorrectness: true })\n            } else if (lastCorrectness === false) {\n                console.log(\"RIGHT, Traversal\", traversals + 1, \"times!\")\n                this.setState({ lastCorrectness: true, traversals: traversals + 1 })\n            }\n            sourceVolume = this.goHarder();\n        } else {\n            correct.push(false);\n            if (lastCorrectness === null) {\n                this.setState({ lastCorrectness: false })\n            } else if (lastCorrectness === true) {\n                console.log(\"WRONG, Traversal\", traversals + 1, \"times!\")\n                this.setState({ lastCorrectness: false, traversals: traversals + 1 })\n            }\n            sourceVolume = this.goEasier();\n        }\n        await this.setState({ index: index + 1, sourceVolume, correct });\n        if (this.state.traversals >= this.props.reversals) {\n            const { dbs } = this.state;\n            let sum = 0;\n            if (dbs.length >= 10) {\n                for (let i = dbs.length - 10; i < dbs.length; i++) {\n                    sum += dbs[i];\n                }\n            } else {\n                for (let i = 0; i < dbs.length; i++) {\n                    sum += dbs[i];\n                }\n            }\n            const SNR = Number(sum / 10).toFixed(2);\n            this.props.handleClick(SNR, timer, dbs, this.state.questions, this.state.answers, correct);\n        } else {\n            setTimeout(() => {\n                this.playAudio();\n            }, 2000)\n        }\n    }\n\n    goEasier = () => {\n        const { sourceVolume, index, dbs } = this.state;\n        dbs.push(dbs[index] + 3);\n        this.setState({ dbs });\n        if (sourceVolume * 10 ** (3 / 20) > 1) {\n            return 1;\n        } else {\n            return sourceVolume * 10 ** (3 / 20);\n        }\n    };\n\n    goHarder = () => {\n        const { sourceVolume, index, dbs } = this.state;\n        dbs.push(dbs[index] - 1);\n        this.setState({ dbs });\n        return sourceVolume * 10 ** (-1 / 20);\n    };\n\n    handleCloseAlert = (event, reason) => {\n        if (reason === \"clickaway\") return;\n        this.setState({ alert: false });\n    };\n\n    handlePause = () => {\n        this.setState({ pause: true });\n        if (this.state.userStart) {\n            this.stopTimer();\n        }\n    }\n\n    handleResume = () => {\n        this.setState({ pause: false });\n        if (this.state.userStart) {\n            this.setState({ time: new Date().getTime() - this.state.time });\n        }\n    }\n\n    render() {\n        const { traversals, loading, userStart, pause } = this.state;\n        const { reversals } = this.props;\n        return (\n            <div>\n                {\n                    loading\n                        ?\n                        <div>\n                            <CircularProgress />\n                        </div>\n                        :\n                        <div>\n                            <div id=\"buttons\" style={{ position: \"fixed\", height: \"80%\", width: \"100%\", backgroundColor: \"#C2CAD0\" }}>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"11\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"12\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"13\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"14\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"15\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"16\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"17\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"18\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"21\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"22\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"23\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"24\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"25\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"26\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"27\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"28\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"31\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"32\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"33\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"34\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"35\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"36\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"37\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"38\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"41\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"42\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"43\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"44\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"45\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"46\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"47\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"48\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                            </div>\n                            <div id=\"progress\" className=\"row\" style={{ position: \"fixed\", left: \"5%\", right: \"5%\", bottom: 10 }}>\n                                <h5>Progress⠀</h5>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 0 ? traversals >= 0 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 1 ? traversals >= 1 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 2 ? traversals >= 2 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 3 ? traversals >= 3 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 4 ? traversals >= 4 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 5 ? traversals >= 5 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 6 ? traversals >= 6 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 7 ? traversals >= 7 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 8 ? traversals >= 8 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 9 ? traversals >= 9 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 10 ? traversals >= 10 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 11 ? traversals >= 11 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 12 ? traversals >= 12 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 13 ? traversals >= 13 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 14 ? traversals >= 14 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 15 ? traversals >= 15 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 16 ? traversals >= 16 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 17 ? traversals >= 17 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 18 ? traversals >= 18 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 19 ? traversals >= 19 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 20 ? traversals >= 20 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 21 ? traversals >= 21 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 22 ? traversals >= 22 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 23 ? traversals >= 23 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 24 ? traversals >= 24 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <h5> {this.props.block + 1}/4 Block</h5>\n                                {\n                                    userStart ?\n                                        pause ?\n                                            <Button style={{ marginLeft: 10 }} color=\"secondary\" variant=\"outlined\" onClick={this.handleResume}>Resume</Button>\n                                            :\n                                            <Button style={{ marginLeft: 10 }} color=\"primary\" variant=\"outlined\" onClick={this.handlePause}>Pause</Button>\n                                        :\n                                        <Button style={{ marginLeft: 10 }} disabled variant=\"outlined\" >Pause</Button>\n                                }\n                                <p>The blue dots on the progress bar may not advance with each trial. This is normal. Please do not adjust your computer volume during the test.</p>\n                            </div>\n                        </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default TestMain;","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/audioloss2.jsx",["424"],"import React from \"react\";\nimport { CircularProgress, Avatar, Button } from \"@material-ui/core\";\n\nclass TestMain extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            maskVolume: this.props.volume,\n            sourceVolume: this.props.volume,\n            questions: [],\n            index: 0,\n            dbs: [0],\n            time: 0,\n            timer: [],\n            correct: [],\n            answers: [],\n            userStart: false,\n            alert: false,\n            once: false,\n            traversals: 0,\n            lastCorrectness: null,\n            pause: false\n        }\n    }\n\n    componentDidMount = async () => {\n        for (var i = 1; i < 5; i++) {\n            for (var j = 1; j < 9; j++) {\n                const audio1 = new Audio(process.env.PUBLIC_URL + \"/crm3-loss-audio/\" + i.toString() + j.toString() + \".wav\");\n                const audio2 = new Audio(process.env.PUBLIC_URL + \"/crm3-mask-audio/\" + i.toString() + j.toString() + \".wav\");\n                audio1.volume = 0;\n                audio2.volume = 0;\n                try {\n                    await audio1.play();\n                    await audio2.play();\n                    await audio1.pause();\n                    await audio2.pause();\n                } catch (e) { console.log(e, \"for\", i, j) }\n            }\n        }\n        this.setState({ loading: false });\n        this.playAudio();\n    }\n\n    startTimer = () => {\n        this.setState({ time: new Date().getTime() });\n    };\n    stopTimer = () => {\n        this.setState({ time: new Date().getTime() - this.state.time });\n    };\n    resetTimer = () => {\n        this.setState({ time: 0, alert: false });\n    };\n\n    getTargetAndMask = () => {\n        const {  questions } = this.state;\n        const color = Math.ceil(Math.random() * 4).toString();\n        const number = Math.ceil(Math.random() * 8).toString();\n        const colorMask = Math.ceil(Math.random() * 4).toString();\n        const numberMask = Math.ceil(Math.random() * 8).toString();\n        const question = color + number;\n        const questionMask = colorMask + numberMask;\n        if (question == questionMask) {\n            return this.getTargetAndMask();\n        }\n        questions.push(question);\n        this.setState({ questions });\n        return { question, questionMask };\n    }\n\n    playAudio = async () => {\n        const {  maskVolume, sourceVolume } = this.state;\n        const { question, questionMask } = this.getTargetAndMask();\n        console.log(\"Question and mask: \", question, questionMask);\n        let sourceAudio = new Audio(process.env.PUBLIC_URL + \"/crm3-loss-audio/\" + question + \".wav\");\n        let maskAudio = new Audio(process.env.PUBLIC_URL + \"/crm3-mask-audio/\" + questionMask + \".wav\");\n        sourceAudio.volume = sourceVolume;\n        maskAudio.volume = maskVolume;\n        await sourceAudio.play();\n        setTimeout(() => maskAudio.play(), 300);\n        setTimeout(() => {\n            maskAudio.pause();\n            this.startTimer();\n            this.setState({ userStart: true });\n        }, sourceAudio.duration * 1000);\n    }\n\n    handleClick = async (num) => {\n        const { questions, index, timer, lastCorrectness, traversals, correct, answers } = this.state;\n        await this.setState({ userStart: false });\n        await this.stopTimer();\n        await timer.push(this.state.time);\n        await this.resetTimer();\n        await this.setState({ timer });\n        answers.push(num);\n        await this.setState({answers});\n        const right = questions[index] === num;\n        let sourceVolume;\n        if (right) {\n            correct.push(true);\n            if (lastCorrectness === null) {\n                this.setState({ lastCorrectness: true })\n            } else if (lastCorrectness === false) {\n                console.log(\"RIGHT, Traversal\", traversals + 1, \"times!\")\n                this.setState({ lastCorrectness: true, traversals: traversals + 1 })\n            }\n            sourceVolume = this.goHarder();\n        } else {\n            correct.push(false);\n            if (lastCorrectness === null) {\n                this.setState({ lastCorrectness: false })\n            } else if (lastCorrectness === true) {\n                console.log(\"WRONG, Traversal\", traversals + 1, \"times!\")\n                this.setState({ lastCorrectness: false, traversals: traversals + 1 })\n            }\n            sourceVolume = this.goEasier();\n        }\n        await this.setState({ index: index + 1, sourceVolume, correct });\n        if (this.state.traversals >= this.props.reversals) {\n            const { dbs } = this.state;\n            let sum = 0;\n            if (dbs.length >= 10) {\n                for (let i = dbs.length - 10; i < dbs.length; i++) {\n                    sum += dbs[i];\n                }\n            } else {\n                for (let i = 0; i < dbs.length; i++) {\n                    sum += dbs[i];\n                }\n            }\n            const SNR = Number(sum / 10).toFixed(2);\n            this.props.handleClick(SNR, timer, dbs, this.state.questions, this.state.answers, correct);\n        } else {\n            setTimeout(() => {\n                this.playAudio();\n            }, 2000)\n        }\n    }\n\n    goEasier = () => {\n        const { sourceVolume, index, dbs } = this.state;\n        dbs.push(dbs[index] + 3);\n        this.setState({ dbs });\n        if (sourceVolume * 10 ** (3 / 20) > 1) {\n            return 1;\n        } else {\n            return sourceVolume * 10 ** (3 / 20);\n        }\n    };\n\n    goHarder = () => {\n        const { sourceVolume, index, dbs } = this.state;\n        dbs.push(dbs[index] - 1);\n        this.setState({ dbs });\n        return sourceVolume * 10 ** (-1 / 20);\n    };\n\n    handleCloseAlert = (event, reason) => {\n        if (reason === \"clickaway\") return;\n        this.setState({ alert: false });\n    };\n\n    handlePause = () => {\n        this.setState({ pause: true });\n        if (this.state.userStart) {\n            this.stopTimer();\n        }\n    }\n\n    handleResume = () => {\n        this.setState({ pause: false });\n        if (this.state.userStart) {\n            this.setState({ time: new Date().getTime() - this.state.time });\n        }\n    }\n\n    render() {\n        const { traversals, loading, userStart, pause } = this.state;\n        const { reversals } = this.props;\n        \n        return (\n            <div>\n                {\n                    loading\n                        ?\n                        <div>\n                            <CircularProgress />\n                        </div>\n                        :\n                        <div>\n                            <div id=\"buttons\" style={{ position: \"fixed\", height: \"80%\", width: \"100%\", backgroundColor: \"#C2CAD0\" }}>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"11\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"12\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"13\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"14\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"15\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"16\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"17\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"18\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"21\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"22\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"23\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"24\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"25\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"26\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"27\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"28\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"31\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"32\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"33\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"34\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"35\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"36\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"37\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"38\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"41\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"42\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"43\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"44\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"45\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"46\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"47\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"48\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                            </div>\n                            <div id=\"progress\" className=\"row\" style={{ position: \"fixed\", left: \"5%\", right: \"5%\", bottom: 10 }}>\n                                <h5>Progress⠀</h5>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 0 ? traversals >= 0 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 1 ? traversals >= 1 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 2 ? traversals >= 2 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 3 ? traversals >= 3 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 4 ? traversals >= 4 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 5 ? traversals >= 5 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 6 ? traversals >= 6 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 7 ? traversals >= 7 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 8 ? traversals >= 8 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 9 ? traversals >= 9 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 10 ? traversals >= 10 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 11 ? traversals >= 11 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 12 ? traversals >= 12 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 13 ? traversals >= 13 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 14 ? traversals >= 14 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 15 ? traversals >= 15 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 16 ? traversals >= 16 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 17 ? traversals >= 17 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 18 ? traversals >= 18 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 19 ? traversals >= 19 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 20 ? traversals >= 20 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 21 ? traversals >= 21 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 22 ? traversals >= 22 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 23 ? traversals >= 23 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 24 ? traversals >= 24 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <h5> {this.props.block + 1}/4 Block</h5>\n                                {\n                                    userStart ?\n                                        pause ?\n                                            <Button style={{ marginLeft: 10 }} color=\"secondary\" variant=\"outlined\" onClick={this.handleResume}>Resume</Button>\n                                            :\n                                            <Button style={{ marginLeft: 10 }} color=\"primary\" variant=\"outlined\" onClick={this.handlePause}>Pause</Button>\n                                        :\n                                        <Button style={{ marginLeft: 10 }} disabled variant=\"outlined\" >Pause</Button>\n                                }\n                                <p>The blue dots on the progress bar may not advance with each trial. This is normal. Please do not adjust your computer volume during the test.</p>\n                            </div>\n                        </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default TestMain;","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm3/mid-page.jsx",["425"],"/Users/kaysong/Documents/hearing_test_frontend/src/assets/digits/data-card.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/assets/signal-loss/data-table.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/source2.jsx",["426"],"import React from \"react\";\nimport { CircularProgress, Avatar, Button } from \"@material-ui/core\";\n\nclass TestMain extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            maskVolume: this.props.volume,\n            sourceVolume: this.props.volume,\n            questions: [],\n            index: 0,\n            dbs: [0],\n            time: 0,\n            timer: [],\n            correct: [],\n            answers: [],\n            userStart: false,\n            alert: false,\n            once: false,\n            traversals: 0,\n            lastCorrectness: null,\n            pause: false\n        }\n    }\n\n    componentDidMount = async () => {\n        for (var i = 1; i < 5; i++) {\n            for (var j = 1; j < 9; j++) {\n                const audio1 = new Audio(process.env.PUBLIC_URL + \"/crm4-source-audio/\" + i.toString() + j.toString() + \".wav\");\n                const audio2 = new Audio(process.env.PUBLIC_URL + \"/crm4-mask-audio/\" + i.toString() + j.toString() + \".wav\");\n                audio1.volume = 0;\n                audio2.volume = 0;\n                try {\n                    await audio1.play();\n                    await audio2.play();\n                    await audio1.pause();\n                    await audio2.pause();\n                } catch (e) { console.log(e, \"for\", i, j) }\n            }\n        }\n\n        this.setState({ loading: false });\n        this.playAudio();\n    }\n\n    startTimer = () => {\n        this.setState({ time: new Date().getTime() });\n    };\n    stopTimer = () => {\n        this.setState({ time: new Date().getTime() - this.state.time });\n    };\n    resetTimer = () => {\n        this.setState({ time: 0, alert: false, once: false });\n    };\n\n    getTargetAndMask = () => {\n        const {  questions } = this.state;\n        const color = Math.ceil(Math.random() * 4).toString();\n        const number = Math.ceil(Math.random() * 8).toString();\n        const colorMask = Math.ceil(Math.random() * 4).toString();\n        const numberMask = Math.ceil(Math.random() * 8).toString();\n        const question = color + number;\n        const questionMask = colorMask + numberMask;\n        if (question == questionMask) {\n            return this.getTargetAndMask();\n        }\n        questions.push(question);\n        this.setState({ questions });\n        return { question, questionMask };\n    }\n\n    playAudio = async () => {\n        const {  maskVolume, sourceVolume } = this.state;\n        const { question, questionMask } = this.getTargetAndMask();\n        let sourceAudio = new Audio(process.env.PUBLIC_URL + \"/crm4-source-audio/\" + question + \".wav\");\n        let maskAudio = new Audio(process.env.PUBLIC_URL + \"/crm4-mask-audio/\" + questionMask + \".wav\");\n        sourceAudio.volume = sourceVolume;\n        maskAudio.volume = maskVolume;\n        await sourceAudio.play();\n        await maskAudio.play();\n        setTimeout(() => {\n            maskAudio.pause();\n            this.startTimer();\n            this.setState({ userStart: true });\n        }, sourceAudio.duration * 1000);\n    }\n\n    handleClick = async (num) => {\n        const { questions, index, timer, lastCorrectness, traversals, correct, answers } = this.state;\n        await this.setState({ userStart: false });\n        await this.stopTimer();\n        await timer.push(this.state.time);\n        await this.resetTimer();\n        await this.setState({ timer });\n        answers.push(num);\n        await this.setState({answers});\n        const right = questions[index] === num;\n        let sourceVolume;\n        if (right) {\n            correct.push(true);\n            if (lastCorrectness === null) {\n                this.setState({ lastCorrectness: true })\n            } else if (lastCorrectness === false) {\n                console.log(\"RIGHT, Traversal\", traversals + 1, \"times!\")\n                this.setState({ lastCorrectness: true, traversals: traversals + 1 })\n            }\n            sourceVolume = this.goHarder();\n        } else {\n            correct.push(false);\n            if (lastCorrectness === null) {\n                this.setState({ lastCorrectness: false })\n            } else if (lastCorrectness === true) {\n                console.log(\"WRONG, Traversal\", traversals + 1, \"times!\")\n                this.setState({ lastCorrectness: false, traversals: traversals + 1 })\n            }\n            sourceVolume = this.goEasier();\n        }\n        await this.setState({ index: index + 1, sourceVolume, correct });\n        if (this.state.traversals >= this.props.reversals) {\n            const { dbs } = this.state;\n            let sum = 0;\n            if (dbs.length >= 10) {\n                for (let i = dbs.length - 10; i < dbs.length; i++) {\n                    sum += dbs[i];\n                }\n            } else {\n                for (let i = 0; i < dbs.length; i++) {\n                    sum += dbs[i];\n                }\n            }\n            const SNR = Number(sum / 10).toFixed(2);\n            this.props.handleClick(SNR, timer, dbs, this.state.questions, this.state.answers, correct);\n        } else {\n            setTimeout(() => {\n                this.playAudio();\n            }, 2000)\n        }\n    }\n\n    goEasier = () => {\n        const { sourceVolume, index, dbs } = this.state;\n        dbs.push(dbs[index] + 3);\n        this.setState({ dbs });\n        if (sourceVolume * 10 ** (3 / 20) > 1) {\n            return 1;\n        } else {\n            return sourceVolume * 10 ** (3 / 20);\n        }\n    };\n\n    goHarder = () => {\n        const { sourceVolume, index, dbs } = this.state;\n        dbs.push(dbs[index] - 1);\n        this.setState({ dbs });\n        return sourceVolume * 10 ** (-1 / 20);\n    };\n\n    handleCloseAlert = (event, reason) => {\n        if (reason === \"clickaway\") return;\n        this.setState({ alert: false });\n    };\n\n    handlePause = () => {\n        this.setState({ pause: true });\n        if (this.state.userStart) {\n            this.stopTimer();\n        }\n    }\n\n    handleResume = () => {\n        this.setState({ pause: false });\n        if (this.state.userStart) {\n            this.setState({ time: new Date().getTime() - this.state.time });\n        }\n    }\n\n    render() {\n        const { traversals, loading, userStart, pause } = this.state;\n        const { reversals } = this.props;\n        return (\n            <div>\n                {\n                    loading\n                        ?\n                        <div>\n                            <CircularProgress />\n                        </div>\n                        :\n                        <div>\n                            <div id=\"buttons\" style={{ position: \"fixed\", height: \"80%\", width: \"100%\", backgroundColor: \"#C2CAD0\" }}>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"11\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"12\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"13\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"14\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"15\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"16\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"17\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"18\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"21\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"22\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"23\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"24\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"25\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"26\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"27\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"28\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"31\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"32\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"33\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"34\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"35\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"36\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"37\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"38\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"41\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"42\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"43\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"44\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"45\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"46\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"47\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"48\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                            </div>\n                            <div id=\"progress\" className=\"row\" style={{ position: \"fixed\", left: \"5%\", right: \"5%\", bottom: 10 }}>\n                                <h5>Progress⠀</h5>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 0 ? traversals >= 0 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 1 ? traversals >= 1 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 2 ? traversals >= 2 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 3 ? traversals >= 3 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 4 ? traversals >= 4 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 5 ? traversals >= 5 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 6 ? traversals >= 6 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 7 ? traversals >= 7 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 8 ? traversals >= 8 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 9 ? traversals >= 9 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 10 ? traversals >= 10 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 11 ? traversals >= 11 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 12 ? traversals >= 12 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 13 ? traversals >= 13 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 14 ? traversals >= 14 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 15 ? traversals >= 15 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 16 ? traversals >= 16 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 17 ? traversals >= 17 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 18 ? traversals >= 18 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 19 ? traversals >= 19 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 20 ? traversals >= 20 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 21 ? traversals >= 21 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 22 ? traversals >= 22 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 23 ? traversals >= 23 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 24 ? traversals >= 24 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <h5> {this.props.block + 1}/4 Block</h5>\n                                {\n                                    userStart ?\n                                        pause ?\n                                            <Button style={{ marginLeft: 10 }} color=\"secondary\" variant=\"outlined\" onClick={this.handleResume}>Resume</Button>\n                                            :\n                                            <Button style={{ marginLeft: 10 }} color=\"primary\" variant=\"outlined\" onClick={this.handlePause}>Pause</Button>\n                                        :\n                                        <Button style={{ marginLeft: 10 }} disabled variant=\"outlined\" >Pause</Button>\n                                }\n                                <p>The blue dots on the progress bar may not advance with each trial. This is normal. Please do not adjust your computer volume during the test.</p>\n                            </div>\n                        </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default TestMain;","/Users/kaysong/Documents/hearing_test_frontend/src/assets/digits/question2-table.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/assets/digits/user-data-table.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/assets/digits/question-table.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/mid-page.jsx",["427"],"/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/source1.jsx",["428"],"import React from \"react\";\nimport { CircularProgress, Avatar, Button } from \"@material-ui/core\";\n\nclass TestMain extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            maskVolume: this.props.volume,\n            sourceVolume: this.props.volume,\n            questions: [],\n            index: 0,\n            dbs: [0],\n            time: 0,\n            timer: [],\n            correct: [],\n            answers: [],\n            userStart: false,\n            alert: false,\n            once: false,\n            traversals: 0,\n            lastCorrectness: null,\n            pause: false\n        }\n    }\n\n    componentDidMount = async () => {\n        for (var i = 1; i < 5; i++) {\n            for (var j = 1; j < 9; j++) {\n                const audio1 = new Audio(process.env.PUBLIC_URL + \"/crm4-source-audio/\" + i.toString() + j.toString() + \".wav\");\n                const audio2 = new Audio(process.env.PUBLIC_URL + \"/crm4-mask-audio/\" + i.toString() + j.toString() + \".wav\");\n                audio1.volume = 0;\n                audio2.volume = 0;\n                try {\n                    await audio1.play();\n                    await audio2.play();\n                    await audio1.pause();\n                    await audio2.pause();\n                } catch (e) { console.log(e, \"for\", i, j) }\n            }\n        }\n\n        this.setState({ loading: false });\n        this.playAudio();\n    }\n\n    startTimer = () => {\n        this.setState({ time: new Date().getTime() });\n    };\n    stopTimer = () => {\n        this.setState({ time: new Date().getTime() - this.state.time });\n    };\n    resetTimer = () => {\n        this.setState({ time: 0, alert: false });\n    };\n\n    getTargetAndMask = () => {\n        const {  questions } = this.state;\n        const color = Math.ceil(Math.random() * 4).toString();\n        const number = Math.ceil(Math.random() * 8).toString();\n        const colorMask = Math.ceil(Math.random() * 4).toString();\n        const numberMask = Math.ceil(Math.random() * 8).toString();\n        const question = color + number;\n        const questionMask = colorMask + numberMask;\n        if (question == questionMask) {\n            return this.getTargetAndMask();\n        }\n        questions.push(question);\n        this.setState({ questions });\n        return { question, questionMask };\n    }\n\n    playAudio = async () => {\n        const { maskVolume, sourceVolume } = this.state;\n        const { question, questionMask } = this.getTargetAndMask();\n        let sourceAudio = new Audio(process.env.PUBLIC_URL + \"/crm4-source-audio/\" + question + \".wav\");\n        let maskAudio = new Audio(process.env.PUBLIC_URL + \"/crm4-mask-audio/\" + questionMask + \".wav\");\n        sourceAudio.volume = sourceVolume;\n        maskAudio.volume = maskVolume;\n        await sourceAudio.play();\n        await maskAudio.play();\n        setTimeout(() => {\n            maskAudio.pause();\n            this.startTimer();\n            this.setState({ userStart: true });\n        }, sourceAudio.duration * 1000);\n    }\n\n    handleClick = async (num) => {\n        const { questions, index, timer, lastCorrectness, traversals, correct, answers } = this.state;\n        await this.setState({ userStart: false });\n        await this.stopTimer();\n        await timer.push(this.state.time);\n        await this.resetTimer();\n        await this.setState({ timer });\n        answers.push(num);\n        await this.setState({answers});\n        const right = questions[index] === num;\n        let sourceVolume;\n        if (right) {\n            correct.push(true);\n            if (lastCorrectness === null) {\n                this.setState({ lastCorrectness: true })\n            } else if (lastCorrectness === false) {\n                console.log(\"RIGHT, Traversal\", traversals + 1, \"times!\")\n                this.setState({ lastCorrectness: true, traversals: traversals + 1 })\n            }\n            sourceVolume = this.goHarder();\n        } else {\n            correct.push(false);\n            if (lastCorrectness === null) {\n                this.setState({ lastCorrectness: false })\n            } else if (lastCorrectness === true) {\n                console.log(\"WRONG, Traversal\", traversals + 1, \"times!\")\n                this.setState({ lastCorrectness: false, traversals: traversals + 1 })\n            }\n            sourceVolume = this.goEasier();\n        }\n        await this.setState({ index: index + 1, sourceVolume, correct });\n        if (this.state.traversals >= this.props.reversals) {\n            const { dbs } = this.state;\n            let sum = 0;\n            if (dbs.length >= 10) {\n                for (let i = dbs.length - 10; i < dbs.length; i++) {\n                    sum += dbs[i];\n                }\n            } else {\n                for (let i = 0; i < dbs.length; i++) {\n                    sum += dbs[i];\n                }\n            }\n            const SNR = Number(sum / 10).toFixed(2);\n            this.props.handleClick(SNR, timer, dbs, this.state.questions, this.state.answers, correct);\n        } else {\n            setTimeout(() => {\n                this.playAudio();\n            }, 2000)\n        }\n    }\n\n    goEasier = () => {\n        const { sourceVolume, index, dbs } = this.state;\n        dbs.push(dbs[index] + 3);\n        this.setState({ dbs });\n        if (sourceVolume * 10 ** (3 / 20) > 1) {\n            return 1;\n        } else {\n            return sourceVolume * 10 ** (3 / 20);\n        }\n    };\n\n    goHarder = () => {\n        const { sourceVolume, index, dbs } = this.state;\n        dbs.push(dbs[index] - 1);\n        this.setState({ dbs });\n        return sourceVolume * 10 ** (-1 / 20);\n    };\n\n    handleCloseAlert = (event, reason) => {\n        if (reason === \"clickaway\") return;\n        this.setState({ alert: false });\n    };\n\n    handlePause = () => {\n        this.setState({ pause: true });\n        if (this.state.userStart) {\n            this.stopTimer();\n        }\n    }\n\n    handleResume = () => {\n        this.setState({ pause: false });\n        if (this.state.userStart) {\n            this.setState({ time: new Date().getTime() - this.state.time });\n        }\n    }\n\n    render() {\n        const { traversals, loading, userStart, pause } = this.state;\n        const { reversals } = this.props;\n        return (\n            <div>\n                {\n                    loading\n                        ?\n                        <div>\n                            <CircularProgress />\n                        </div>\n                        :\n                        <div>\n                            <div id=\"buttons\" style={{ position: \"fixed\", height: \"80%\", width: \"100%\", backgroundColor: \"#C2CAD0\" }}>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"11\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"12\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"13\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"14\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"15\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"16\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"17\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"18\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"21\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"22\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"23\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"24\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"25\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"26\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"27\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"28\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"31\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"32\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"33\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"34\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"35\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"36\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"37\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"38\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"41\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"42\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"43\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"44\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"45\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"46\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"47\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"48\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                            </div>\n                            <div id=\"progress\" className=\"row\" style={{ position: \"fixed\", left: \"5%\", right: \"5%\", bottom: 10 }}>\n                                <h5>Progress⠀</h5>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 0 ? traversals >= 0 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 1 ? traversals >= 1 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 2 ? traversals >= 2 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 3 ? traversals >= 3 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 4 ? traversals >= 4 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 5 ? traversals >= 5 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 6 ? traversals >= 6 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 7 ? traversals >= 7 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 8 ? traversals >= 8 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 9 ? traversals >= 9 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 10 ? traversals >= 10 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 11 ? traversals >= 11 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 12 ? traversals >= 12 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 13 ? traversals >= 13 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 14 ? traversals >= 14 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 15 ? traversals >= 15 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 16 ? traversals >= 16 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 17 ? traversals >= 17 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 18 ? traversals >= 18 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 19 ? traversals >= 19 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 20 ? traversals >= 20 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 21 ? traversals >= 21 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 22 ? traversals >= 22 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 23 ? traversals >= 23 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 24 ? traversals >= 24 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <h5> {this.props.block + 1}/4 Block</h5>\n                                {\n                                    userStart ?\n                                        pause ?\n                                            <Button style={{ marginLeft: 10 }} color=\"secondary\" variant=\"outlined\" onClick={this.handleResume}>Resume</Button>\n                                            :\n                                            <Button style={{ marginLeft: 10 }} color=\"primary\" variant=\"outlined\" onClick={this.handlePause}>Pause</Button>\n                                        :\n                                        <Button style={{ marginLeft: 10 }} disabled variant=\"outlined\" >Pause</Button>\n                                }\n                                <p>The blue dots on the progress bar may not advance with each trial. This is normal. Please do not adjust your computer volume during the test.</p>\n                            </div>\n                        </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default TestMain;","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/audioloss1.jsx",["429"],"import React from \"react\";\nimport { CircularProgress, Avatar, Button } from \"@material-ui/core\";\n\nclass TestMain extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            maskVolume: this.props.volume,\n            sourceVolume: this.props.volume,\n            questions: [],\n            index: 0,\n            dbs: [0],\n            time: 0,\n            timer: [],\n            correct: [],\n            answers: [],\n            userStart: false,\n            alert: false,\n            once: false,\n            traversals: 0,\n            lastCorrectness: null,\n            pause: false\n        }\n    }\n\n    componentDidMount = async () => {\n        for (var i = 1; i < 5; i++) {\n            for (var j = 1; j < 9; j++) {\n                const audio1 = new Audio(process.env.PUBLIC_URL + \"/crm4-loss-audio/\" + i.toString() + j.toString() + \".wav\");\n                const audio2 = new Audio(process.env.PUBLIC_URL + \"/crm4-mask-audio/\" + i.toString() + j.toString() + \".wav\");\n                audio1.volume = 0;\n                audio2.volume = 0;\n                try {\n                    await audio1.play();\n                    await audio2.play();\n                    await audio1.pause();\n                    await audio2.pause();\n                } catch (e) { console.log(e, \"for\", i, j) }\n            }\n        }\n        this.setState({ loading: false });\n        this.playAudio();\n    }\n\n    startTimer = () => {\n        this.setState({ time: new Date().getTime() });\n    };\n    stopTimer = () => {\n        this.setState({ time: new Date().getTime() - this.state.time });\n    };\n    resetTimer = () => {\n        this.setState({ time: 0, alert: false });\n    };\n\n    getTargetAndMask = () => {\n        const {  questions } = this.state;\n        const color = Math.ceil(Math.random() * 4).toString();\n        const number = Math.ceil(Math.random() * 8).toString();\n        const colorMask = Math.ceil(Math.random() * 4).toString();\n        const numberMask = Math.ceil(Math.random() * 8).toString();\n        const question = color + number;\n        const questionMask = colorMask + numberMask;\n        if (question == questionMask) {\n            return this.getTargetAndMask();\n        }\n        questions.push(question);\n        this.setState({ questions });\n        return { question, questionMask };\n    }\n\n    playAudio = async () => {\n        const { maskVolume, sourceVolume } = this.state;\n        const { question, questionMask } = this.getTargetAndMask();\n        let sourceAudio = new Audio(process.env.PUBLIC_URL + \"/crm4-loss-audio/\" + question + \".wav\");\n        let maskAudio = new Audio(process.env.PUBLIC_URL + \"/crm4-mask-audio/\" + questionMask + \".wav\");\n        sourceAudio.volume = sourceVolume;\n        maskAudio.volume = maskVolume;\n        await sourceAudio.play();\n        await maskAudio.play();\n        setTimeout(() => {\n            maskAudio.pause();\n            this.startTimer();\n            this.setState({ userStart: true });\n        }, sourceAudio.duration * 1000);\n    }\n\n    handleClick = async (num) => {\n        const { questions, index, timer, lastCorrectness, traversals, correct, answers } = this.state;\n        await this.setState({ userStart: false });\n        await this.stopTimer();\n        await timer.push(this.state.time);\n        await this.resetTimer();\n        await this.setState({ timer });\n        answers.push(num);\n        await this.setState({ answers });\n        const right = questions[index] === num;\n        let sourceVolume;\n        if (right) {\n            correct.push(true);\n            if (lastCorrectness === null) {\n                this.setState({ lastCorrectness: true })\n            } else if (lastCorrectness === false) {\n                console.log(\"RIGHT, Traversal\", traversals + 1, \"times!\")\n                this.setState({ lastCorrectness: true, traversals: traversals + 1 })\n            }\n            sourceVolume = this.goHarder();\n        } else {\n            correct.push(false);\n            if (lastCorrectness === null) {\n                this.setState({ lastCorrectness: false })\n            } else if (lastCorrectness === true) {\n                console.log(\"WRONG, Traversal\", traversals + 1, \"times!\")\n                this.setState({ lastCorrectness: false, traversals: traversals + 1 })\n            }\n            sourceVolume = this.goEasier();\n        }\n        await this.setState({ index: index + 1, sourceVolume, correct });\n        if (this.state.traversals >= this.props.reversals) {\n            const { dbs } = this.state;\n            let sum = 0;\n            if (dbs.length >= 10) {\n                for (let i = dbs.length - 10; i < dbs.length; i++) {\n                    sum += dbs[i];\n                }\n            } else {\n                for (let i = 0; i < dbs.length; i++) {\n                    sum += dbs[i];\n                }\n            }\n            const SNR = Number(sum / 10).toFixed(2);\n            this.props.handleClick(SNR, timer, dbs, this.state.questions, this.state.answers, correct);\n        } else {\n            setTimeout(() => {\n                this.playAudio();\n            }, 2000)\n        }\n    }\n\n    goEasier = () => {\n        const { sourceVolume, index, dbs } = this.state;\n        dbs.push(dbs[index] + 3);\n        this.setState({ dbs });\n        if (sourceVolume * 10 ** (3 / 20) > 1) {\n            return 1;\n        } else {\n            return sourceVolume * 10 ** (3 / 20);\n        }\n    };\n\n    goHarder = () => {\n        const { sourceVolume, index, dbs } = this.state;\n        dbs.push(dbs[index] - 1);\n        this.setState({ dbs });\n        return sourceVolume * 10 ** (-1 / 20);\n    };\n\n    handleCloseAlert = (event, reason) => {\n        if (reason === \"clickaway\") return;\n        this.setState({ alert: false });\n    };\n\n    handlePause = () => {\n        this.setState({ pause: true });\n        if (this.state.userStart) {\n            this.stopTimer();\n        }\n    }\n\n    handleResume = () => {\n        this.setState({ pause: false });\n        if (this.state.userStart) {\n            this.setState({ time: new Date().getTime() - this.state.time });\n        }\n    }\n\n    render() {\n        const { traversals, loading, userStart, pause } = this.state;\n        const { reversals } = this.props;\n        return (\n            <div>\n                {\n                    loading\n                        ?\n                        <div>\n                            <CircularProgress />\n                        </div>\n                        :\n                        <div>\n                            <div id=\"buttons\" style={{ position: \"fixed\", height: \"80%\", width: \"100%\", backgroundColor: \"#C2CAD0\" }}>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"11\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"12\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"13\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"14\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"15\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"16\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"17\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"18\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"21\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"22\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"23\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"24\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"25\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"26\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"27\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"28\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"31\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"32\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"33\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"34\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"35\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"36\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"37\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"38\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"41\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"42\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"43\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"44\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"45\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"46\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"47\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"48\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                            </div>\n                            <div id=\"progress\" className=\"row\" style={{ position: \"fixed\", left: \"5%\", right: \"5%\", bottom: 10 }}>\n                                <h5>Progress⠀</h5>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 0 ? traversals >= 0 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 1 ? traversals >= 1 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 2 ? traversals >= 2 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 3 ? traversals >= 3 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 4 ? traversals >= 4 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 5 ? traversals >= 5 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 6 ? traversals >= 6 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 7 ? traversals >= 7 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 8 ? traversals >= 8 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 9 ? traversals >= 9 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 10 ? traversals >= 10 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 11 ? traversals >= 11 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 12 ? traversals >= 12 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 13 ? traversals >= 13 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 14 ? traversals >= 14 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 15 ? traversals >= 15 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 16 ? traversals >= 16 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 17 ? traversals >= 17 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 18 ? traversals >= 18 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 19 ? traversals >= 19 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 20 ? traversals >= 20 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 21 ? traversals >= 21 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 22 ? traversals >= 22 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 23 ? traversals >= 23 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 24 ? traversals >= 24 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <h5> {this.props.block + 1}/4 Block</h5>\n                                {\n                                    userStart ?\n                                        pause ?\n                                            <Button style={{ marginLeft: 10 }} color=\"secondary\" variant=\"outlined\" onClick={this.handleResume}>Resume</Button>\n                                            :\n                                            <Button style={{ marginLeft: 10 }} color=\"primary\" variant=\"outlined\" onClick={this.handlePause}>Pause</Button>\n                                        :\n                                        <Button style={{ marginLeft: 10 }} disabled variant=\"outlined\" >Pause</Button>\n                                }\n                                <p>The blue dots on the progress bar may not advance with each trial. This is normal. Please do not adjust your computer volume during the test.</p>\n                            </div>\n                        </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default TestMain;","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/audioloss2.jsx",["430"],"import React from \"react\";\nimport { CircularProgress, Avatar, Button } from \"@material-ui/core\";\n\nclass TestMain extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            maskVolume: this.props.volume,\n            sourceVolume: this.props.volume,\n            questions: [],\n            index: 0,\n            dbs: [0],\n            time: 0,\n            timer: [],\n            correct: [],\n            answers: [],\n            userStart: false,\n            alert: false,\n            once: false,\n            traversals: 0,\n            lastCorrectness: null,\n            pause: false\n        }\n    }\n\n    componentDidMount = async () => {\n        for (var i = 1; i < 5; i++) {\n            for (var j = 1; j < 9; j++) {\n                const audio1 = new Audio(process.env.PUBLIC_URL + \"/crm4-loss-audio/\" + i.toString() + j.toString() + \".wav\");\n                const audio2 = new Audio(process.env.PUBLIC_URL + \"/crm4-mask-audio/\" + i.toString() + j.toString() + \".wav\");\n                audio1.volume = 0;\n                audio2.volume = 0;\n                try {\n                    await audio1.play();\n                    await audio2.play();\n                    await audio1.pause();\n                    await audio2.pause();\n                } catch (e) { console.log(e, \"for\", i, j) }\n            }\n        }\n        this.setState({ loading: false });\n        this.playAudio();\n    }\n\n    startTimer = () => {\n        this.setState({ time: new Date().getTime() });\n    };\n    stopTimer = () => {\n        this.setState({ time: new Date().getTime() - this.state.time });\n    };\n    resetTimer = () => {\n        this.setState({ time: 0, alert: false });\n    };\n\n    getTargetAndMask = () => {\n        const {  questions } = this.state;\n        const color = Math.ceil(Math.random() * 4).toString();\n        const number = Math.ceil(Math.random() * 8).toString();\n        const colorMask = Math.ceil(Math.random() * 4).toString();\n        const numberMask = Math.ceil(Math.random() * 8).toString();\n        const question = color + number;\n        const questionMask = colorMask + numberMask;\n        if (question == questionMask) {\n            return this.getTargetAndMask();\n        }\n        questions.push(question);\n        this.setState({ questions });\n        return { question, questionMask };\n    }\n\n    playAudio = async () => {\n        const { maskVolume, sourceVolume } = this.state;\n        const { question, questionMask } = this.getTargetAndMask();\n        let sourceAudio = new Audio(process.env.PUBLIC_URL + \"/crm4-loss-audio/\" + question + \".wav\");\n        let maskAudio = new Audio(process.env.PUBLIC_URL + \"/crm4-mask-audio/\" + questionMask + \".wav\");\n        sourceAudio.volume = sourceVolume;\n        maskAudio.volume = maskVolume;\n        await sourceAudio.play();\n        await maskAudio.play();\n        setTimeout(() => {\n            maskAudio.pause();\n            this.startTimer();\n            this.setState({ userStart: true });\n        }, sourceAudio.duration * 1000);\n    }\n\n    handleClick = async (num) => {\n        const { questions, index, timer, lastCorrectness, traversals, correct, answers } = this.state;\n        await this.setState({ userStart: false });\n        await this.stopTimer();\n        await timer.push(this.state.time);\n        await this.resetTimer();\n        await this.setState({ timer });\n        answers.push(num);\n        await this.setState({answers});\n        const right = questions[index] === num;\n        let sourceVolume;\n        if (right) {\n            correct.push(true);\n            if (lastCorrectness === null) {\n                this.setState({ lastCorrectness: true })\n            } else if (lastCorrectness === false) {\n                console.log(\"RIGHT, Traversal\", traversals + 1, \"times!\")\n                this.setState({ lastCorrectness: true, traversals: traversals + 1 })\n            }\n            sourceVolume = this.goHarder();\n        } else {\n            correct.push(false);\n            if (lastCorrectness === null) {\n                this.setState({ lastCorrectness: false })\n            } else if (lastCorrectness === true) {\n                console.log(\"WRONG, Traversal\", traversals + 1, \"times!\")\n                this.setState({ lastCorrectness: false, traversals: traversals + 1 })\n            }\n            sourceVolume = this.goEasier();\n        }\n        await this.setState({ index: index + 1, sourceVolume, correct });\n        if (this.state.traversals >= this.props.reversals) {\n            const { dbs } = this.state;\n            let sum = 0;\n            if (dbs.length >= 10) {\n                for (let i = dbs.length - 10; i < dbs.length; i++) {\n                    sum += dbs[i];\n                }\n            } else {\n                for (let i = 0; i < dbs.length; i++) {\n                    sum += dbs[i];\n                }\n            }\n            const SNR = Number(sum / 10).toFixed(2);\n            this.props.handleClick(SNR, timer, dbs, this.state.questions, this.state.answers, correct);\n        } else {\n            setTimeout(() => {\n                this.playAudio();\n            }, 2000)\n        }\n    }\n\n    goEasier = () => {\n        const { sourceVolume, index, dbs } = this.state;\n        dbs.push(dbs[index] + 3);\n        this.setState({ dbs });\n        if (sourceVolume * 10 ** (3 / 20) > 1) {\n            return 1;\n        } else {\n            return sourceVolume * 10 ** (3 / 20);\n        }\n    };\n\n    goHarder = () => {\n        const { sourceVolume, index, dbs } = this.state;\n        dbs.push(dbs[index] - 1);\n        this.setState({ dbs });\n        return sourceVolume * 10 ** (-1 / 20);\n    };\n\n    handleCloseAlert = (event, reason) => {\n        if (reason === \"clickaway\") return;\n        this.setState({ alert: false });\n    };\n\n    handlePause = () => {\n        this.setState({ pause: true });\n        if (this.state.userStart) {\n            this.stopTimer();\n        }\n    }\n\n    handleResume = () => {\n        this.setState({ pause: false });\n        if (this.state.userStart) {\n            this.setState({ time: new Date().getTime() - this.state.time });\n        }\n    }\n\n    render() {\n        const { traversals, loading, userStart, pause } = this.state;\n        const { reversals } = this.props;\n        \n        return (\n            <div>\n                {\n                    loading\n                        ?\n                        <div>\n                            <CircularProgress />\n                        </div>\n                        :\n                        <div>\n                            <div id=\"buttons\" style={{ position: \"fixed\", height: \"80%\", width: \"100%\", backgroundColor: \"#C2CAD0\" }}>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"11\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"12\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"13\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"14\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"15\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"16\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"17\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"18\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"red\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"21\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"22\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"23\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"24\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"25\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"26\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"27\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"28\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"green\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"31\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"32\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"33\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"34\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"35\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"36\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"37\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"38\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"blue\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                                <div className=\"row\" style={{ height: \"25%\" }}>\n                                    <button disabled={!userStart || pause} value=\"41\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>1</button>\n                                    <button disabled={!userStart || pause} value=\"42\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>2</button>\n                                    <button disabled={!userStart || pause} value=\"43\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>3</button>\n                                    <button disabled={!userStart || pause} value=\"44\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>4</button>\n                                    <button disabled={!userStart || pause} value=\"45\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>5</button>\n                                    <button disabled={!userStart || pause} value=\"46\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>6</button>\n                                    <button disabled={!userStart || pause} value=\"47\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>7</button>\n                                    <button disabled={!userStart || pause} value=\"48\" onClick={(e) => this.handleClick(e.target.value)} style={{ color: \"white\", border: \"none\", background: \"none\", width: \"12.5%\", fontSize: 80 }}>8</button>\n                                </div>\n                            </div>\n                            <div id=\"progress\" className=\"row\" style={{ position: \"fixed\", left: \"5%\", right: \"5%\", bottom: 10 }}>\n                                <h5>Progress⠀</h5>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 0 ? traversals >= 0 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 1 ? traversals >= 1 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 2 ? traversals >= 2 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 3 ? traversals >= 3 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 4 ? traversals >= 4 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 5 ? traversals >= 5 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 6 ? traversals >= 6 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 7 ? traversals >= 7 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 8 ? traversals >= 8 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 9 ? traversals >= 9 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 10 ? traversals >= 10 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 11 ? traversals >= 11 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 12 ? traversals >= 12 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 13 ? traversals >= 13 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 14 ? traversals >= 14 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 15 ? traversals >= 15 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 16 ? traversals >= 16 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 17 ? traversals >= 17 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 18 ? traversals >= 18 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 19 ? traversals >= 19 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 20 ? traversals >= 20 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 21 ? traversals >= 21 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 22 ? traversals >= 22 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 23 ? traversals >= 23 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <Avatar style={{ width: 20, height: 20, backgroundColor: reversals > 24 ? traversals >= 24 ? \"blue\" : \"black\" : \"white\" }}>⠀</Avatar>\n                                <h5> {this.props.block + 1}/4 Block</h5>\n                                {\n                                    userStart ?\n                                        pause ?\n                                            <Button style={{ marginLeft: 10 }} color=\"secondary\" variant=\"outlined\" onClick={this.handleResume}>Resume</Button>\n                                            :\n                                            <Button style={{ marginLeft: 10 }} color=\"primary\" variant=\"outlined\" onClick={this.handlePause}>Pause</Button>\n                                        :\n                                        <Button style={{ marginLeft: 10 }} disabled variant=\"outlined\" >Pause</Button>\n                                }\n                                <p>The blue dots on the progress bar may not advance with each trial. This is normal. Please do not adjust your computer volume during the test.</p>\n                            </div>\n                        </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default TestMain;","/Users/kaysong/Documents/hearing_test_frontend/src/components/crm4/test.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/partials/footer.jsx",["431","432","433"],"import React from \"react\";\n\nfunction Footer() {\n  return <div style={{\n    display: 'block',\n    padding: '2px',\n    height: '10%',\n    width: '100%',\n  }}>\n    <div className=\"row\" style={{\n      padding: 20,\n      position: \"fixed\",\n      left: 0,\n      bottom: 0,\n      right: 0\n    }}>\n      <div className=\"col-5\">\n        <img style={{  width: \"100%\", marginLeft: \"5px\", marginTop: \"10%\" }} src={process.env.PUBLIC_URL + \"/pictures/rehab.png\"} />\n      </div>\n      <div className=\"col-3\">\n      <img style={{ width: \"100%\", marginLeft: \"20%\" }} src={process.env.PUBLIC_URL + \"/pictures/covenant.png\"} />\n      </div>\n      <div className=\"col-1\"></div>\n      <div className=\"col-3\">\n        <img style={{ width: \"80%\", marginRight: \"10px\", marginTop: \"10%\"  }} src={process.env.PUBLIC_URL + \"/pictures/irsm.png\"} />\n      </div>\n    </div>\n  </div>\n}\n\nexport default Footer;","/Users/kaysong/Documents/hearing_test_frontend/src/assets/digits/volume-slider.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/assets/digits/score-slider.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/assets/digits/count-down.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/assets/signal-loss/pdf-reviewer.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/assets/signal-loss/volume-slider.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/pages/questionnaire/main.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/pages/questionnaire/database.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/pages/questionnaire/aphab-b.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/pages/questionnaire/aphab-a.jsx",[],"/Users/kaysong/Documents/hearing_test_frontend/src/components/questionnaire/aphab-a/example-table.jsx",["434"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n    backgroundColor: \"#e9ecef\"\n  },\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nexport default function DenseTable() {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell></TableCell>\n            <TableCell align=\"center\"><b>Without</b><br/>Hearing Aids</TableCell>\n            <TableCell align=\"center\"><b>With</b><br/>Hearing Aids</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableRow key=\"row1\">\n            <TableCell align=\"left\">(a)</TableCell>\n            <TableCell align=\"left\">When I’m talking with a friend outdoors on a windy day, I miss a lot of the conversation.</TableCell>\n            <TableCell align=\"left\">A B C D E F G</TableCell>\n            <TableCell align=\"left\">A B C D E F G</TableCell>\n          </TableRow>\n          <TableRow key=\"row2\">\n            <TableCell align=\"left\">(b)</TableCell>\n            <TableCell align=\"left\">When I am in a meeting with several other people, I can comprehend speech.</TableCell>\n            <TableCell align=\"left\">A B C D E F G</TableCell>\n            <TableCell align=\"left\">A B C D E F G</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","/Users/kaysong/Documents/hearing_test_frontend/src/components/questionnaire/aphab-a/question-table.jsx",["435"],"/Users/kaysong/Documents/hearing_test_frontend/src/components/questionnaire/aphab-a/fill-in-form-table.jsx",["436"],{"ruleId":"437","severity":1,"message":"438","line":1,"column":1,"nodeType":"439","messageId":"440","endLine":1,"endColumn":13,"fix":"441"},{"ruleId":"442","replacedBy":"443"},{"ruleId":"444","replacedBy":"445"},{"ruleId":"446","severity":1,"message":"447","line":28,"column":5,"nodeType":"448","endLine":28,"endColumn":21},{"ruleId":"449","severity":1,"message":"450","line":33,"column":23,"nodeType":"451","messageId":"452","endLine":33,"endColumn":25},{"ruleId":"453","severity":1,"message":"454","line":41,"column":7,"nodeType":"455","messageId":"456","endLine":54,"endColumn":8},{"ruleId":"449","severity":1,"message":"450","line":64,"column":23,"nodeType":"451","messageId":"452","endLine":64,"endColumn":25},{"ruleId":"449","severity":1,"message":"450","line":70,"column":49,"nodeType":"451","messageId":"452","endLine":70,"endColumn":51},{"ruleId":"449","severity":1,"message":"450","line":76,"column":51,"nodeType":"451","messageId":"452","endLine":76,"endColumn":53},{"ruleId":"449","severity":1,"message":"450","line":82,"column":51,"nodeType":"451","messageId":"452","endLine":82,"endColumn":53},{"ruleId":"449","severity":1,"message":"450","line":88,"column":51,"nodeType":"451","messageId":"452","endLine":88,"endColumn":53},{"ruleId":"449","severity":1,"message":"450","line":94,"column":51,"nodeType":"451","messageId":"452","endLine":94,"endColumn":53},{"ruleId":"449","severity":1,"message":"450","line":152,"column":23,"nodeType":"451","messageId":"452","endLine":152,"endColumn":25},{"ruleId":"449","severity":1,"message":"450","line":33,"column":23,"nodeType":"451","messageId":"452","endLine":33,"endColumn":25},{"ruleId":"453","severity":1,"message":"454","line":41,"column":7,"nodeType":"455","messageId":"456","endLine":54,"endColumn":8},{"ruleId":"449","severity":1,"message":"450","line":64,"column":23,"nodeType":"451","messageId":"452","endLine":64,"endColumn":25},{"ruleId":"449","severity":1,"message":"450","line":70,"column":49,"nodeType":"451","messageId":"452","endLine":70,"endColumn":51},{"ruleId":"449","severity":1,"message":"450","line":76,"column":51,"nodeType":"451","messageId":"452","endLine":76,"endColumn":53},{"ruleId":"449","severity":1,"message":"450","line":82,"column":51,"nodeType":"451","messageId":"452","endLine":82,"endColumn":53},{"ruleId":"449","severity":1,"message":"450","line":88,"column":51,"nodeType":"451","messageId":"452","endLine":88,"endColumn":53},{"ruleId":"449","severity":1,"message":"450","line":94,"column":51,"nodeType":"451","messageId":"452","endLine":94,"endColumn":53},{"ruleId":"449","severity":1,"message":"450","line":152,"column":23,"nodeType":"451","messageId":"452","endLine":152,"endColumn":25},{"ruleId":"449","severity":1,"message":"450","line":33,"column":23,"nodeType":"451","messageId":"452","endLine":33,"endColumn":25},{"ruleId":"453","severity":1,"message":"454","line":41,"column":7,"nodeType":"455","messageId":"456","endLine":54,"endColumn":8},{"ruleId":"449","severity":1,"message":"450","line":64,"column":23,"nodeType":"451","messageId":"452","endLine":64,"endColumn":25},{"ruleId":"449","severity":1,"message":"450","line":70,"column":49,"nodeType":"451","messageId":"452","endLine":70,"endColumn":51},{"ruleId":"449","severity":1,"message":"450","line":76,"column":51,"nodeType":"451","messageId":"452","endLine":76,"endColumn":53},{"ruleId":"449","severity":1,"message":"450","line":82,"column":51,"nodeType":"451","messageId":"452","endLine":82,"endColumn":53},{"ruleId":"449","severity":1,"message":"450","line":88,"column":51,"nodeType":"451","messageId":"452","endLine":88,"endColumn":53},{"ruleId":"449","severity":1,"message":"450","line":94,"column":51,"nodeType":"451","messageId":"452","endLine":94,"endColumn":53},{"ruleId":"449","severity":1,"message":"450","line":152,"column":23,"nodeType":"451","messageId":"452","endLine":152,"endColumn":25},{"ruleId":"449","severity":1,"message":"450","line":33,"column":23,"nodeType":"451","messageId":"452","endLine":33,"endColumn":25},{"ruleId":"453","severity":1,"message":"454","line":41,"column":7,"nodeType":"455","messageId":"456","endLine":54,"endColumn":8},{"ruleId":"449","severity":1,"message":"450","line":64,"column":23,"nodeType":"451","messageId":"452","endLine":64,"endColumn":25},{"ruleId":"449","severity":1,"message":"450","line":70,"column":49,"nodeType":"451","messageId":"452","endLine":70,"endColumn":51},{"ruleId":"449","severity":1,"message":"450","line":76,"column":51,"nodeType":"451","messageId":"452","endLine":76,"endColumn":53},{"ruleId":"449","severity":1,"message":"450","line":82,"column":51,"nodeType":"451","messageId":"452","endLine":82,"endColumn":53},{"ruleId":"449","severity":1,"message":"450","line":88,"column":51,"nodeType":"451","messageId":"452","endLine":88,"endColumn":53},{"ruleId":"449","severity":1,"message":"450","line":94,"column":51,"nodeType":"451","messageId":"452","endLine":94,"endColumn":53},{"ruleId":"449","severity":1,"message":"450","line":152,"column":23,"nodeType":"451","messageId":"452","endLine":152,"endColumn":25},{"ruleId":"457","severity":1,"message":"458","line":30,"column":19,"nodeType":"459","messageId":"460","endLine":30,"endColumn":22},{"ruleId":"461","severity":1,"message":"462","line":4,"column":1,"nodeType":"463","endLine":33,"endColumn":3},{"ruleId":"461","severity":1,"message":"462","line":5,"column":1,"nodeType":"463","endLine":20,"endColumn":3},{"ruleId":"464","severity":1,"message":"465","line":39,"column":26,"nodeType":"466","messageId":"467","endLine":39,"endColumn":27,"suggestions":"468"},{"ruleId":"464","severity":1,"message":"465","line":39,"column":51,"nodeType":"466","messageId":"467","endLine":39,"endColumn":52,"suggestions":"469"},{"ruleId":"461","severity":1,"message":"462","line":4,"column":1,"nodeType":"463","endLine":40,"endColumn":3},{"ruleId":"470","severity":1,"message":"471","line":82,"column":13,"nodeType":"472","messageId":"473","endLine":82,"endColumn":22},{"ruleId":"457","severity":1,"message":"474","line":70,"column":7,"nodeType":"459","messageId":"460","endLine":70,"endColumn":15},{"ruleId":"457","severity":1,"message":"475","line":73,"column":7,"nodeType":"459","messageId":"460","endLine":73,"endColumn":17},{"ruleId":"461","severity":1,"message":"462","line":4,"column":1,"nodeType":"463","endLine":16,"endColumn":2},{"ruleId":"457","severity":1,"message":"476","line":5,"column":3,"nodeType":"459","messageId":"460","endLine":5,"endColumn":19},{"ruleId":"457","severity":1,"message":"477","line":211,"column":37,"nodeType":"459","messageId":"460","endLine":211,"endColumn":42},{"ruleId":"461","severity":1,"message":"462","line":5,"column":1,"nodeType":"463","endLine":20,"endColumn":3},{"ruleId":"478","severity":1,"message":"479","line":84,"column":19,"nodeType":"480","endLine":84,"endColumn":127},{"ruleId":"457","severity":1,"message":"481","line":2,"column":29,"nodeType":"459","messageId":"460","endLine":2,"endColumn":38},{"ruleId":"457","severity":1,"message":"482","line":2,"column":40,"nodeType":"459","messageId":"460","endLine":2,"endColumn":50},{"ruleId":"461","severity":1,"message":"462","line":4,"column":1,"nodeType":"463","endLine":23,"endColumn":3},{"ruleId":"461","severity":1,"message":"462","line":4,"column":1,"nodeType":"463","endLine":16,"endColumn":2},{"ruleId":"483","severity":1,"message":"484","line":64,"column":22,"nodeType":"485","messageId":"473","endLine":64,"endColumn":24},{"ruleId":"483","severity":1,"message":"484","line":65,"column":22,"nodeType":"485","messageId":"473","endLine":65,"endColumn":24},{"ruleId":"483","severity":1,"message":"484","line":65,"column":22,"nodeType":"485","messageId":"473","endLine":65,"endColumn":24},{"ruleId":"483","severity":1,"message":"484","line":64,"column":22,"nodeType":"485","messageId":"473","endLine":64,"endColumn":24},{"ruleId":"461","severity":1,"message":"462","line":4,"column":1,"nodeType":"463","endLine":16,"endColumn":2},{"ruleId":"483","severity":1,"message":"484","line":65,"column":22,"nodeType":"485","messageId":"473","endLine":65,"endColumn":24},{"ruleId":"461","severity":1,"message":"462","line":4,"column":1,"nodeType":"463","endLine":16,"endColumn":2},{"ruleId":"483","severity":1,"message":"484","line":65,"column":22,"nodeType":"485","messageId":"473","endLine":65,"endColumn":24},{"ruleId":"483","severity":1,"message":"484","line":64,"column":22,"nodeType":"485","messageId":"473","endLine":64,"endColumn":24},{"ruleId":"483","severity":1,"message":"484","line":64,"column":22,"nodeType":"485","messageId":"473","endLine":64,"endColumn":24},{"ruleId":"486","severity":1,"message":"487","line":18,"column":9,"nodeType":"480","endLine":18,"endColumn":133},{"ruleId":"486","severity":1,"message":"487","line":21,"column":7,"nodeType":"480","endLine":21,"endColumn":115},{"ruleId":"486","severity":1,"message":"487","line":25,"column":9,"nodeType":"480","endLine":25,"endColumn":133},{"ruleId":"457","severity":1,"message":"488","line":22,"column":7,"nodeType":"459","messageId":"460","endLine":22,"endColumn":11},{"ruleId":"457","severity":1,"message":"488","line":24,"column":7,"nodeType":"459","messageId":"460","endLine":24,"endColumn":11},{"ruleId":"457","severity":1,"message":"489","line":10,"column":8,"nodeType":"459","messageId":"460","endLine":10,"endColumn":17},"strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"490","text":"491"},"no-native-reassign",["492"],"no-negated-in-lhs",["493"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'one' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["494","495"],["496","497"],"no-dupe-keys","Duplicate key 'marginTop'.","ObjectExpression","unexpected","'answers2' is assigned a value but never used.","'questions2' is assigned a value but never used.","'CircularProgress' is defined but never used.","'stage' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'TextField' is defined but never used.","'InputLabel' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'rows' is assigned a value but never used.","'FormLabel' is defined but never used.",[0,12],"","no-global-assign","no-unsafe-negation",{"messageId":"498","fix":"499","desc":"500"},{"messageId":"501","fix":"502","desc":"503"},{"messageId":"498","fix":"504","desc":"500"},{"messageId":"501","fix":"505","desc":"503"},"removeEscape",{"range":"506","text":"491"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"507","text":"508"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"509","text":"491"},{"range":"510","text":"508"},[831,832],[831,831],"\\",[856,857],[856,856]]